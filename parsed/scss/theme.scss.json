{"theme.scss":"/*! Theme: Exhibit v1.11.1 */\r\n// ================================================================ */\r\n// Libraries / External Imports\r\n\r\n/* scss-combine:../../node_modules/normalize.scss/normalize */\r\n/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */\r\n\r\n/**\r\n * 1. Set default font family to sans-serif.\r\n * 2. Prevent iOS text size adjust after orientation change, without disabling\r\n *    user zoom.\r\n */\r\n\r\nhtml {\r\n  font-family: sans-serif; /* 1 */\r\n  -ms-text-size-adjust: 100%; /* 2 */\r\n  -webkit-text-size-adjust: 100%; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove default margin.\r\n */\r\n\r\nbody {\r\n  margin: 0;\r\n}\r\n\r\n/* HTML5 display definitions\r\n   ========================================================================== */\r\n\r\n/**\r\n * Correct `block` display not defined for any HTML5 element in IE 8/9.\r\n * Correct `block` display not defined for `details` or `summary` in IE 10/11\r\n * and Firefox.\r\n * Correct `block` display not defined for `main` in IE 11.\r\n */\r\n\r\narticle,\r\naside,\r\ndetails,\r\nfigcaption,\r\nfigure,\r\nfooter,\r\nheader,\r\nhgroup,\r\nmain,\r\nmenu,\r\nnav,\r\nsection,\r\nsummary {\r\n  display: block;\r\n}\r\n\r\n/**\r\n * 1. Correct `inline-block` display not defined in IE 8/9.\r\n * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\r\n */\r\n\r\naudio,\r\ncanvas,\r\nprogress,\r\nvideo {\r\n  display: inline-block; /* 1 */\r\n  vertical-align: baseline; /* 2 */\r\n}\r\n\r\n/**\r\n * Prevent modern browsers from displaying `audio` without controls.\r\n * Remove excess height in iOS 5 devices.\r\n */\r\n\r\naudio:not([controls]) {\r\n  display: none;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n * Address `[hidden]` styling not present in IE 8/9/10.\r\n * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\r\n */\r\n\r\n[hidden],\r\ntemplate {\r\n  display: none;\r\n}\r\n\r\n/* Links\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove the gray background color from active links in IE 10.\r\n */\r\n\r\na {\r\n  background-color: transparent;\r\n}\r\n\r\n/**\r\n * Improve readability when focused and also mouse hovered in all browsers.\r\n */\r\n\r\na:active,\r\na:hover {\r\n  outline: 0;\r\n}\r\n\r\n/* Text-level semantics\r\n   ========================================================================== */\r\n\r\n/**\r\n * Address styling not present in IE 8/9/10/11, Safari, and Chrome.\r\n */\r\n\r\nabbr[title] {\r\n  border-bottom: 1px dotted;\r\n}\r\n\r\n/**\r\n * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nb,\r\nstrong {\r\n  font-weight: bold;\r\n}\r\n\r\n/**\r\n * Address styling not present in Safari and Chrome.\r\n */\r\n\r\ndfn {\r\n  font-style: italic;\r\n}\r\n\r\n/**\r\n * Address variable `h1` font-size and margin within `section` and `article`\r\n * contexts in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nh1 {\r\n  font-size: 2em;\r\n  margin: 0.67em 0;\r\n}\r\n\r\n/**\r\n * Address styling not present in IE 8/9.\r\n */\r\n\r\nmark {\r\n  background: #ff0;\r\n  color: #000;\r\n}\r\n\r\n/**\r\n * Address inconsistent and variable font size in all browsers.\r\n */\r\n\r\nsmall {\r\n  font-size: 80%;\r\n}\r\n\r\n/**\r\n * Prevent `sub` and `sup` affecting `line-height` in all browsers.\r\n */\r\n\r\nsub,\r\nsup {\r\n  font-size: 75%;\r\n  line-height: 0;\r\n  position: relative;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\n/* Embedded content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove border when inside `a` element in IE 8/9/10.\r\n */\r\n\r\nimg {\r\n  border: 0;\r\n}\r\n\r\n/**\r\n * Correct overflow not hidden in IE 9/10/11.\r\n */\r\n\r\nsvg:not(:root) {\r\n  overflow: hidden;\r\n}\r\n\r\n/* Grouping content\r\n   ========================================================================== */\r\n\r\n/**\r\n * Address margin not present in IE 8/9 and Safari.\r\n */\r\n\r\nfigure {\r\n  margin: 1em 40px;\r\n}\r\n\r\n/**\r\n * Address differences between Firefox and other browsers.\r\n */\r\n\r\nhr {\r\n  -moz-box-sizing: content-box;\r\n  box-sizing: content-box;\r\n  height: 0;\r\n}\r\n\r\n/**\r\n * Contain overflow in all browsers.\r\n */\r\n\r\npre {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n * Address odd `em`-unit font size rendering in all browsers.\r\n */\r\n\r\ncode,\r\nkbd,\r\npre,\r\nsamp {\r\n  font-family: monospace, monospace;\r\n  font-size: 1em;\r\n}\r\n\r\n/* Forms\r\n   ========================================================================== */\r\n\r\n/**\r\n * Known limitation: by default, Chrome and Safari on OS X allow very limited\r\n * styling of `select`, unless a `border` property is set.\r\n */\r\n\r\n/**\r\n * 1. Correct color not being inherited.\r\n *    Known issue: affects color of disabled elements.\r\n * 2. Correct font properties not being inherited.\r\n * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.\r\n */\r\n\r\nbutton,\r\ninput,\r\noptgroup,\r\nselect,\r\ntextarea {\r\n  color: inherit; /* 1 */\r\n  font: inherit; /* 2 */\r\n  margin: 0; /* 3 */\r\n}\r\n\r\n/**\r\n * Address `overflow` set to `hidden` in IE 8/9/10/11.\r\n */\r\n\r\nbutton {\r\n  overflow: visible;\r\n}\r\n\r\n/**\r\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\r\n * All other form control elements do not inherit `text-transform` values.\r\n * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\r\n * Correct `select` style inheritance in Firefox.\r\n */\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none;\r\n}\r\n\r\n/**\r\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\r\n *    and `video` controls.\r\n * 2. Correct inability to style clickable `input` types in iOS.\r\n * 3. Improve usability and consistency of cursor style between image-type\r\n *    `input` and others.\r\n */\r\n\r\nbutton,\r\nhtml input[type=\"button\"], /* 1 */\r\ninput[type=\"reset\"],\r\ninput[type=\"submit\"] {\r\n  -webkit-appearance: button; /* 2 */\r\n  cursor: pointer; /* 3 */\r\n}\r\n\r\n/**\r\n * Re-set default cursor for disabled elements.\r\n */\r\n\r\nbutton[disabled],\r\nhtml input[disabled] {\r\n  cursor: default;\r\n}\r\n\r\n/**\r\n * Remove inner padding and border in Firefox 4+.\r\n */\r\n\r\nbutton::-moz-focus-inner,\r\ninput::-moz-focus-inner {\r\n  border: 0;\r\n  padding: 0;\r\n}\r\n\r\n/**\r\n * Address Firefox 4+ setting `line-height` on `input` using `!important` in\r\n * the UA stylesheet.\r\n */\r\n\r\ninput {\r\n  line-height: normal;\r\n}\r\n\r\n/**\r\n * It's recommended that you don't attempt to style these elements.\r\n * Firefox's implementation doesn't respect box-sizing, padding, or width.\r\n *\r\n * 1. Address box sizing set to `content-box` in IE 8/9/10.\r\n * 2. Remove excess padding in IE 8/9/10.\r\n */\r\n\r\ninput[type=\"checkbox\"],\r\ninput[type=\"radio\"] {\r\n  box-sizing: border-box; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Fix the cursor style for Chrome's increment/decrement buttons. For certain\r\n * `font-size` values of the `input`, it causes the cursor style of the\r\n * decrement button to change from `default` to `text`.\r\n */\r\n\r\ninput[type=\"number\"]::-webkit-inner-spin-button,\r\ninput[type=\"number\"]::-webkit-outer-spin-button {\r\n  height: auto;\r\n}\r\n\r\n/**\r\n * 1. Address `appearance` set to `searchfield` in Safari and Chrome.\r\n * 2. Address `box-sizing` set to `border-box` in Safari and Chrome\r\n *    (include `-moz` to future-proof).\r\n */\r\n\r\ninput[type=\"search\"] {\r\n  -webkit-appearance: textfield; /* 1 */\r\n  -moz-box-sizing: content-box;\r\n  -webkit-box-sizing: content-box; /* 2 */\r\n  box-sizing: content-box;\r\n}\r\n\r\n/**\r\n * Remove inner padding and search cancel button in Safari and Chrome on OS X.\r\n * Safari (but not Chrome) clips the cancel button when the search input has\r\n * padding (and `textfield` appearance).\r\n */\r\n\r\ninput[type=\"search\"]::-webkit-search-cancel-button,\r\ninput[type=\"search\"]::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n/**\r\n * Define consistent border, margin, and padding.\r\n */\r\n\r\nfieldset {\r\n  border: 1px solid #c0c0c0;\r\n  margin: 0 2px;\r\n  padding: 0.35em 0.625em 0.75em;\r\n}\r\n\r\n/**\r\n * 1. Correct `color` not being inherited in IE 8/9/10/11.\r\n * 2. Remove padding so people aren't caught out if they zero out fieldsets.\r\n */\r\n\r\nlegend {\r\n  border: 0; /* 1 */\r\n  padding: 0; /* 2 */\r\n}\r\n\r\n/**\r\n * Remove default vertical scrollbar in IE 8/9/10/11.\r\n */\r\n\r\ntextarea {\r\n  overflow: auto;\r\n}\r\n\r\n/**\r\n * Don't inherit the `font-weight` (applied by a rule above).\r\n * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\r\n */\r\n\r\noptgroup {\r\n  font-weight: bold;\r\n}\r\n\r\n/* Tables\r\n   ========================================================================== */\r\n\r\n/**\r\n * Remove most spacing between table cells.\r\n */\r\n\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n\r\ntd,\r\nth {\r\n  padding: 0;\r\n}\r\n\r\n/* scss-combine:../../node_modules/susy/sass/susy */\r\n// Susy\r\n// ====\r\n\r\n/* scss-combine:susy/language/susy */\r\n// Susy Next Syntax\r\n// ================\r\n\r\n$susy-version: 2.1;\r\n\r\n/* scss-combine:../su */\r\n// Su\r\n// ==\r\n\r\n/* scss-combine:su/utilities */\r\n// Map Functions\r\n// =============\r\n\r\n\r\n// Truncate List\r\n// -------------\r\n// - Return a list, truncated to a given length\r\n@function _susy-truncate-list(\r\n  $list,\r\n  $length\r\n) {\r\n  $_return: ();\r\n\r\n  @for $i from 1 through length($list) {\r\n    $_return: if($i <= $length, append($_return, nth($list, $i)), $_return);\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Deep Get\r\n// --------\r\n// - Return a value deep in nested maps\r\n@function _susy-deep-get(\r\n  $map,\r\n  $keys...\r\n) {\r\n  $_return: $map;\r\n\r\n  @each $key in $keys {\r\n    @if type-of($_return) == map {\r\n      $_return: map-get($_return, $key);\r\n    }\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Deep Set\r\n// --------\r\n// - Set a value deep in nested maps\r\n@function _susy-deep-set(\r\n  $map,\r\n  $keys-value...\r\n) {\r\n  $_value: nth($keys-value, -1);\r\n  $_keys: _susy-truncate-list($keys-value, length($keys-value) - 1);\r\n  $_length: length($_keys);\r\n  $_return: ();\r\n\r\n  @for $i from 1 through $_length {\r\n    $_n: 0 - $i;\r\n    $_level: _susy-truncate-list($_keys, $_length + $_n);\r\n    $_level: _susy-deep-get($map, $_level...);\r\n    $_merge: nth($_keys, $_n);\r\n    $_merge: ($_merge: $_value);\r\n    $_return: if($_level, map-merge($_level, $_merge), $_merge);\r\n    $_value: $_return;\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Deep Merge\r\n// ----------\r\n// Return 2 objects of any depth, merged\r\n@function _susy-deep-merge(\r\n  $map1,\r\n  $map2\r\n) {\r\n\r\n  @if type-of($map1) != map or type-of($map2) != map {\r\n    $map1: $map2;\r\n  } @else {\r\n    @each $key, $value in $map2 {\r\n      $_new: ($key: _susy_deep-merge(map-get($map1, $key), $value));\r\n      $map1: map-merge($map1, $_new);\r\n    }\r\n  }\r\n\r\n  @return $map1;\r\n}\r\n\r\n\r\n// Deep Has-Key\r\n// ------------\r\n// - Return true if a deep key exists\r\n@function _susy-deep-has-key(\r\n  $map,\r\n  $keys...\r\n) {\r\n  $_return: null;\r\n  $_stop: false;\r\n\r\n  @each $key in $keys {\r\n    @if not($_stop) {\r\n      $_return: map-has-key($map, $key);\r\n    }\r\n\r\n    @if $_return {\r\n      $map: map-get($map, $key);\r\n    } @else {\r\n      $_stop: true;\r\n    }\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n/* scss-combine:su/settings */\r\n// Settings\r\n// ========\r\n\r\n// Version\r\n// -------\r\n$su-version: 1.1;\r\n\r\n\r\n// Default Settings\r\n// ----------------\r\n// PRIVATE: The basic settings\r\n$susy-defaults: (\r\n  columns: 4,\r\n  gutters: .25,\r\n);\r\n\r\n\r\n// User Settings\r\n// -------------\r\n// - Define the $susy variable with a map of your own settings.\r\n// - Set EITHER $column-width OR $container\r\n// - Use $column-width for static layouts\r\n$susy: () !default;\r\n\r\n\r\n// Susy Defaults\r\n// -------------\r\n// PRIVATE: Add defaults to Susy\r\n@mixin susy-defaults(\r\n  $defaults\r\n) {\r\n  $susy-defaults: map-merge($susy-defaults, $defaults) !global;\r\n}\r\n\r\n\r\n// Susy Set\r\n// --------\r\n// Change one setting\r\n// - $key   : setting name\r\n// - $value : setting value\r\n@mixin susy-set(\r\n  $key-value...\r\n) {\r\n  $susy: _susy-deep-set($susy, $key-value...) !global;\r\n}\r\n\r\n\r\n// Susy Get\r\n// --------\r\n// Return one setting from a grid\r\n// - $key     : <keyword>\r\n// - $layout  : <settings>\r\n@function susy-get(\r\n  $key,\r\n  $layout: map-merge($susy-defaults, $susy)\r\n) {\r\n  $layout: parse-grid($layout);\r\n  $_options: $layout $susy $susy-defaults;\r\n  $_break: false;\r\n  $_return: null;\r\n\r\n  @each $opt in $_options {\r\n    @if type-of($opt) == map and not($_break) {\r\n      $_keyset: _susy-deep-has-key($opt, $key...);\r\n      @if $_keyset {\r\n        $_return: _susy-deep-get($opt, $key...);\r\n        $_break: true;\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n/* scss-combine:su/validation */\r\n// Math Validation\r\n// ===============\r\n\r\n\r\n// Valid Columns\r\n// -------------\r\n// Check that a column setting is valid.\r\n@function valid-columns(\r\n  $columns,\r\n  $silent: false\r\n) {\r\n  $type: type-of($columns);\r\n  $return: null;\r\n\r\n  @if $type == number and unitless($columns) {\r\n    $return: $columns;\r\n  } @else if $type == list {\r\n    $fail: null;\r\n    @each $col in $columns {\r\n      @if type-of($col) == number {\r\n        $fail: $fail or if(unitless($col), null, true);\r\n      } @else {\r\n        $fail: true;\r\n      }\r\n    }\r\n    $return: if($fail, $return, $columns);\r\n  }\r\n\r\n  @if $return != $columns and not($silent) {\r\n    $return: null;\r\n    $warn: '$columns must be a unitless number or list of unitless numbers.';\r\n    @warn $warn + ' Current value [#{$type}]: #{$columns}';\r\n  }\r\n\r\n  @return $return;\r\n}\r\n\r\n\r\n// Valid Gutters\r\n// -------------\r\n// Check that a gutter setting is valid.\r\n@function valid-gutters(\r\n  $gutters,\r\n  $silent: false\r\n) {\r\n  $type: type-of($gutters);\r\n  $return: null;\r\n\r\n  @if $type == number and unitless($gutters) {\r\n    $return: $gutters;\r\n  } @else if not($silent) {\r\n    $warn: '$gutters must be a unitless number.';\r\n    @warn $warn + ' Current value [#{$type}]: #{$gutters}';\r\n  }\r\n\r\n  @return $return;\r\n}\r\n\r\n/* scss-combine:su/grid */\r\n// Column math\r\n// ===========\r\n\r\n\r\n// Is Symmetrical\r\n// --------------\r\n// Returns true if a grid is symmetrical.\r\n// - [$columns]   : <number> | <list>\r\n@function is-symmetrical(\r\n  $columns: susy-get(columns)\r\n) {\r\n  $columns: valid-columns($columns);\r\n  @return if(type-of($columns) == number, $columns, null);\r\n}\r\n\r\n\r\n// Susy Count\r\n// ----------\r\n// Find the number of columns in a given layout\r\n// - [$columns]   : <number> | <list>\r\n@function susy-count(\r\n  $columns: susy-get(columns)\r\n) {\r\n  $columns: valid-columns($columns);\r\n  @return is-symmetrical($columns) or length($columns);\r\n}\r\n\r\n\r\n// Susy Sum\r\n// --------\r\n// Find the total sum of column-units in a layout\r\n// - [$columns]   : <number> | <list>\r\n// - [$gutters]   : <ratio>\r\n// - [$spread]    : false/narrow | wide | wider\r\n@function susy-sum(\r\n  $columns  : susy-get(columns),\r\n  $gutters  : susy-get(gutters),\r\n  $spread   : false\r\n) {\r\n  $columns: valid-columns($columns);\r\n  $gutters: valid-gutters($gutters);\r\n\r\n  $spread: if($spread == wide, 0, if($spread == wider, 1, -1));\r\n  $gutter-sum: (susy-count($columns) + $spread) * $gutters;\r\n  $column-sum: is-symmetrical($columns);\r\n\r\n  @if not($column-sum) {\r\n    @each $column in $columns {\r\n      $column-sum: ($column-sum or 0) + $column;\r\n    }\r\n  }\r\n\r\n  @return $column-sum + $gutter-sum;\r\n}\r\n\r\n\r\n// Susy Slice\r\n// ----------\r\n// Return a subset of columns at a given location.\r\n// - $span        : <number>\r\n// - $location    : <number>\r\n// - [$columns]   : <number> | <list>\r\n@function susy-slice(\r\n  $span,\r\n  $location,\r\n  $columns: susy-get(columns)\r\n) {\r\n  $columns: valid-columns($columns);\r\n  $sub-columns: $span;\r\n\r\n  @if not(is-symmetrical($columns)) {\r\n    $location: $location or 1;\r\n    $sub-columns: ();\r\n    @for $i from $location to ($location + $span) {\r\n      $sub-columns: append($sub-columns, nth($columns, $i));\r\n    }\r\n  }\r\n\r\n  @return $sub-columns;\r\n}\r\n\r\n\r\n// Susy\r\n// ----\r\n// Find the sum of a column-span.\r\n// - $span        : <number>\r\n// - $location    : <number>\r\n// - [$columns]   : <number> | <list>\r\n// - [$gutters]   : <ratio>\r\n// - [$spread]    : false/narrow | wide | wider\r\n@function susy(\r\n  $span,\r\n  $location     : false,\r\n  $columns      : susy-get(columns),\r\n  $gutters      : susy-get(gutters),\r\n  $spread       : false\r\n) {\r\n  $columns: valid-columns($columns);\r\n  $gutters: valid-gutters($gutters);\r\n  $span: susy-slice($span, $location, $columns);\r\n\r\n  @return susy-sum($span, $gutters, $spread);\r\n}\r\n\r\n\r\n/* scss-combine:../output/float */\r\n// Float API\r\n// =========\r\n\r\n/* scss-combine:shared */\r\n// Shared API\r\n// ==========\r\n\r\n/* scss-combine:support */\r\n// Susy Browser Support\r\n// ====================\r\n\r\n/* scss-combine:support/support */\r\n// Browser Support\r\n// ===============\r\n\r\n// Susy Support Defaults\r\n// ---------------------\r\n@include susy-defaults((\r\n  use-custom: (\r\n    clearfix: false,\r\n    background-image: true,\r\n    background-options: false,\r\n    breakpoint: true,\r\n    box-sizing: true,\r\n    rem: true,\r\n  ),\r\n));\r\n\r\n\r\n// Susy Support [mixin]\r\n// --------------------\r\n// Send property-value pairs to the proper support modules.\r\n// - $prop  : <css property>\r\n// - $val   : <css value>\r\n@mixin susy-support(\r\n  $prop,\r\n  $val\r\n) {\r\n  // Background Support\r\n  @if $prop == background-image {\r\n    @include susy-background-image($val);\r\n  } @else if $prop == background-size {\r\n    @include susy-background-size($val);\r\n  } @else if $prop == background-origin {\r\n    @include susy-background-origin($val);\r\n  } @else if $prop == background-clip {\r\n    @include susy-background-clip($val);\r\n  }\r\n\r\n  // Box-Sizing Support\r\n  @else if $prop == box-sizing {\r\n    @include susy-box-sizing($val);\r\n  }\r\n\r\n  // Rem Support\r\n  @else {\r\n    @include susy-rem($prop, $val);\r\n  }\r\n}\r\n\r\n\r\n// Susy Support [function]\r\n// -----------------------\r\n// Check for support of a feature.\r\n// - $feature       : <string>\r\n//                    - e.g \"rem\" or \"box-sizing\"\r\n// - $requirements  : <map>\r\n//                    - e.g (variable: rem-with-px-fallback, mixin: rem)\r\n// - $warn          : <bool>\r\n@function susy-support(\r\n  $feature,\r\n  $requirements: (),\r\n  $warn: true\r\n) {\r\n  $_support: susy-get(use-custom $feature);\r\n\r\n  @if $_support {\r\n    $_fail: false;\r\n\r\n    @each $_type, $_req in $requirements {\r\n      @each $_i in $_req {\r\n        $_pass: call(unquote(\"#{$_type}-exists\"), $_i);\r\n\r\n        @if not($_pass) {\r\n          $_fail: true;\r\n          @if $warn {\r\n            @warn \"You requested custom support of #{$feature}, but the #{$_i} #{$_type} is not available.\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    $_support: if($_fail, false, $_support);\r\n  }\r\n\r\n  @return $_support;\r\n}\r\n\r\n/* scss-combine:support/prefix */\r\n// Susy Prefix\r\n// ===========\r\n\r\n// Prefix\r\n// ------\r\n// Output simple prefixed properties.\r\n// - $prop      : <css property>\r\n// - $val       : <css value>\r\n// - [$prefix]  : <browser prefix list>\r\n@mixin susy-prefix(\r\n  $prop,\r\n  $val,\r\n  $prefix: official\r\n) {\r\n  @each $fix in $prefix {\r\n    $fix: if($fix == official or not($fix), $prop, '-#{$fix}-#{$prop}');\r\n    @include susy-rem($fix, $val);\r\n  }\r\n}\r\n\r\n/* scss-combine:support/background */\r\n// Background Properties\r\n// =====================\r\n\r\n// Susy Background Image\r\n// ---------------------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $image: <background-image>\r\n@mixin susy-background-image(\r\n  $image\r\n) {\r\n  @if susy-support(background-image, (mixin: background-image), $warn: false) {\r\n    @include background-image($image...);\r\n  } @else {\r\n    background-image: $image;\r\n  }\r\n}\r\n\r\n// Susy Background Size\r\n// ---------------------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $image: <background-size>\r\n@mixin susy-background-size(\r\n  $size\r\n) {\r\n  @if susy-support(background-options, (mixin: background-size)) {\r\n    @include background-size($size);\r\n  } @else {\r\n    background-size: $size;\r\n  }\r\n}\r\n\r\n// Susy Background Origin\r\n// ----------------------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $image: <background-origin>\r\n@mixin susy-background-origin(\r\n  $origin\r\n) {\r\n  @if susy-support(background-options, (mixin: background-origin)) {\r\n    @include background-origin($origin);\r\n  } @else {\r\n    background-origin: $origin;\r\n  }\r\n}\r\n\r\n// Susy Background Clip\r\n// --------------------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $image: <background-clip>\r\n@mixin susy-background-clip(\r\n  $clip\r\n) {\r\n  @if susy-support(background-options, (mixin: background-clip)) {\r\n    @include background-clip($clip);\r\n  } @else {\r\n    background-clip: $clip;\r\n  }\r\n}\r\n\r\n/* scss-combine:support/box-sizing */\r\n// Box Sizing\r\n// ==========\r\n\r\n// Box Sizing\r\n// ----------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n// - $model: <box-sizing>\r\n@mixin susy-box-sizing(\r\n  $model: content-box\r\n) {\r\n  @if $model {\r\n    @if susy-support(box-sizing, (mixin: box-sizing), $warn: false) {\r\n      @include box-sizing($model);\r\n    } @else {\r\n      $prefix: (moz, webkit, official);\r\n      @include susy-prefix(box-sizing, $model, $prefix);\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:support/rem */\r\n// rem Support\r\n// ===========\r\n\r\n// rem\r\n// ---\r\n// Check for an existing support mixin, or output directly.\r\n// - $prop  : <css property>\r\n// - $val   : <css value>\r\n@mixin susy-rem(\r\n  $prop,\r\n  $val\r\n) {\r\n  $_reqs: (\r\n    variable: rhythm-unit rem-with-px-fallback,\r\n    mixin: rem,\r\n  );\r\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\r\n    @include rem($prop, $val);\r\n  } @else {\r\n    #{$prop}: $val;\r\n  }\r\n}\r\n\r\n/* scss-combine:support/clearfix */\r\n// Susy Fallback Clearfix\r\n// ======================\r\n\r\n\r\n// Clearfix\r\n// --------\r\n// Check for an existing support mixin, or provide a simple fallback.\r\n@mixin susy-clearfix {\r\n  @if susy-support(clearfix, (mixin: clearfix)) {\r\n    @include clearfix;\r\n  } @else {\r\n    &:after {\r\n      content: \" \";\r\n      display: block;\r\n      clear: both;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n/* scss-combine:shared/inspect */\r\n// Debugging\r\n// =========\r\n\r\n// Susy Inspect\r\n// ------------\r\n// Output arguments passed to a inspect.\r\n// - $mixin  : <susy mixin>\r\n// - $inspec   : <mixin arguments>\r\n\r\n@mixin susy-inspect(\r\n  $mixin,\r\n  $inspect\r\n) {\r\n  $show: false;\r\n\r\n  @each $item in $inspect {\r\n    @if index($item, inspect) {\r\n      $show: true;\r\n    }\r\n  }\r\n\r\n  @if $show or susy-get(debug inspect) {\r\n    -susy-#{$mixin}: inspect($inspect);\r\n  }\r\n}\r\n\r\n/* scss-combine:shared/output */\r\n// Output\r\n// ======\r\n\r\n// Output\r\n// ------\r\n// Output CSS with proper browser support.\r\n// - $styles  : <map of css property-value pairs>\r\n@mixin output(\r\n  $styles\r\n) {\r\n  @each $prop, $val in $styles {\r\n    @include susy-support($prop, $val);\r\n  }\r\n}\r\n\r\n/* scss-combine:shared/direction */\r\n// Direction Helpers\r\n// =================\r\n\r\n// Susy Flow Defaults\r\n// ------------------\r\n// - PRIVATE\r\n@include susy-defaults((\r\n  flow: ltr,\r\n));\r\n\r\n// Get Direction\r\n// -------------\r\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\r\n// - [$flow]  : ltr | rtl\r\n// - [$key]   : from | to\r\n@function get-direction(\r\n  $flow: map-get($susy-defaults, flow),\r\n  $key: from\r\n) {\r\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\r\n  @return map-get($return, $key);\r\n}\r\n\r\n// To\r\n// --\r\n// Return the 'to' direction of a flow\r\n// - [$flow]  : ltr | rtl\r\n@function to(\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  @return get-direction($flow, to);\r\n}\r\n\r\n// From\r\n// ----\r\n// Return the 'from' direction of a flow\r\n// - [$flow]  : ltr | rtl\r\n@function from(\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  @return get-direction($flow, from);\r\n}\r\n\r\n/* scss-combine:shared/background */\r\n// Grid Background API\r\n// ===================\r\n// - Sub-pixel rounding can lead to several pixels variation between browsers.\r\n\r\n// Grid Background Output\r\n// ----------------------\r\n// - $image: background-image\r\n// - $size: background-size\r\n// - $clip: background-clip\r\n// - [$flow]: ltr | rtl\r\n@mixin background-grid-output (\r\n  $image,\r\n  $size: null,\r\n  $clip: null,\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $output: (\r\n    background-image: $image,\r\n    background-size: $size,\r\n    background-origin: $clip,\r\n    background-clip: $clip,\r\n    background-position: from($flow) top,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:shared/container */\r\n// Shared Container API\r\n// ====================\r\n\r\n// Container Output\r\n// ----------------\r\n// - [$width]         : <length>\r\n// - [$justify]       : left | center | right\r\n// - [$math]          : fluid | static\r\n@mixin container-output(\r\n  $width,\r\n  $justify: auto auto,\r\n  $property: max-width\r\n) {\r\n  $output: (\r\n    #{$property}: $width or 100%,\r\n    margin-left: nth($justify, 1),\r\n    margin-right: nth($justify, 2),\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:shared/margins */\r\n// Margins API\r\n// ===========\r\n\r\n// Margin Output\r\n// -------------\r\n// - $before  : <length>\r\n// - $after   : <length>\r\n// - [$flow]  : ltr | rtl\r\n@mixin margin-output(\r\n  $before,\r\n  $after,\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $to: to($flow);\r\n  $from: from($flow);\r\n\r\n  $output: (\r\n    margin-#{$from}: $before,\r\n    margin-#{$to}: $after,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:shared/padding */\r\n// Padding API\r\n// ===========\r\n\r\n// Padding Output\r\n// --------------\r\n// - $before  : <length>\r\n// - $after   : <length>\r\n// - [$flow]  : ltr | rtl\r\n@mixin padding-output(\r\n  $before,\r\n  $after,\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $to: to($flow);\r\n  $from: from($flow);\r\n\r\n  $output: (\r\n    padding-#{$from}: $before,\r\n    padding-#{$to}: $after,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* scss-combine:float/container */\r\n// Float Container API\r\n// ===================\r\n\r\n// Float Container\r\n// ---------------\r\n// - [$width]         : <length>\r\n// - [$justify]       : left | center | right\r\n// - [$math]   : fluid | static\r\n@mixin float-container(\r\n  $width,\r\n  $justify: auto auto,\r\n  $property: max-width\r\n) {\r\n  @include susy-clearfix;\r\n  @include container-output($width, $justify, $property);\r\n}\r\n\r\n/* scss-combine:float/span */\r\n// Float Span API\r\n// ==============\r\n\r\n// Float Span Output\r\n// -----------------\r\n// - $width             : <length>\r\n// - [$float]           : from | to\r\n// - [$margin-before]   : <length>\r\n// - [$margin-after]    : <length>\r\n// - [$padding-before]  : <length>\r\n// - [$padding-after]   : <length>\r\n// - [$flow]            : ltr | rtl\r\n@mixin float-span-output(\r\n  $width,\r\n  $float            : from,\r\n  $margin-before    : null,\r\n  $margin-after     : null,\r\n  $padding-before   : null,\r\n  $padding-after    : null,\r\n  $flow             : map-get($susy-defaults, flow)\r\n) {\r\n  $to     : to($flow);\r\n  $from   : from($flow);\r\n\r\n  $output: (\r\n    width: $width,\r\n    float: if($float == to, $to, null) or if($float == from, $from, null),\r\n    margin-#{$from}: $margin-before,\r\n    margin-#{$to}: $margin-after,\r\n    padding-#{$from}: $padding-before,\r\n    padding-#{$to}: $padding-after,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:float/end */\r\n// Float Ends API\r\n// ==============\r\n\r\n// Susy End Defaults\r\n// -----------------\r\n// - PRIVATE\r\n@include susy-defaults((\r\n  last-flow: to,\r\n));\r\n\r\n// Float Last\r\n// ----------\r\n// - [$flow]  : ltr | rtl\r\n@mixin float-last(\r\n  $flow: map-get($susy-defaults, flow),\r\n  $last-flow: map-get($susy-defaults, last-flow),\r\n  $margin: 0\r\n) {\r\n  $to: to($flow);\r\n\r\n  $output: (\r\n    float: if($last-flow == to, $to, null),\r\n    margin-#{$to}: $margin,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n// Float First\r\n// -----------\r\n// - [$flow]  : ltr | rtl\r\n@mixin float-first(\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $output: (\r\n    margin-#{from($flow)}: 0,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n/* scss-combine:float/isolate */\r\n// Float Isolation API\r\n// ===================\r\n\r\n// Isolate Output\r\n// --------------\r\n// - $push    : <length>\r\n// - [$flow]  : ltr | rtl\r\n@mixin isolate-output(\r\n  $push,\r\n  $flow: map-get($susy-defaults, flow)\r\n) {\r\n  $to: to($flow);\r\n  $from: from($flow);\r\n\r\n  $output: (\r\n    float: $from,\r\n    margin-#{$from}: $push,\r\n    margin-#{$to}: -100%,\r\n  );\r\n\r\n  @include output($output);\r\n}\r\n\r\n\r\n\r\n/* scss-combine:susy/settings */\r\n// Susy Settings\r\n// =============\r\n\r\n// Susy Language Defaults\r\n// ----------------------\r\n// - PRIVATE\r\n@include susy-defaults((\r\n  container: auto,\r\n  math: fluid,\r\n  output: float,\r\n  container-position: center,\r\n  gutter-position: after,\r\n  global-box-sizing: content-box,\r\n  debug: (\r\n    image: hide,\r\n    color: rgba(#66f, .25),\r\n    output: background,\r\n    toggle: top right,\r\n  ),\r\n));\r\n\r\n\r\n// Valid Keyword Values\r\n// --------------------\r\n// - PRIVATE: DONT'T TOUCH\r\n$susy-keywords: (\r\n  container: auto,\r\n  math: static fluid,\r\n  output: isolate float,\r\n  container-position: left center right,\r\n  flow: ltr rtl,\r\n  gutter-position: before after split inside inside-static,\r\n  box-sizing: border-box content-box,\r\n  span: full,\r\n  edge: first alpha last omega full,\r\n  spread: narrow wide wider,\r\n  gutter-override: no-gutters no-gutter,\r\n  role: nest,\r\n  clear: break nobreak,\r\n  debug image: show hide show-columns show-baseline,\r\n  debug output: background overlay,\r\n);\r\n\r\n\r\n// Parse Susy Keywords and Maps\r\n// ----------------------------\r\n@function parse-settings(\r\n  $short: $susy\r\n) {\r\n  $_return: ();\r\n\r\n  @if type-of($short) == map {\r\n    $_return: $short;\r\n  } @else {\r\n    @each $item in $short {\r\n      // strings\r\n      @if type-of($item) == string {\r\n        @each $key, $value in $susy-keywords {\r\n          @if index($value, $item) {\r\n            $_key-value: append($key, $item);\r\n            $_return: _susy-deep-set($_return, $_key-value...);\r\n          }\r\n        }\r\n      // maps\r\n      } @else if type-of($item) == map {\r\n        $_return: map-merge($_return, $item);\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Parse Columns & Gutters\r\n// -----------------------\r\n@function parse-layout(\r\n  $short\r\n) {\r\n  $_return: ();\r\n  $_columns: ();\r\n  $_gutters: null;\r\n\r\n  @if not(unitless(nth(nth($short, 1), 1))) {\r\n    $_gutters: nth($short, 1);\r\n  } @else {\r\n    $_columns: (columns: nth($short, 1));\r\n    $_gutters: if(length($short) > 1, nth($short, 2), $_gutters);\r\n  }\r\n\r\n  @if type-of($_gutters) == list and length($_gutters) > 0 {\r\n    $_gutters: (\r\n      gutters: nth($_gutters, 2) / nth($_gutters, 1),\r\n      column-width: nth($_gutters, 1),\r\n    );\r\n  } @else {\r\n    $_gutters: if($_gutters, (gutters: $_gutters), ());\r\n  }\r\n\r\n  $_return: map-merge($_return, $_columns);\r\n  $_return: map-merge($_return, $_gutters);\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Parse Grid/Context\r\n// ------------------\r\n@function parse-grid(\r\n  $short: $susy\r\n) {\r\n  $_return: parse-settings($short);\r\n  $_layout: ();\r\n\r\n  @if type-of($short) == map {\r\n    $_return: $short;\r\n  } @else {\r\n    @each $item in $short {\r\n      // number or list\r\n      @if type-of($item) == number or type-of($item) == list {\r\n        @if type-of($item) == list or unitless($item) {\r\n          $_layout: append($_layout, $item);\r\n        } @else {\r\n          $_return: map-merge($_return, (container: $item));\r\n        }\r\n      }\r\n    }\r\n\r\n    $_layout: if(length($_layout) > 0, parse-layout($_layout), $_layout);\r\n  }\r\n\r\n  @return map-merge($_return, $_layout);\r\n}\r\n\r\n\r\n// Parse Span\r\n// ----------\r\n@function parse-span(\r\n  $short,\r\n  $key: span\r\n) {\r\n  $_return: ();\r\n\r\n  @if type-of($short) == map {\r\n    $_return: $short;\r\n  } @else {\r\n    $_at: index($short, at);\r\n\r\n    @if $_at {\r\n      $_loci: $_at + 1;\r\n      $_location: nth($short, $_loci);\r\n      $_return: map-merge($_return, (location: $_location));\r\n      $short: set-nth($short, $_at, null);\r\n      $short: set-nth($short, $_loci, null);\r\n    }\r\n\r\n    $_i: 1;\r\n    $_span: ();\r\n\r\n    @while $_i <= length($short) {\r\n      $_this: nth($short, $_i);\r\n\r\n      @if type-of($_this) == number {\r\n        $_span: append($_span, $_this);\r\n        $short: set-nth($short, $_i, null);\r\n      } @else if $_this == of {\r\n        $short: set-nth($short, $_i, null);\r\n        $_i: length($short) + 1;\r\n      }\r\n\r\n      $_i: $_i + 1;\r\n    }\r\n\r\n    @if length($_span) > 0 {\r\n      $_span: if(length($_span) == 1, nth($_span, 1), $_span);\r\n      $_return: map-merge($_return, ($key: $_span));\r\n    }\r\n\r\n    $_return: map-merge($_return, parse-grid($short));\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Parse Gutters\r\n// -------------\r\n@function parse-gutters(\r\n  $short: $susy\r\n) {\r\n  $_gutters: parse-span($short, gutter-override);\r\n  $_span: susy-get(gutter-override, $_gutters);\r\n\r\n  @if $_span and not(map-get($_gutters, columns)) {\r\n    $_context: ();\r\n    $_new: ();\r\n\r\n    @each $item in $_span {\r\n      @if type-of($item) == number and unitless($item) {\r\n        $_context: append($_context, $item);\r\n      } @else {\r\n        $_new: append($_new, $item);\r\n      }\r\n    }\r\n\r\n    $_context: parse-grid($_context);\r\n    $_new: if(length($_new) == 0, null, $_new);\r\n    $_new: if(length($_new) == 1, nth($_new, 1), $_new);\r\n    $_new: (gutter-override: if($_new != $_span, $_new, $_span));\r\n\r\n    $_gutters: map-merge($_gutters, $_new);\r\n    $_gutters: map-merge($_gutters, $_context);\r\n  }\r\n\r\n  @return $_gutters;\r\n}\r\n\r\n/* scss-combine:susy/validation */\r\n// Validation\r\n// ==========\r\n\r\n\r\n// Validate Column Math\r\n// --------------------\r\n@function valid-column-math(\r\n  $math,\r\n  $column-width\r\n) {\r\n  @if $math == static and not($column-width) {\r\n    @error 'Static math requires a valid column-width setting.';\r\n  }\r\n\r\n  @return $column-width;\r\n}\r\n\r\n/* scss-combine:susy/grids */\r\n// Grid Syntax\r\n// ===========\r\n\r\n\r\n// Layout\r\n// ------\r\n// Set a new layout using a shorthand\r\n// - $layout: <settings>\r\n// - $clean: boolean\r\n@mixin layout(\r\n  $layout,\r\n  $clean: false\r\n) {\r\n  $inspect  : $layout;\r\n  $susy     : _get-layout($layout, $clean) !global;\r\n\r\n  @include susy-inspect(layout, $inspect);\r\n}\r\n\r\n\r\n// Use Grid\r\n// --------\r\n// Use an arbitrary layout for a section of code\r\n// - $layout: <settings>\r\n// - $clean: boolean\r\n@mixin with-layout(\r\n  $layout,\r\n  $clean: false\r\n) {\r\n  $inspect  : $layout;\r\n  $old      : $susy;\r\n  $susy     : _get-layout($layout, $clean) !global;\r\n\r\n  @include susy-inspect(with-layout, $inspect);\r\n\r\n  @content;\r\n\r\n  $susy: $old !global;\r\n}\r\n\r\n\r\n// Layout\r\n// ------\r\n// Return a parsed layout map based on shorthand syntax\r\n// - $layout: <settings>\r\n@function layout(\r\n  $layout: $susy\r\n) {\r\n  @return parse-grid($layout);\r\n}\r\n\r\n\r\n// Get Layout\r\n// ----------\r\n// Return a new layout based on current and given settings\r\n// - $layout: <settings>\r\n// - $clean: boolean\r\n@function _get-layout(\r\n  $layout,\r\n  $clean: false\r\n) {\r\n  $layout: layout($layout);\r\n  @return if($clean, $layout, _susy-deep-merge($susy, $layout));\r\n}\r\n\r\n/* scss-combine:susy/box-sizing */\r\n// Susy Box Sizing\r\n// =================\r\n\r\n// Global Box Sizing\r\n// -----------------\r\n// Set a box model globally on all elements.\r\n// - [$box]: border-box | content-box\r\n// - [$inherit]: true | false\r\n@mixin global-box-sizing(\r\n  $box: susy-get(global-box-sizing),\r\n  $inherit: false\r\n) {\r\n  $inspect: $box;\r\n\r\n  @if $inherit {\r\n    @at-root {\r\n       html { @include output((box-sizing: $box)); }\r\n       *, *:before, *:after { box-sizing: inherit; }\r\n     }\r\n  } @else {\r\n    *, *:before, *:after { @include output((box-sizing: $box)); }\r\n  }\r\n\r\n  @include susy-inspect(global-box-sizing, $inspect);\r\n  @include update-box-model($box);\r\n}\r\n\r\n// Border Box Sizing\r\n// -----------------\r\n// A legacy shortcut...\r\n// - [$inherit]: true | false\r\n@mixin border-box-sizing(\r\n  $inherit: false\r\n) {\r\n  @include global-box-sizing(border-box, $inherit);\r\n}\r\n\r\n// Update Box Model\r\n// ----------------\r\n// PRIVATE: Updates global box model setting\r\n@mixin update-box-model(\r\n  $box\r\n) {\r\n  @if $box != susy-get(global-box-sizing) {\r\n  @include susy-set(global-box-sizing, $box);\r\n  }\r\n}\r\n\r\n/* scss-combine:susy/context */\r\n// Context Syntax\r\n// ==============\r\n\r\n// Nested [function]\r\n// -----------------\r\n// Return a subset grid for nested context.\r\n// - $context   : <span>\r\n@function nested(\r\n  $context\r\n) {\r\n  $context    : parse-span($context);\r\n  $span       : susy-get(span, $context);\r\n  $location   : get-location($context);\r\n  $columns    : susy-get(columns, $context);\r\n\r\n  @return susy-slice($span, $location, $columns);\r\n}\r\n\r\n// Nested [mixin]\r\n// --------------\r\n// Use a subset grid for a nested context\r\n// - $context   : <span>\r\n// - @content   : <content>\r\n@mixin nested(\r\n  $context\r\n) {\r\n  $inspect  : $context;\r\n  $context  : parse-span($context);\r\n  $old      : susy-get(columns);\r\n  $susy     : map-merge($susy, (columns: nested($context))) !global;\r\n\r\n  @include susy-inspect(nested, $inspect);\r\n  @content;\r\n\r\n  $susy     : map-merge($susy, (columns: $old)) !global;\r\n}\r\n\r\n/* scss-combine:susy/background */\r\n// Background Grid Syntax\r\n// ======================\r\n\r\n$susy-overlay-grid-head-exists: false;\r\n\r\n\r\n// Show Grid/s\r\n// -----------\r\n// Show grid on any element using either background or overlay.\r\n// - [$grid]  : <settings>\r\n@mixin show-grid(\r\n  $grid: $susy\r\n) {\r\n  $inspect: $grid;\r\n  $_output: debug-get(output, $grid);\r\n\r\n  @include susy-inspect(show-grid, $inspect);\r\n  @if $_output == overlay and susy-get(debug image, $grid) != hide {\r\n    @include overlay-grid($grid);\r\n  } @else {\r\n    @include background-grid($grid);\r\n  }\r\n}\r\n\r\n@mixin show-grids(\r\n  $grid: $susy\r\n) {\r\n  @include show-grid($grid);\r\n}\r\n\r\n// Background Grid\r\n// ---------------\r\n// Show a grid background on any element.\r\n// - [$grid]  : <settings>\r\n@mixin background-grid(\r\n  $grid: $susy\r\n) {\r\n  $inspect  : $grid;\r\n  $_output  : get-background($grid);\r\n\r\n  @if length($_output) > 0 {\r\n    $_flow: susy-get(flow, $grid);\r\n\r\n    $_image: ();\r\n    @each $name, $layer in map-get($_output, image) {\r\n      $_direction: if($name == baseline, to bottom, to to($_flow));\r\n      $_image: append($_image, linear-gradient($_direction, $layer), comma);\r\n    }\r\n    $_output: map-merge($_output, (image: $_image));\r\n\r\n    @include background-grid-output($_output...);\r\n    @include susy-inspect(background-grid, $inspect);\r\n  }\r\n}\r\n\r\n\r\n// Overlay Grid\r\n// ------------\r\n// Generate an icon to trigger grid-overlays on any given elements.\r\n// $grids...  : <selector> [<settings>] [, <selector>]*\r\n@mixin overlay-grid (\r\n  $grid: $susy\r\n) {\r\n  @if not($susy-overlay-grid-head-exists) {\r\n    @at-root head { @include overlay-head($grid); }\r\n    @at-root head:before { @include overlay-trigger; }\r\n    @at-root head:hover { @include overlay-trigger-hover; }\r\n    $susy-overlay-grid-head-exists: true !global;\r\n  }\r\n\r\n  head:hover ~ &,\r\n  head:hover ~ body & {\r\n    position: relative;\r\n    &:before {\r\n      @include grid-overlay-base;\r\n      @include background-grid($grid);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// [Private] Overlay Trigger\r\n// -------------------------\r\n@mixin overlay-trigger {\r\n  content: \"|||\";\r\n  display: block;\r\n  padding: 5px 10px;\r\n  font: {\r\n    family: sans-serif;\r\n    size: 16px;\r\n    weight: bold;\r\n  }\r\n}\r\n\r\n\r\n// [Private] Overlay Trigger Hover\r\n// -------------------------------\r\n@mixin overlay-trigger-hover {\r\n  background: rgba(white, .5);\r\n  color: red;\r\n}\r\n\r\n\r\n// [Private] Overlay Head\r\n// ----------------------\r\n// <head> styles to create grid overlay toggle\r\n@mixin overlay-head (\r\n  $grid: $susy\r\n) {\r\n  $_toggle: debug-get(toggle, $grid);\r\n  $_horz: null;\r\n  $_vert: null;\r\n\r\n  @each $side in $_toggle {\r\n    $_horz: if($side == left or $side == right, $side, $_horz);\r\n    $_vert: if($side == top or $side == bottom, $side, $_vert);\r\n  }\r\n\r\n  display: block;\r\n  position: fixed;\r\n  #{$_horz}: 10px;\r\n  #{$_vert}: 10px;\r\n  z-index: 999;\r\n  color: #333;\r\n  background: rgba(white, .25);\r\n}\r\n\r\n\r\n// [Private] Grid Overlay Base\r\n// ---------------------------\r\n// Base styles for generating a grid overlay\r\n@mixin grid-overlay-base() {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  content: \" \";\r\n  z-index: 998;\r\n}\r\n\r\n\r\n// Get Symmetrical Background\r\n// --------------------------\r\n// - $grid: <map>\r\n@function get-background-sym(\r\n  $grid\r\n) {\r\n  $grid           : parse-grid($grid);\r\n  $_gutters       : susy-get(gutters, $grid);\r\n  $_column-width  : susy-get(column-width, $grid);\r\n  $_math          : susy-get(math, $grid);\r\n\r\n  $_color         : debug-get(color);\r\n  $_trans         : transparent;\r\n  $_light         : lighten($_color, 15%);\r\n\r\n  $_end           : 1 + $_gutters;\r\n  $_after         : percentage(1/$_end);\r\n  $_stops         : ();\r\n  $_size          : span(1 $grid wide);\r\n\r\n  @if is-inside($grid) {\r\n    $_stops: $_color, $_light;\r\n  } @else if is-split($grid) {\r\n    $_split: $_gutters/2;\r\n    $_before: percentage($_split/$_end);\r\n    $_after: percentage((1 + $_split)/$_end);\r\n    $_stops: $_trans $_before, $_color $_before, $_light $_after, $_trans $_after;\r\n  } @else {\r\n    $_stops: $_color, $_light $_after, $_trans $_after;\r\n  }\r\n\r\n  @if $_math == static {\r\n    $_size: valid-column-math($_math, $_column-width) * $_end;\r\n  }\r\n\r\n  $_output: (\r\n    image: (columns: $_stops),\r\n    size: $_size,\r\n  );\r\n\r\n  @return $_output;\r\n}\r\n\r\n\r\n// Get Asymmetrical Inside\r\n// -----------------------\r\n// - $grid: <settings>\r\n@function get-asym-inside(\r\n  $grid\r\n) {\r\n  $grid     : parse-grid($grid);\r\n  $_columns : susy-get(columns, $grid);\r\n\r\n  $_color   : debug-get(color);\r\n  $_light   : lighten($_color, 15%);\r\n  $_stops   : ();\r\n\r\n  @for $location from 1 through susy-count($_columns) {\r\n    $this-stop: ();\r\n\r\n    @if $location == 1 {\r\n      $this-stop: append($this-stop, $_color, comma);\r\n    } @else {\r\n      $start: parse-span(1 at $location $grid);\r\n      $start: get-isolation($start);\r\n      $this-stop: append($this-stop, $_color $start, comma);\r\n    }\r\n\r\n    @if $location == susy-count($_columns) {\r\n      $this-stop: append($this-stop, $_light, comma);\r\n    } @else {\r\n      $_end: parse-span(1 at ($location + 1) $grid);\r\n      $_end: get-isolation($_end);\r\n      $this-stop: append($this-stop, $_light $_end, comma);\r\n    }\r\n\r\n    $_stops: join($_stops, $this-stop, comma);\r\n  }\r\n\r\n  @return $_stops;\r\n}\r\n\r\n\r\n// Get Asymmetrical Split\r\n// ----------------------\r\n// - $grid: <settings>\r\n@function get-asym-split(\r\n  $grid\r\n) {\r\n  $grid     : parse-grid($grid);\r\n  $_columns : susy-get(columns, $grid);\r\n\r\n  $_color   : debug-get(color);\r\n  $_light   : lighten($_color, 15%);\r\n  $_stops   : ();\r\n\r\n  @for $location from 1 through susy-count($_columns) {\r\n    $this-stop: ();\r\n\r\n    $start: parse-span(1 at $location $grid);\r\n    $start: get-isolation($start);\r\n    $this-stop: append($this-stop, transparent $start, comma);\r\n    $this-stop: append($this-stop, $_color $start, comma);\r\n\r\n    $_end: $start + span(1 at $location $grid);\r\n    $this-stop: append($this-stop, $_light $_end, comma);\r\n    $this-stop: append($this-stop, transparent $_end, comma);\r\n\r\n    $_stops: join($_stops, $this-stop, comma);\r\n  }\r\n\r\n  @return $_stops;\r\n}\r\n\r\n\r\n// Get Asymmetrical Outside\r\n// ------------------------\r\n// - $grid: <settings>\r\n@function get-asym-outside(\r\n  $grid\r\n) {\r\n  $grid     : parse-grid($grid);\r\n  $_columns : susy-get(columns, $grid);\r\n\r\n  $_color   : debug-get(color);\r\n  $_light   : lighten($_color, 15%);\r\n  $_trans   : transparent;\r\n  $_stops   : ();\r\n\r\n  @for $location from 1 through susy-count($_columns) {\r\n    $this-stop: ();\r\n\r\n    @if $location == 1 {\r\n      $this-stop: append($this-stop, $_color, comma);\r\n    } @else {\r\n      $start: parse-span(1 at $location $grid);\r\n      $start: get-isolation($start);\r\n      $this-stop: append($this-stop, $_color $start, comma);\r\n    }\r\n\r\n    @if $location == susy-count($_columns) {\r\n      $this-stop: append($this-stop, $_light, comma);\r\n    } @else {\r\n      $gutter: get-span-width(first $location $grid);\r\n\r\n      $_end: parse-span(1 at ($location + 1) $grid);\r\n      $_end: get-isolation($_end);\r\n\r\n      $gutter: $_light $gutter, $_trans $gutter, $_trans $_end;\r\n      $this-stop: join($this-stop, $gutter, comma);\r\n    }\r\n\r\n    $_stops: join($_stops, $this-stop, comma);\r\n  }\r\n\r\n  @return $_stops;\r\n}\r\n\r\n\r\n// Get Asymmetrical Background\r\n// ---------------------------\r\n// - $grid: <settings>\r\n@function get-background-asym(\r\n  $grid\r\n) {\r\n  $_stops: ();\r\n\r\n  @if is-inside($grid) {\r\n    $_stops: get-asym-inside($grid);\r\n  } @else if is-split($grid) {\r\n    $_stops: get-asym-split($grid);\r\n  } @else {\r\n    $_stops: get-asym-outside($grid);\r\n  }\r\n\r\n  @return (image: (columns: $_stops));\r\n}\r\n\r\n\r\n// Get Background\r\n// --------------\r\n// - $grid: <settings>\r\n@function get-background(\r\n  $grid\r\n) {\r\n  $grid     : parse-grid($grid);\r\n  $_show    : susy-get(debug image, $grid);\r\n  $_return  : ();\r\n\r\n  @if $_show and $_show != 'hide' {\r\n    $_columns: susy-get(columns, $grid);\r\n\r\n    @if $_show != 'show-baseline' {\r\n      $_sym: is-symmetrical($_columns);\r\n      $_return: if($_sym, get-background-sym($grid), get-background-asym($grid));\r\n      $_return: map-merge($_return, (clip: content-box));\r\n    }\r\n\r\n    @if $_show != 'show-columns'\r\n      and global-variable-exists(base-line-height)\r\n      and type-of($base-line-height) == 'number'\r\n      and not unitless($base-line-height) {\r\n      $_color: variable-exists('grid-background-baseline-color');\r\n      $_color: if($_color, $grid-background-baseline-color, #000);\r\n\r\n      $_image: map-get($_return, image);\r\n      $_size: map-get($_return, size);\r\n      $_baseline: (baseline: ($_color 1px, transparent 1px));\r\n      $_baseline-size: 100% $base-line-height;\r\n\r\n      $_return: map-merge($_return, (\r\n        image: if($_image, map-merge($_image, $_baseline), $_baseline),\r\n        size: if($_size, ($_size, $_baseline-size), $_baseline-size),\r\n      ));\r\n\r\n      @if $_show == 'show' {\r\n        $_clip: map-get($_return, clip);\r\n        $_return: map-merge($_return, (clip: join($_clip, border-box, comma)));\r\n      }\r\n    } @else if $_show == 'show-baseline' {\r\n      @warn 'Please provide a $base-line-height with the desired height and units';\r\n    }\r\n  }\r\n\r\n  @if map-get($_return, image) {\r\n    $_return: map-merge($_return, (flow: susy-get(flow, $grid)));\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Get Debug\r\n// ---------\r\n// Return the value of a debug setting\r\n// - $key: <setting>\r\n@function debug-get(\r\n  $key,\r\n  $grid: $susy\r\n) {\r\n  $key: join(debug, $key, space);\r\n  @return susy-get($key, $grid);\r\n}\r\n\r\n/* scss-combine:susy/container */\r\n// Container Syntax\r\n// ================\r\n\r\n// Container [mixin]\r\n// -----------------\r\n// Set a container element\r\n// - [$layout]  : <settings>\r\n@mixin container(\r\n  $layout: $susy\r\n) {\r\n  $inspect    : $layout;\r\n  $layout     : parse-grid($layout);\r\n\r\n  $_width     : get-container-width($layout);\r\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\r\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\r\n\r\n  $_box       : susy-get(box-sizing, $layout);\r\n\r\n  @if $_box {\r\n    @include output((box-sizing: $_box));\r\n  }\r\n\r\n  @include susy-inspect(container, $inspect);\r\n  @include float-container($_width, $_justify, $_property);\r\n  @include show-grid($layout);\r\n}\r\n\r\n// Container [function]\r\n// --------------------\r\n// Return container width\r\n// - [$layout]  : <settings>\r\n@function container(\r\n  $layout: $susy\r\n) {\r\n  $layout: parse-grid($layout);\r\n  @return get-container-width($layout);\r\n}\r\n\r\n// Get Container Width\r\n// -------------------\r\n// Calculate the container width\r\n// - [$layout]: <settings>\r\n@function get-container-width(\r\n  $layout: $susy\r\n) {\r\n  $layout         : parse-grid($layout);\r\n  $_width         : susy-get(container, $layout);\r\n  $_column-width  : susy-get(column-width, $layout);\r\n  $_math          : susy-get(math, $layout);\r\n\r\n  @if not($_width) or $_width == auto {\r\n    @if valid-column-math($_math, $_column-width) {\r\n      $_columns   : susy-get(columns, $layout);\r\n      $_gutters   : susy-get(gutters, $layout);\r\n      $_spread    : if(is-split($layout), wide, narrow);\r\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\r\n    } @else {\r\n      $_width: 100%;\r\n    }\r\n  }\r\n\r\n  @return $_width;\r\n}\r\n\r\n// Parse Container Position\r\n// ------------------------\r\n// Parse the $container-position into margin values.\r\n// - [$justify]   : left | center | right | <length> [<length>]\r\n@function parse-container-position(\r\n  $justify: map-get($susy-defaults, container-position)\r\n) {\r\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\r\n\r\n  @if not(index(left right center, $justify)) {\r\n    $_return: nth($justify, 1);\r\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n/* scss-combine:susy/span */\r\n// Span Syntax\r\n// ===========\r\n\r\n// Span [mixin]\r\n// ------------\r\n// Set a spanning element using shorthand syntax.\r\n// - $span  : <span>\r\n@mixin span(\r\n  $span\r\n) {\r\n  $inspect: $span;\r\n  $span: parse-span($span);\r\n  $output: span-math($span);\r\n  $nesting: susy-get(span, $span);\r\n  $clear: susy-get(clear, $span);\r\n\r\n  $box: susy-get(box-sizing, $span);\r\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\r\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\r\n\r\n  @if $clear == break {\r\n    @include break;\r\n  } @else if $clear == nobreak {\r\n    @include nobreak;\r\n  }\r\n\r\n  @include susy-inspect(span, $inspect);\r\n  @include output((box-sizing: $box));\r\n  @include float-span-output($output...);\r\n\r\n  @if valid-columns($nesting, silent) {\r\n    @include nested($span) { @content; }\r\n  } @else {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Span [function]\r\n// ---------------\r\n// Return the width of a span.\r\n// - $span  : <span>\r\n@function span(\r\n  $span\r\n) {\r\n  @return get-span-width($span);\r\n}\r\n\r\n// Span Math\r\n// ---------\r\n// Get all the span results.\r\n// - $span: <map>\r\n@function span-math(\r\n  $span\r\n) {\r\n  $nest             : if(susy-get(role, $span) == nest, true, false);\r\n  $split-nest       : if(is-split($span) and $nest, true, false);\r\n  $edge             : get-edge($span);\r\n  $location         : get-location($span);\r\n\r\n  $float            : from;\r\n  $padding-before   : null;\r\n  $padding-after    : null;\r\n  $margin-before    : null;\r\n  $margin-after     : null;\r\n\r\n  // calculate widths\r\n  $spread: index(map-values($span), spread);\r\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\r\n  $width: get-span-width($span);\r\n  $gutters: get-gutters($span);\r\n\r\n  // apply gutters\r\n  @if is-inside($span) {\r\n    @if not(susy-get(role, $span)) {\r\n      $padding-before: map-get($gutters, before);\r\n      $padding-after: map-get($gutters, after);\r\n    }\r\n  } @else {\r\n    @if not($split-nest) {\r\n      $margin-before: map-get($gutters, before);\r\n      $margin-after: map-get($gutters, after);\r\n    }\r\n  }\r\n\r\n  // special margin handling\r\n  @if susy-get(output, $span) == isolate and $location {\r\n    $margin-before: get-isolation($span);\r\n    $margin-after: -100%;\r\n  } @else if $edge {\r\n    $is-split: is-split($span);\r\n    $pos: susy-get(gutter-position, $span);\r\n\r\n    @if $edge == last {\r\n      $float: susy-get(last-flow, $span);\r\n    }\r\n\r\n    @if not($is-split) {\r\n      @if $edge == full or ($edge == first and $pos == before) {\r\n        $margin-before: 0;\r\n      }\r\n      @if $edge == full or ($edge == last and $pos == after) {\r\n        $margin-after: 0;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  @return (\r\n    width           : $width,\r\n    float           : $float,\r\n    margin-before   : $margin-before,\r\n    margin-after    : $margin-after,\r\n    padding-before  : $padding-before,\r\n    padding-after   : $padding-after,\r\n    flow            : susy-get(flow, $span),\r\n  );\r\n}\r\n\r\n// Get Span Width\r\n// --------------\r\n// Return span width.\r\n// - $span: <map>\r\n@function get-span-width(\r\n  $span\r\n) {\r\n  $span     : parse-span($span);\r\n\r\n  $n        : susy-get(span, $span);\r\n  $location : get-location($span);\r\n  $columns  : susy-get(columns, $span);\r\n  $gutters  : susy-get(gutters, $span);\r\n  $spread   : susy-get(spread, $span);\r\n\r\n  $context  : null;\r\n  $span-sum : null;\r\n  $width    : null;\r\n\r\n  @if $n == 'full' {\r\n    $pos: susy-get(gutter-position, $span);\r\n    $role: susy-get(role, $span);\r\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\r\n  }\r\n\r\n  @if type-of($n) != number {\r\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\r\n  } @else if unitless($n) {\r\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\r\n    $spread: if(is-inside($span), $spread or wide, $spread);\r\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\r\n\r\n    $_math: susy-get(math, $span);\r\n    $_column-width: susy-get(column-width, $span);\r\n    @if $_math == static {\r\n      $width: $span-sum * valid-column-math($_math, $_column-width);\r\n    } @else {\r\n      $width: percentage($span-sum / $context);\r\n    }\r\n  } @else {\r\n    $width: $n;\r\n  }\r\n\r\n  @return $width;\r\n}\r\n\r\n/* scss-combine:susy/gutters */\r\n// Gutter Syntax\r\n// =============\r\n\r\n\r\n// Gutters\r\n// -------\r\n// Set gutters on an element.\r\n// - [$span]   : <settings>\r\n@mixin gutters(\r\n  $span: $susy\r\n) {\r\n  $inspect  : $span;\r\n  $span     : parse-gutters($span);\r\n  $_gutters : get-gutters($span);\r\n\r\n  $_output: (\r\n    before: map-get($_gutters, before),\r\n    after: map-get($_gutters, after),\r\n    flow: susy-get(flow, $span),\r\n  );\r\n\r\n  @include susy-inspect(gutters, $inspect);\r\n\r\n  @if is-inside($span) {\r\n    @include padding-output($_output...);\r\n  } @else {\r\n    @include margin-output($_output...);\r\n  }\r\n}\r\n\r\n@mixin gutter(\r\n  $span: $susy\r\n) {\r\n  @include gutters($span);\r\n}\r\n\r\n\r\n// Gutter\r\n// ------\r\n// Return the width of a gutter.\r\n// - [$span]   : <settings>\r\n@function gutter(\r\n  $span: $susy\r\n) {\r\n  $span: parse-gutters($span);\r\n\r\n  $_gutters: get-gutters($span);\r\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\r\n\r\n  @return $_gutters;\r\n}\r\n\r\n@function gutters(\r\n  $span: $susy\r\n) {\r\n  @return gutter($span);\r\n}\r\n\r\n\r\n// Get Gutter Width\r\n// ----------------\r\n// Return gutter width.\r\n// - [$context]: <context>\r\n@function get-gutter-width(\r\n  $context: $susy\r\n) {\r\n  $context  : parse-gutters($context);\r\n\r\n  $_gutters : susy-get(gutters, $context);\r\n  $_gutter  : susy-get(gutter-override, $context);\r\n\r\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\r\n    $_column-width: susy-get(column-width, $context);\r\n    $_math: gutter-math($context);\r\n    @if $_math == static {\r\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\r\n    } @else {\r\n      $_columns : susy-get(columns, $context);\r\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\r\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\r\n    }\r\n  }\r\n\r\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\r\n\r\n  @return $_gutter;\r\n}\r\n\r\n\r\n// Get Gutters\r\n// -----------\r\n// Return before and after gutter values.\r\n// - [$context]: <context>\r\n@function get-gutters(\r\n  $context: $susy\r\n) {\r\n  $context            : parse-gutters($context);\r\n\r\n  $_gutter-position   : susy-get(gutter-position, $context);\r\n  $_gutter            : get-gutter-width($context);\r\n\r\n  $_return            : (before: null, after: null);\r\n\r\n  @if is-split($context) and $_gutter {\r\n    $_gutter: $_gutter / 2;\r\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\r\n  } @else {\r\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\r\n  }\r\n\r\n  @return $_return;\r\n}\r\n\r\n\r\n// Is Inside\r\n// ---------\r\n// Returns true if gutters are inside.\r\n// $context: <context>\r\n@function is-inside(\r\n  $context\r\n) {\r\n  $_inside: inside inside-static;\r\n  $_gutter-position: susy-get(gutter-position, $context);\r\n\r\n  @return if(index($_inside, $_gutter-position), true, false);\r\n}\r\n\r\n\r\n// Is Split\r\n// --------\r\n// Returns true if gutters are split.\r\n// $context: <context>\r\n@function is-split(\r\n  $context\r\n) {\r\n  $_split: split inside inside-static;\r\n  $_gutter-position: susy-get(gutter-position, $context);\r\n\r\n  @return if(index($_split, $_gutter-position), true, false);\r\n}\r\n\r\n\r\n// Gutter Math\r\n// -----------\r\n// Return the math to use for gutter calculations\r\n// $context: <context>\r\n@function gutter-math(\r\n  $context: $susy\r\n) {\r\n  $_return  : susy-get(math, $context);\r\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\r\n\r\n  @return $_return;\r\n}\r\n\r\n/* scss-combine:susy/isolate */\r\n// Isolation Syntax\r\n// ================\r\n\r\n\r\n// Isolate [Mixin]\r\n// ---------------\r\n// Set isolation as an override.\r\n// - $location: <span>\r\n@mixin isolate(\r\n  $isolate: 1\r\n) {\r\n  $inspect: $isolate;\r\n\r\n  $output: (\r\n    push: isolate($isolate),\r\n    flow: susy-get(flow, $isolate),\r\n  );\r\n\r\n  @include susy-inspect(isolate, $inspect);\r\n  @include isolate-output($output...);\r\n}\r\n\r\n\r\n// Isolate [function]\r\n// ------------------\r\n// Return an isolation offset width.\r\n// - $location: <span>\r\n@function isolate(\r\n  $isolate: 1\r\n) {\r\n  $isolate: parse-span($isolate);\r\n  $isolation: susy-get(span, $isolate);\r\n\r\n  @if $isolation and not(get-location($isolate)) {\r\n    $new: (\r\n      span: null,\r\n      location: $isolation,\r\n    );\r\n    $isolate: map-merge($isolate, $new);\r\n  }\r\n\r\n  @return get-isolation($isolate);\r\n}\r\n\r\n\r\n// Get Isolation\r\n// -------------\r\n// Return the isolation offset width\r\n// - $input: <map>\r\n@function get-isolation(\r\n  $input\r\n) {\r\n  $location   : get-location($input);\r\n  $columns    : susy-get(columns, $input);\r\n  $width      : null;\r\n\r\n  @if type-of($location) == number and not(unitless($location)) {\r\n    $width: $location;\r\n  } @else if $location {\r\n    $push: $location - 1;\r\n    @if $push > 0 {\r\n      $push: map-merge($input, (\r\n        span: $push,\r\n        location: 1,\r\n        spread: wide,\r\n      ));\r\n      $width: get-span-width($push);\r\n    }\r\n  }\r\n\r\n  @if susy-get(gutter-position, $input) == split\r\n      and susy-get(gutters, $input) > 0 {\r\n    $width: if($width == null, gutters($input), $width + gutters($input));\r\n  }\r\n\r\n  @return $width or 0;\r\n}\r\n\r\n/* scss-combine:susy/gallery */\r\n// Gallery Syntax\r\n// ==============\r\n\r\n// Gallery\r\n// -------\r\n// Create an isolated gallery\r\n// - $span        : <span>\r\n// - [$selector]  : child | of-type\r\n@mixin gallery(\r\n  $span,\r\n  $selector: child\r\n) {\r\n  $inspect    : $span;\r\n  $span       : parse-span($span);\r\n  $span       : map-merge($span, (location: 1));\r\n\r\n  $n            : susy-get(span, $span);\r\n  $columns      : susy-get(columns, $span);\r\n  $context      : susy-count($columns);\r\n  $flow         : susy-get(flow, $span);\r\n\r\n  $inside       : is-inside($span);\r\n  $from         : from($flow);\r\n  $line         : floor($context / $n);\r\n  $symmetrical  : is-symmetrical($columns);\r\n\r\n  $output: (\r\n    width             : null,\r\n    float             : from,\r\n    margin-before     : null,\r\n    margin-after      : null,\r\n    padding-before    : null,\r\n    padding-after     : null,\r\n    flow              : $flow,\r\n  );\r\n\r\n  @if $inside {\r\n    $gutters: get-gutters($span);\r\n    $output: map-merge($output, (\r\n      padding-before: map-get($gutters, before),\r\n      padding-after: map-get($gutters, after),\r\n    ));\r\n  }\r\n\r\n  @if $symmetrical {\r\n    $output: map-merge($output, (width: get-span-width($span)));\r\n  }\r\n\r\n  $box          : susy-get(box-sizing, $span);\r\n  $global-box   : if(susy-get(global-box-sizing) == 'border-box', true, false);\r\n\r\n  @include susy-inspect(gallery, $inspect);\r\n\r\n  // Collective Output\r\n  @if $box == border-box or ($inside and not($box) and not($global-box)) {\r\n    @include output((box-sizing: border-box));\r\n  } @else if $box == content-box {\r\n    @include output((box-sizing: content-box));\r\n  }\r\n\r\n  @include float-span-output($output...);\r\n\r\n  // Individual Loop\r\n  @for $item from 1 through $line {\r\n    $nth: '#{$line}n + #{$item}';\r\n    &:nth-#{$selector}(#{$nth}) {\r\n      // Individual Prep\r\n      $output: (\r\n        width             : if($symmetrical, null, get-span-width($span)),\r\n        float             : null,\r\n        margin-before     : get-isolation($span),\r\n        margin-after      : -100%,\r\n        padding-before    : null,\r\n        padding-after     : null,\r\n        flow              : $flow,\r\n      );\r\n\r\n      // Individual Output\r\n      @include float-span-output($output...);\r\n\r\n      @if get-edge($span) == first {\r\n        @include break;\r\n        @include first($span);\r\n      } @else {\r\n        @include nobreak;\r\n      }\r\n\r\n      // Individual Location Increment\r\n      $location: get-location($span) + $n;\r\n      $location: if($location > $context, 1, $location);\r\n      $span: map-merge($span, (location: $location));\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:susy/rows */\r\n// Row Start & End\r\n// ===============\r\n\r\n// Break\r\n// -----\r\n// Apply to any element that should force a line break.\r\n@mixin break {\r\n  @include output((clear: both));\r\n}\r\n\r\n\r\n// NoBreak\r\n// -------\r\n// Cancel the break() effect, e.g. when using media queries.\r\n@mixin nobreak {\r\n  @include output((clear: none));\r\n}\r\n\r\n\r\n// Full\r\n// ----\r\n// - [$context]: <layout shorthand>\r\n@mixin full(\r\n  $context: $susy\r\n) {\r\n  $inspect : $context;\r\n  @include susy-inspect(full, $inspect);\r\n  @include span(full of parse-grid($context) break);\r\n}\r\n\r\n\r\n// First\r\n// -----\r\n// - [$context]: <settings>\r\n@mixin first(\r\n  $context: $susy\r\n) {\r\n  $inspect  : $context;\r\n  $context  : parse-grid($context);\r\n  $flow     : susy-get(flow, $context);\r\n\r\n  @include susy-inspect(first, $inspect);\r\n  @if not(is-split($context)) {\r\n    @include float-first($flow);\r\n  }\r\n}\r\n\r\n@mixin alpha(\r\n  $context: $susy\r\n) {\r\n  @include first($context);\r\n}\r\n\r\n\r\n// Last\r\n// ----\r\n// - [$context]: <settings>\r\n@mixin last(\r\n  $context: $susy\r\n) {\r\n  $inspect  : $context;\r\n  $context  : parse-grid($context);\r\n\r\n  @include susy-inspect(last, $inspect);\r\n\r\n  $output: (\r\n    flow: susy-get(flow, $context),\r\n    last-flow: susy-get(last-flow, $context),\r\n    margin: if(is-split($context), null, 0),\r\n  );\r\n\r\n  @include float-last($output...);\r\n}\r\n\r\n@mixin omega(\r\n  $context: $susy\r\n) {\r\n  @include last($context);\r\n}\r\n\r\n\r\n// Get Edge\r\n// --------\r\n// Calculate edge value based on location, if possible\r\n@function get-edge(\r\n  $span\r\n) {\r\n  $span       : parse-span($span);\r\n  $edge       : susy-get(edge, $span);\r\n\r\n  @if not($edge) {\r\n    $count: susy-count(susy-get(columns, $span));\r\n    $location: susy-get(location, $span);\r\n    $n: susy-get(span, $span);\r\n\r\n    $number: if(type-of($location) == number, true, false);\r\n    $index: if($number and unitless($location), true, false);\r\n\r\n    @if $n == $count {\r\n      $edge: full;\r\n    } @else if $location and $n and $index {\r\n      @if $location == 1 {\r\n        $edge: if($n == $count, full, first);\r\n      } @else if $location + $n - 1 == $count {\r\n        $edge: last;\r\n      }\r\n    }\r\n  }\r\n\r\n  @if $edge == alpha or $edge == omega {\r\n    $edge: if($edge == alpha, first, last);\r\n  }\r\n\r\n  @return $edge;\r\n}\r\n\r\n\r\n// Get Location\r\n// ------------\r\n// Calculate location value based on edge, if possible\r\n@function get-location(\r\n  $span\r\n) {\r\n  $span       : parse-span($span);\r\n  $location   : susy-get(location, $span);\r\n  $edge       : get-edge($span);\r\n  $n          : susy-get(span, $span);\r\n\r\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\r\n    @if $edge == first {\r\n      $location: 1;\r\n    } @else if $edge == last {\r\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\r\n    }\r\n  }\r\n\r\n  @return $location\r\n}\r\n\r\n/* scss-combine:susy/margins */\r\n// Margin Syntax\r\n// =============\r\n\r\n// Pre\r\n// ---\r\n// Add spanning-margins before an element.\r\n// - $span  : <span>\r\n@mixin pre(\r\n  $span\r\n) {\r\n  $inspect: $span;\r\n  $span   : map-merge((spread: wide), parse-span($span));\r\n  $flow   : susy-get(flow, $span);\r\n  $split  : if(susy-get(gutter-position, $span) == split, true, false);\r\n  $gutter : gutter($span);\r\n  $span   : span($span);\r\n  $width  : if($split and $gutter, $span + $gutter, $span);\r\n\r\n  @include susy-inspect(pre, $inspect);\r\n  @include margin-output($width, null, $flow);\r\n}\r\n\r\n// Post\r\n// ----\r\n// Add spanning-margins after an element.\r\n// - $span  : <span>\r\n@mixin post(\r\n  $span\r\n) {\r\n  $inspect  : $span;\r\n  $span     : map-merge((spread: wide), parse-span($span));\r\n  $flow     : susy-get(flow, $span);\r\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\r\n  $width    : if($split, span($span) + gutter($span), span($span));\r\n\r\n  @include susy-inspect(post, $inspect);\r\n  @include margin-output(null, $width, $flow);\r\n}\r\n\r\n// Push\r\n// ----\r\n// Simple synonymn for pre.\r\n// - $span  : <span>\r\n@mixin push(\r\n  $span\r\n) {\r\n  @include pre($span);\r\n}\r\n\r\n// Pull\r\n// ----\r\n// Add negative spanning-margins before an element.\r\n// - $span  : <span>\r\n@mixin pull(\r\n  $span\r\n) {\r\n  $inspect  : $span;\r\n  $span     : map-merge((spread: wide), parse-span($span));\r\n  $flow     : susy-get(flow, $span);\r\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\r\n  $width    : if($split, 0 - span($span) + gutter($span), 0 - span($span));\r\n\r\n  @include susy-inspect(pull, $inspect);\r\n  @include margin-output($width, null, $flow);\r\n}\r\n\r\n// Squish\r\n// ------\r\n// Add spanning-margins before and after an element.\r\n// - $pre     : <span>\r\n// - [$post]  : <span>\r\n@mixin squish(\r\n  $pre,\r\n  $post: false\r\n) {\r\n  $inspect      : ($pre, $post);\r\n  $pre          : map-merge((spread: wide), parse-span($pre));\r\n\r\n  @if $post {\r\n    $post: map-merge((spread: wide), parse-span($post));\r\n  } @else {\r\n    $span: susy-get(span, $pre);\r\n    @if length($span) > 1 {\r\n      $pre: map-merge($pre, (span: nth($span, 1)));\r\n      $post: map-merge($pre, (span: nth($span, 2)));\r\n    } @else {\r\n      $post: $pre;\r\n    }\r\n  }\r\n\r\n  @include susy-inspect(squish, $inspect);\r\n  @include pre($pre);\r\n  @include post($post);\r\n}\r\n\r\n/* scss-combine:susy/padding */\r\n// Padding Syntax\r\n// ==============\r\n\r\n// Prefix\r\n// ------\r\n// Add spanning-padding before an element.\r\n// - $span  : <span>\r\n@mixin prefix(\r\n  $span\r\n) {\r\n  $inspect  : $span;\r\n  $span     : map-merge((spread: wide), parse-span($span));\r\n  $flow     : susy-get(flow, $span);\r\n  $width    : span($span);\r\n\r\n  @if is-inside($span) {\r\n    $gutter: gutter($span);\r\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\r\n  }\r\n\r\n  @include susy-inspect(prefix, $inspect);\r\n  @include padding-output($width, null, $flow);\r\n}\r\n\r\n// Suffix\r\n// ------\r\n// Add spanning-padding after an element.\r\n// - $span  : <span>\r\n@mixin suffix(\r\n  $span\r\n) {\r\n  $inspect  : $span;\r\n  $span     : map-merge((spread: wide), parse-span($span));\r\n  $flow     : susy-get(flow, $span);\r\n  $width    : span($span);\r\n\r\n  @if is-inside($span) {\r\n    $gutter: gutter($span);\r\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\r\n  }\r\n\r\n  @include susy-inspect(suffix, $inspect);\r\n  @include padding-output(null, $width, $flow);\r\n}\r\n\r\n// Pad\r\n// ---\r\n// Add spanning-padding before and after an element.\r\n// - $pre     : <span>\r\n// - [$post]  : <span>\r\n@mixin pad(\r\n  $pre,\r\n  $post: false\r\n) {\r\n  $inspect  : ($pre, $post);\r\n  $pre      : map-merge((spread: wide), parse-span($pre));\r\n\r\n  @if $post {\r\n    $post: map-merge((spread: wide), parse-span($post));\r\n  } @else {\r\n    $span: susy-get(span, $pre);\r\n    @if length($span) > 1 {\r\n      $pre: map-merge($pre, (span: nth($span, 1)));\r\n      $post: map-merge($pre, (span: nth($span, 2)));\r\n    } @else {\r\n      $post: $pre;\r\n    }\r\n  }\r\n\r\n  @include susy-inspect(pad, $inspect);\r\n  @include prefix($pre);\r\n  @include suffix($post);\r\n\r\n}\r\n\r\n/* scss-combine:susy/bleed */\r\n// Bleed Syntax\r\n// ============\r\n\r\n// Bleed\r\n// -----\r\n// Add negative margins, and equal positive padding to create bleed.\r\n// - $bleed  : <span>\r\n@mixin bleed(\r\n  $bleed: 0 gutter()\r\n) {\r\n  $inspect  : $bleed;\r\n  $output   : get-bleed($bleed);\r\n\r\n  @if susy-get(global-box-sizing) != content-box {\r\n    $output: map-merge((box-sizing: content-box), $output);\r\n  }\r\n\r\n  @include susy-inspect(bleed, $inspect);\r\n  @include output($output);\r\n}\r\n\r\n\r\n// Bleed-x\r\n// -------\r\n// Shortcut for horizontal bleed.\r\n// - $bleed  : <span>\r\n@mixin bleed-x(\r\n  $bleed: gutter()\r\n) {\r\n  $bleed  : parse-span($bleed);\r\n  $trbl   : susy-get(span, $bleed);\r\n\r\n  @if length($trbl) == 1 {\r\n    $bleed: map-merge($bleed, (span: 0 nth($trbl, 1)));\r\n  } @else if length($trbl) == 2 {\r\n    $bleed: map-merge($bleed, (span: 0 nth($trbl, 2) 0 nth($trbl, 1)));\r\n  } @else {\r\n    @warn 'bleed-x only takes 2 lengths, but #{length($trbl)} were passed.';\r\n  }\r\n\r\n  @include bleed($bleed);\r\n}\r\n\r\n\r\n// Bleed-y\r\n// -------\r\n// Shortcut for vertical bleed.\r\n// - $bleed  : <span>\r\n@mixin bleed-y(\r\n  $bleed: if(function-exists(rhythm), rhythm(1), 1em)\r\n) {\r\n  $bleed  : parse-span($bleed);\r\n  $trbl   : susy-get(span, $bleed);\r\n\r\n  @if length($trbl) == 1 {\r\n    $bleed: map-merge($bleed, (span: nth($trbl, 1) 0));\r\n  } @else if length($trbl) == 2 {\r\n    $bleed: map-merge($bleed, (span: nth($trbl, 1) 0 nth($trbl, 2) 0));\r\n  } @else {\r\n    @warn 'bleed-y only takes 2 lengths, but #{length($trbl)} were passed.';\r\n  }\r\n\r\n  @include bleed($bleed);\r\n}\r\n\r\n\r\n// Get Bleed\r\n// ---------\r\n// Return bleed output values\r\n// - $bleed: <span>\r\n@function get-bleed(\r\n  $bleed\r\n) {\r\n  $bleed    : map-merge((spread: wide), parse-span($bleed));\r\n  $trbl     : susy-get(span, $bleed);\r\n  $short    : null;\r\n  $output   : ();\r\n\r\n  @for $i from 1 through length($trbl) {\r\n    $this: nth($trbl, $i);\r\n    $new: ();\r\n    $margin: null;\r\n    $padding: null;\r\n    $padding-x: null;\r\n\r\n    @if $this > 0 {\r\n      $this: map-merge($bleed, (span: $this));\r\n      $margin: span($this);\r\n      $padding: $margin;\r\n      $padding-x: $padding;\r\n    }\r\n\r\n    @if $margin and $margin > 0 {\r\n      $margin: - $margin;\r\n\r\n      @if is-inside($this) {\r\n        $gutter: gutter($this);\r\n        $join: if($gutter and comparable($padding, $gutter), true, false);\r\n        $padding-x: if($join and $padding > 0, $padding + $gutter, $padding);\r\n      }\r\n    }\r\n\r\n    @if $i == 1 {\r\n      $new: (\r\n        margin-top: $margin,\r\n        padding-top: $padding,\r\n        margin-right: $margin,\r\n        padding-right: $padding-x,\r\n        margin-bottom: $margin,\r\n        padding-bottom: $padding,\r\n        margin-left: $margin,\r\n        padding-left: $padding-x,\r\n      );\r\n    } @else if $i == 2 {\r\n      $new: (\r\n        margin-right: $margin,\r\n        padding-right: $padding-x,\r\n        margin-left: $margin,\r\n        padding-left: $padding-x,\r\n      );\r\n    } @else if $i == 3 {\r\n      $new: (\r\n        margin-bottom: $margin,\r\n        padding-bottom: $padding,\r\n      );\r\n    } @else if $i == 4 {\r\n      $new: (\r\n        margin-left: $margin,\r\n        padding-left: $padding-x,\r\n      );\r\n    }\r\n\r\n    $output: map-merge($output, $new);\r\n  }\r\n\r\n  @each $prop, $value in $output {\r\n    $output: if($value == 0, map-merge($output, ($prop: null)), $output);\r\n  }\r\n\r\n  @return bleed-shorthand($output);\r\n}\r\n\r\n// Bleed Shorthand\r\n// ---------------\r\n// Convert bleed output into shorthand when possible.\r\n// - $bleed: <output map>\r\n@function bleed-shorthand(\r\n  $bleed\r\n) {\r\n  $margin: ();\r\n  $padding: ();\r\n  $return: ();\r\n\r\n  @each $key, $value in $bleed {\r\n    @if str-index($key, margin) {\r\n      $margin: map-merge($margin, ($key: $value));\r\n    } @else if str-index($key, padding) > 0 {\r\n      $padding: map-merge($padding, ($key: $value));\r\n    }\r\n  }\r\n\r\n  $props: (\r\n    margin: $margin,\r\n    padding: $padding,\r\n  );\r\n\r\n  @each $name, $map in $props {\r\n    $four: if(length(map-keys($map)) == 4, true, false);\r\n    $null: if(index(map-values($map), null), true, false);\r\n\r\n    @if $four and not($null) {\r\n      $top: map-get($map, '#{$name}-top');\r\n      $right: map-get($map, '#{$name}-right');\r\n      $bottom: map-get($map, '#{$name}-bottom');\r\n      $left: map-get($map, '#{$name}-left');\r\n\r\n      $tb: if($top == $bottom, $top, null);\r\n      $rl: if($right == $left, $right, null);\r\n      $all: if($tb == $rl, $tb, null);\r\n\r\n      $new: if($all, $all, null);\r\n\r\n      @if not($new) {\r\n        @if $tb and $rl {\r\n          $new: $tb $rl;\r\n        } @else if $rl {\r\n          $new: $top $rl $bottom;\r\n        } @else {\r\n          $new: $top $right $bottom $left;\r\n        }\r\n      }\r\n\r\n      $return: map-merge($return, ($name: $new));\r\n    } @else {\r\n      $return: map-merge($return, $map);\r\n    }\r\n  }\r\n\r\n  @return $return;\r\n}\r\n\r\n/* scss-combine:susy/breakpoint-plugin */\r\n// Breakpoint Integration\r\n// ======================\r\n\r\n$susy-media: () !default;\r\n$susy-media-fallback: false !default;\r\n\r\n$_susy-media-context: ();\r\n\r\n\r\n// Susy Breakpoint\r\n// ---------------\r\n// Change grids at different media query breakpoints.\r\n// - $query     : <min-width> [<max-width>] | <property> <value> | <map>\r\n// - $layout    : <settings>\r\n// - $no-query  : <boolean> | <selector>\r\n@mixin susy-breakpoint(\r\n  $query,\r\n  $layout: false,\r\n  $no-query: $susy-media-fallback\r\n) {\r\n  @include susy-media-router($query, $no-query) {\r\n    @if $layout {\r\n      @include with-layout($layout) {\r\n        @content;\r\n      }\r\n    } @else {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Susy Media\r\n// ----------\r\n// - $query: <min-width> [<max-width>] | <property> <value>\r\n// - $no-query: <boolean> | <selector>\r\n@mixin susy-media(\r\n  $query,\r\n  $no-query: $susy-media-fallback\r\n) {\r\n  $old-context: $_susy-media-context;\r\n  $name: if(map-has-key($susy-media, $query), $query, null);\r\n  $query: susy-get-media($query);\r\n  $query: susy-parse-media($query);\r\n\r\n  @include susy-media-context($query, $name);\r\n\r\n  @if $no-query and type-of($no-query) != string {\r\n    @content;\r\n  } @else {\r\n    @media #{susy-render-media($query)} {\r\n      @content;\r\n    }\r\n\r\n    @if type-of($no-query) == string {\r\n      #{$no-query} & {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include susy-media-context($old-context, $clean: true);\r\n}\r\n\r\n\r\n// Media Router\r\n// ------------\r\n// Rout media arguments to the correct mixin.\r\n@mixin susy-media-router(\r\n  $query,\r\n  $no-query: $susy-media-fallback\r\n) {\r\n  @if susy-support(breakpoint, (mixin: breakpoint), $warn: false) {\r\n    @include breakpoint($query, $no-query) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @include susy-media($query, $no-query) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Update Context\r\n// -------------\r\n// Set the new media context\r\n@mixin susy-media-context(\r\n  $query,\r\n  $name: null,\r\n  $clean: false\r\n) {\r\n  $query: map-merge((name: $name), $query);\r\n\r\n  @if $clean {\r\n    $_susy-media-context: $query !global;\r\n  } @else {\r\n    $_susy-media-context: map-merge($_susy-media-context, $query) !global;\r\n  }\r\n}\r\n\r\n\r\n// Media Context\r\n// -------------\r\n// Return the full media context, or a single media property (e.g. min-width)\r\n@function susy-media-context(\r\n  $property: false\r\n) {\r\n  @if $property {\r\n    @return map-get($_susy-media-context, $property);\r\n  } @else {\r\n    @return $_susy-media-context;\r\n  }\r\n}\r\n\r\n\r\n// Get Media\r\n// ---------\r\n// Return a named media-query from $susy-media.\r\n// - $name: <key>\r\n@function susy-get-media(\r\n  $name\r\n) {\r\n  @if map-has-key($susy-media, $name) {\r\n    $map-value: map-get($susy-media, $name);\r\n    @if ($name == $map-value) {\r\n      $name: $map-value;\r\n    } @else {\r\n      $name: susy-get-media($map-value);\r\n    }\r\n  }\r\n\r\n  @return $name;\r\n}\r\n\r\n\r\n// Render Media\r\n// ------------\r\n// Build a media-query string from various media settings\r\n@function susy-render-media(\r\n  $query\r\n) {\r\n  $output: null;\r\n  @each $property, $value in $query {\r\n    $string: null;\r\n\r\n    @if $property == media {\r\n      $string: $value;\r\n    } @else {\r\n      $string: '(#{$property}: #{$value})';\r\n    }\r\n\r\n    $output: if($output, '#{$output} and #{$string}', $string);\r\n  }\r\n\r\n  @return $output;\r\n}\r\n\r\n\r\n// Parse Media\r\n// -----------\r\n// Return parsed media-query settings based on shorthand\r\n@function susy-parse-media(\r\n  $query\r\n) {\r\n  $mq: null;\r\n  @if type-of($query) == map {\r\n    $mq: $query;\r\n  } @else if type-of($query) == number {\r\n    $mq: (min-width: $query);\r\n  } @else if type-of($query) == list and length($query) == 2 {\r\n    @if type-of(nth($query, 1)) == number {\r\n      $mq: (\r\n        min-width: min($query...),\r\n        max-width: max($query...),\r\n      );\r\n    } @else {\r\n      $mq: (nth($query, 1): nth($query, 2));\r\n    }\r\n  } @else {\r\n    $mq: (media: '#{$query}');\r\n  }\r\n\r\n  @return $mq;\r\n}\r\n\r\n\r\n\r\n/* scss-combine:../../node_modules/breakpoint-sass/stylesheets/breakpoint */\r\n//////////////////////////////\r\n// Default Variables\r\n//////////////////////////////\r\n$Breakpoint-Settings: (\r\n  'default media': all,\r\n  'default feature': min-width,\r\n  'default pair': width,\r\n\r\n  'force all media type': false,\r\n  'to ems': false,\r\n  'transform resolutions': true,\r\n\r\n  'no queries': false,\r\n  'no query fallbacks': false,\r\n\r\n  'base font size': 16px,\r\n\r\n  'legacy syntax': false\r\n);\r\n\r\n$breakpoint: () !default;\r\n\r\n//////////////////////////////\r\n// Imports\r\n//////////////////////////////\r\n/* scss-combine:breakpoint/settings */\r\n//////////////////////////////\r\n// Has Setting\r\n//////////////////////////////\r\n@function breakpoint-has($setting) {\r\n  @if map-has-key($breakpoint, $setting) {\r\n    @return true;\r\n  }\r\n  @else {\r\n    @return false;\r\n  }\r\n}\r\n\r\n//////////////////////////////\r\n// Get Settings\r\n//////////////////////////////\r\n@function breakpoint-get($setting) {\r\n  @if breakpoint-has($setting) {\r\n    @return map-get($breakpoint, $setting);\r\n  }\r\n  @else {\r\n    @return map-get($Breakpoint-Settings, $setting);\r\n  }\r\n}\r\n\r\n//////////////////////////////\r\n// Set Settings\r\n//////////////////////////////\r\n@function breakpoint-set($setting, $value) {\r\n  @if (str-index($setting, '-') or str-index($setting, '_')) and str-index($setting, ' ') == null {\r\n    @warn \"Words in Breakpoint settings should be separated by spaces, not dashes or underscores. Please replace dashes and underscores between words with spaces. Settings will not work as expected until changed.\";\r\n  }\r\n  $breakpoint: map-merge($breakpoint, ($setting: $value)) !global;\r\n  @return true;\r\n}\r\n\r\n@mixin breakpoint-change($setting, $value) {\r\n  $breakpoint-change: breakpoint-set($setting, $value);\r\n}\r\n\r\n@mixin breakpoint-set($setting, $value) {\r\n  @include breakpoint-change($setting, $value);\r\n}\r\n\r\n@mixin bkpt-change($setting, $value) {\r\n  @include breakpoint-change($setting, $value);\r\n}\r\n@mixin bkpt-set($setting, $value) {\r\n  @include breakpoint-change($setting, $value);\r\n}\r\n\r\n//////////////////////////////\r\n// Remove Setting\r\n//////////////////////////////\r\n@function breakpoint-reset($settings...) {\r\n  @if length($settings) == 1 {\r\n    $settings: nth($settings, 1);\r\n  }\r\n\r\n  @each $setting in $settings {\r\n    $breakpoint: map-remove($breakpoint, $setting) !global;\r\n  }\r\n  @return true;\r\n}\r\n\r\n@mixin breakpoint-reset($settings...) {\r\n  $breakpoint-reset: breakpoint-reset($settings);\r\n}\r\n\r\n@mixin bkpt-reset($settings...) {\r\n  $breakpoint-reset: breakpoint-reset($settings);\r\n}\r\n/* scss-combine:breakpoint/context */\r\n//////////////////////////////\r\n// Private Breakpoint Variables\r\n//////////////////////////////\r\n$private-breakpoint-context-holder: ();\r\n$private-breakpoint-query-count: 0 !default;\r\n\r\n//////////////////////////////\r\n// Breakpoint Has Context\r\n// Returns whether or not you are inside a Breakpoint query\r\n//////////////////////////////\r\n@function breakpoint-has-context() {\r\n  @if length($private-breakpoint-query-count) {\r\n    @return true;\r\n  }\r\n  @else {\r\n    @return false;\r\n  }\r\n}\r\n\r\n//////////////////////////////\r\n// Breakpoint Get Context\r\n// $feature: Input feature to get it's current MQ context. Returns false if no context\r\n//////////////////////////////\r\n@function breakpoint-get-context($feature) {\r\n  @if map-has-key($private-breakpoint-context-holder, $feature) {\r\n    $get: map-get($private-breakpoint-context-holder, $feature);\r\n    // Special handling of no-query from get side so /false/ prepends aren't returned\r\n    @if $feature == 'no-query' {\r\n      @if type-of($get) == 'list' and length($get) > 1 and nth($get, 1) == false {\r\n        $get: nth($get, length($get));\r\n      }\r\n    }\r\n    @return $get;\r\n  }\r\n  @else {\r\n    @if breakpoint-has-context() and $feature == 'media' {\r\n      @return breakpoint-get('default media');\r\n    }\r\n    @else {\r\n      @return false;\r\n    }\r\n  }\r\n}\r\n\r\n//////////////////////////////\r\n// Private function to set context\r\n//////////////////////////////\r\n@function private-breakpoint-set-context($feature, $value) {\r\n  @if $value == 'monochrome' {\r\n    $feature: 'monochrome';\r\n  }\r\n\r\n  $current: map-get($private-breakpoint-context-holder, $feature);\r\n  @if $current and length($current) == $private-breakpoint-query-count {\r\n    @warn \"You have already queried against `#{$feature}`. Unexpected things may happen if you query against the same feature more than once in the same `and` query. Breakpoint is overwriting the current context with `#{$value}`\";\r\n  }\r\n\r\n  @if not map-has-key($private-breakpoint-context-holder, $feature) {\r\n    $v-holder: ();\r\n    @for $i from 1 to $private-breakpoint-query-count {\r\n      @if $feature == 'media' {\r\n        $v-holder: append($v-holder, breakpoint-get('default media'));\r\n      }\r\n      @else {\r\n        $v-holder: append($v-holder, false);\r\n      }\r\n    }\r\n    $v-holder: append($v-holder, $value);\r\n    $private-breakpoint-context-holder: map-merge($private-breakpoint-context-holder, ($feature: $v-holder)) !global;\r\n  }\r\n  @else {\r\n    $v-holder: map-get($private-breakpoint-context-holder, $feature);\r\n    $length: length($v-holder);\r\n    @for $i from $length to $private-breakpoint-query-count - 1 {\r\n      @if $feature == 'media' {\r\n        $v-holder: append($v-holder, breakpoint-get('default media'));\r\n      }\r\n      @else {\r\n        $v-holder: append($v-holder, false);\r\n      }\r\n    }\r\n    $v-holder: append($v-holder, $value);\r\n    $private-breakpoint-context-holder: map-merge($private-breakpoint-context-holder, ($feature: $v-holder)) !global;\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n//////////////////////////////\r\n// Private function to reset context\r\n//////////////////////////////\r\n@mixin private-breakpoint-reset-contexts {\r\n  $private-breakpoint-context-holder: () !global;\r\n  $private-breakpoint-query-count: 0 !global;\r\n}\r\n/* scss-combine:breakpoint/helpers */\r\n//////////////////////////////\r\n// Converts the input value to Base EMs\r\n//////////////////////////////\r\n@function breakpoint-to-base-em($value) {\r\n  $value-unit: unit($value);\r\n\r\n  // Will convert relative EMs into root EMs.\r\n  @if breakpoint-get('base font size') and type-of(breakpoint-get('base font size')) == 'number' and $value-unit == 'em' {\r\n    $base-unit: unit(breakpoint-get('base font size'));\r\n\r\n    @if $base-unit == 'px' or $base-unit == '%' or $base-unit == 'em' or $base-unit == 'pt' {\r\n      @return base-conversion($value) / base-conversion(breakpoint-get('base font size')) * 1em;\r\n    }\r\n    @else {\r\n      @warn '#{breakpoint-get(\\'base font size\\')} is not set in valid units for font size!';\r\n      @return false;\r\n    }\r\n  }\r\n  @else {\r\n    @return base-conversion($value);\r\n  }\r\n}\r\n\r\n@function base-conversion($value) {\r\n  $unit: unit($value);\r\n\r\n  @if $unit == 'px' {\r\n    @return $value / 16px * 1em;\r\n  }\r\n  @else if $unit == '%' {\r\n    @return $value / 100% * 1em;\r\n  }\r\n  @else if $unit == 'em' {\r\n    @return $value;\r\n  }\r\n  @else if $unit == 'pt' {\r\n    @return $value / 12pt * 1em;\r\n  }\r\n  @else {\r\n    @return $value;\r\n//    @warn 'Everything is terrible! What have you done?!';\r\n  }\r\n}\r\n\r\n//////////////////////////////\r\n// Returns whether the feature can have a min/max pair\r\n//////////////////////////////\r\n$breakpoint-min-max-features: 'color',\r\n                              'color-index',\r\n                              'aspect-ratio',\r\n                              'device-aspect-ratio',\r\n                              'device-height',\r\n                              'device-width',\r\n                              'height',\r\n                              'monochrome',\r\n                              'resolution',\r\n                              'width';\r\n\r\n@function breakpoint-min-max($feature) {\r\n  @each $item in $breakpoint-min-max-features {\r\n    @if $feature == $item {\r\n      @return true;\r\n    }\r\n  }\r\n  @return false;\r\n}\r\n\r\n//////////////////////////////\r\n// Returns whether the feature can have a string value\r\n//////////////////////////////\r\n$breakpoint-string-features:  'orientation',\r\n                              'scan',\r\n                              'color',\r\n                              'aspect-ratio',\r\n                              'device-aspect-ratio',\r\n                              'pointer',\r\n                              'luminosity';\r\n\r\n@function breakpoint-string-value($feature) {\r\n  @each $item in $breakpoint-string-features {\r\n    @if breakpoint-min-max($item) {\r\n      @if $feature == 'min-#{$item}' or $feature == 'max-#{$item}' {\r\n        @return true;\r\n      }\r\n    }\r\n    @else if $feature == $item {\r\n      @return true;\r\n    }\r\n  }\r\n  @return false;\r\n}\r\n\r\n//////////////////////////////\r\n// Returns whether the feature is a media type\r\n//////////////////////////////\r\n$breakpoint-media-types:  'all',\r\n                          'braille',\r\n                          'embossed',\r\n                          'handheld',\r\n                          'print',\r\n                          'projection',\r\n                          'screen',\r\n                          'speech',\r\n                          'tty',\r\n                          'tv';\r\n\r\n@function breakpoint-is-media($feature) {\r\n  @each $media in $breakpoint-media-types {\r\n    @if ($feature == $media) or ($feature == 'not #{$media}') or ($feature == 'only #{$media}') {\r\n      @return true;\r\n    }\r\n  }\r\n\r\n  @return false;\r\n}\r\n\r\n//////////////////////////////\r\n// Returns whether the feature can stand alone\r\n//////////////////////////////\r\n$breakpoint-single-string-features: 'color',\r\n                                    'color-index',\r\n                                    'grid',\r\n                                    'monochrome';\r\n\r\n@function breakpoint-single-string($feature) {\r\n  @each $item in $breakpoint-single-string-features {\r\n    @if $feature == $item {\r\n      @return true;\r\n    }\r\n  }\r\n  @return false;\r\n}\r\n\r\n//////////////////////////////\r\n// Returns whether the feature\r\n//////////////////////////////\r\n@function breakpoint-is-resolution($feature) {\r\n  $resolutions: 'device-pixel-ratio', 'dpr';\r\n\r\n  @if breakpoint-get('transform resolutions') {\r\n    $resolutions: append($resolutions, 'resolution');\r\n  }\r\n\r\n  @each $reso in $resolutions {\r\n    @if index($feature, $reso) or index($feature, 'min-#{$reso}') or index($feature, 'max-#{$reso}') {\r\n      @return true;\r\n    }\r\n  }\r\n\r\n  @return false;\r\n}\r\n\r\n/* scss-combine:breakpoint/parsers */\r\n//////////////////////////////\r\n// Import Parser Pieces\r\n//////////////////////////////\r\n/* scss-combine:parsers/query */\r\n@function breakpoint-parse-query($query) {\r\n  // Parse features out of an individual query\r\n  $feature-holder: ();\r\n  $query-holder: ();\r\n  $length: length($query);\r\n\r\n  @if $length == 2 {\r\n    // If we've got a string/number, number/string, check to see if it's a valid string/number pair or two singles\r\n    @if (type-of(nth($query, 1)) == 'string' and type-of(nth($query, 2)) == 'number') or (type-of(nth($query, 1)) == 'number' and type-of(nth($query, 2)) == 'string') {\r\n\r\n      $number: '';\r\n      $value: '';\r\n\r\n      @if type-of(nth($query, 1)) == 'string' {\r\n        $number: nth($query, 2);\r\n        $value: nth($query, 1);\r\n      }\r\n      @else {\r\n        $number: nth($query, 1);\r\n        $value: nth($query, 2);\r\n      }\r\n\r\n      // If the string value can be a single value, check to see if the number passed in is a valid input for said single value. Fortunately, all current single-value options only accept unitless numbers, so this check is easy.\r\n      @if breakpoint-single-string($value) {\r\n        @if unitless($number) {\r\n          $feature-holder: append($value, $number, space);\r\n          $query-holder: append($query-holder, $feature-holder, comma);\r\n          @return $query-holder;\r\n        }\r\n      }\r\n      // If the string is a media type, split the query\r\n      @if breakpoint-is-media($value) {\r\n        $query-holder: append($query-holder, nth($query, 1));\r\n        $query-holder: append($query-holder, nth($query, 2));\r\n        @return $query-holder;\r\n      }\r\n      // If it's not a single feature, we're just going to assume it's a proper string/value pair, and roll with it.\r\n      @else {\r\n        $feature-holder: append($value, $number, space);\r\n        $query-holder: append($query-holder, $feature-holder, comma);\r\n        @return $query-holder;\r\n      }\r\n\r\n    }\r\n    // If they're both numbers, we assume it's a double and roll with that\r\n    @else if (type-of(nth($query, 1)) == 'number' and type-of(nth($query, 2)) == 'number') {\r\n      $feature-holder: append(nth($query, 1), nth($query, 2), space);\r\n      $query-holder: append($query-holder, $feature-holder, comma);\r\n      @return $query-holder;\r\n    }\r\n    // If they're both strings and neither are singles, we roll with that.\r\n    @else if (type-of(nth($query, 1)) == 'string' and type-of(nth($query, 2)) == 'string') {\r\n      @if not breakpoint-single-string(nth($query, 1)) and not breakpoint-single-string(nth($query, 2)) {\r\n        $feature-holder: append(nth($query, 1), nth($query, 2), space);\r\n        $query-holder: append($query-holder, $feature-holder, comma);\r\n        @return $query-holder;\r\n      }\r\n    }\r\n  }\r\n  @else if $length == 3 {\r\n    // If we've got three items and none is a list, we check to see\r\n    @if type-of(nth($query, 1)) != 'list' and type-of(nth($query, 2)) != 'list' and type-of(nth($query, 3)) != 'list' {\r\n      // If none of the items are single string values and none of the values are media values, we're good.\r\n      @if (not breakpoint-single-string(nth($query, 1)) and not breakpoint-single-string(nth($query, 2)) and not breakpoint-single-string(nth($query, 3))) and  ((not breakpoint-is-media(nth($query, 1)) and not breakpoint-is-media(nth($query, 2)) and not breakpoint-is-media(nth($query, 3)))) {\r\n        $feature-holder: append(nth($query, 1), nth($query, 2), space);\r\n        $feature-holder: append($feature-holder, nth($query, 3), space);\r\n        $query-holder: append($query-holder, $feature-holder, comma);\r\n        @return $query-holder;\r\n      }\r\n      // let's check to see if the first item is a media type\r\n      @else if breakpoint-is-media(nth($query, 1)) {\r\n        $query-holder: append($query-holder, nth($query, 1));\r\n        $feature-holder: append(nth($query, 2), nth($query, 3), space);\r\n        $query-holder: append($query-holder, $feature-holder);\r\n        @return $query-holder;\r\n      }\r\n    }\r\n  }\r\n\r\n  // If it's a single item, or if it's not a special case double or triple, we can simply return the query.\r\n  @return $query;\r\n}\r\n\r\n/* scss-combine:parsers/single */\r\n//////////////////////////////\r\n// Import Pieces\r\n//////////////////////////////\r\n/* scss-combine:single/default */\r\n@function breakpoint-parse-default($feature) {\r\n  $default: breakpoint-get('default feature');\r\n\r\n  // Set Context\r\n  $context-setter: private-breakpoint-set-context($default, $feature);\r\n\r\n  @if (breakpoint-get('to ems') == true) and (type-of($feature) == 'number') {\r\n    @return '#{$default}: #{breakpoint-to-base-em($feature)}';\r\n  }\r\n  @else {\r\n    @return '#{$default}: #{$feature}';\r\n  }\r\n}\r\n\r\n\r\n@function breakpoint-parse-single($feature, $empty-media, $first) {\r\n  $parsed: '';\r\n  $leader: '';\r\n  // If we're forcing\r\n  @if not ($empty-media) or not ($first) {\r\n    $leader: 'and ';\r\n  }\r\n\r\n  // If it's a single feature that can stand alone, we let it\r\n  @if (breakpoint-single-string($feature)) {\r\n    $parsed: $feature;\r\n    // Set Context\r\n    $context-setter: private-breakpoint-set-context($feature, $feature);\r\n  }\r\n  // If it's not a stand alone feature, we pass it off to the default handler.\r\n  @else {\r\n    $parsed: breakpoint-parse-default($feature);\r\n  }\r\n\r\n  @return $leader + '(' + $parsed + ')';\r\n}\r\n\r\n/* scss-combine:parsers/double */\r\n//////////////////////////////\r\n// Import Pieces\r\n//////////////////////////////\r\n/* scss-combine:double/default-pair */\r\n@function breakpoint-parse-default-pair($first, $second) {\r\n  $default: breakpoint-get('default pair');\r\n  $min: '';\r\n  $max: '';\r\n\r\n  // Sort into min and max\r\n  $min: min($first, $second);\r\n  $max: max($first, $second);\r\n\r\n  // Set Context\r\n  $context-setter: private-breakpoint-set-context(min-#{$default}, $min);\r\n  $context-setter: private-breakpoint-set-context(max-#{$default}, $max);\r\n\r\n  // Make them EMs if need be\r\n  @if (breakpoint-get('to ems') == true) {\r\n    $min: breakpoint-to-base-em($min);\r\n    $max: breakpoint-to-base-em($max);\r\n  }\r\n\r\n  @return '(min-#{$default}: #{$min}) and (max-#{$default}: #{$max})';\r\n}\r\n\r\n/* scss-combine:double/double-string */\r\n@function breakpoint-parse-double-string($first, $second) {\r\n  $feature: '';\r\n  $value: '';\r\n\r\n  // Test to see which is the feature and which is the value\r\n  @if (breakpoint-string-value($first) == true) {\r\n    $feature: $first;\r\n    $value: $second;\r\n  }\r\n  @else if (breakpoint-string-value($second) == true) {\r\n    $feature: $second;\r\n    $value: $first;\r\n  }\r\n  @else {\r\n    @warn \"Neither #{$first} nor #{$second} is a valid media query name.\";\r\n  }\r\n\r\n  // Set Context\r\n  $context-setter: private-breakpoint-set-context($feature, $value);\r\n\r\n  @return '(#{$feature}: #{$value})';\r\n}\r\n/* scss-combine:double/default */\r\n@function breakpoint-parse-double-default($first, $second) {\r\n  $feature: '';\r\n  $value: '';\r\n\r\n  @if type-of($first) == 'string' {\r\n    $feature: $first;\r\n    $value: $second;\r\n  }\r\n  @else {\r\n    $feature: $second;\r\n    $value: $first;\r\n  }\r\n\r\n  // Set Context\r\n  $context-setter: private-breakpoint-set-context($feature, $value);\r\n\r\n  @if (breakpoint-get('to ems') == true) {\r\n    $value: breakpoint-to-base-em($value);\r\n  }\r\n\r\n  @return '(#{$feature}: #{$value})'\r\n}\r\n\r\n\r\n@function breakpoint-parse-double($feature, $empty-media, $first) {\r\n  $parsed: '';\r\n  $leader: '';\r\n  // If we're forcing\r\n  @if not ($empty-media) or not ($first) {\r\n    $leader: 'and ';\r\n  }\r\n\r\n  $first: nth($feature, 1);\r\n  $second: nth($feature, 2);\r\n\r\n  // If we've got two numbers, we know we need to use the default pair because there are no media queries that has a media feature that is a number\r\n  @if type-of($first) == 'number' and type-of($second) == 'number' {\r\n    $parsed: breakpoint-parse-default-pair($first, $second);\r\n  }\r\n  // If they are both strings, we send it through the string parser\r\n  @else if type-of($first) == 'string' and type-of($second) == 'string' {\r\n    $parsed: breakpoint-parse-double-string($first, $second);\r\n  }\r\n  // If it's a string/number pair, we parse it as a normal double\r\n  @else {\r\n    $parsed: breakpoint-parse-double-default($first, $second);\r\n  }\r\n\r\n  @return $leader + $parsed;\r\n}\r\n\r\n/* scss-combine:parsers/triple */\r\n//////////////////////////////\r\n// Import Pieces\r\n//////////////////////////////\r\n/* scss-combine:triple/default */\r\n@function breakpoint-parse-triple-default($feature, $first, $second) {\r\n\r\n  // Sort into min and max\r\n  $min: min($first, $second);\r\n  $max: max($first, $second);\r\n\r\n  // Set Context\r\n  $context-setter: private-breakpoint-set-context(min-#{$feature}, $min);\r\n  $context-setter: private-breakpoint-set-context(max-#{$feature}, $max);\r\n\r\n  // Make them EMs if need be\r\n  @if (breakpoint-get('to ems') == true) {\r\n    $min: breakpoint-to-base-em($min);\r\n    $max: breakpoint-to-base-em($max);\r\n  }\r\n\r\n  @return '(min-#{$feature}: #{$min}) and (max-#{$feature}: #{$max})';\r\n}\r\n\r\n\r\n@function breakpoint-parse-triple($feature, $empty-media, $first) {\r\n  $parsed: '';\r\n  $leader: '';\r\n\r\n  // If we're forcing\r\n  @if not ($empty-media) or not ($first) {\r\n    $leader: 'and ';\r\n  }\r\n\r\n  // separate the string features from the value numbers\r\n  $string: null;\r\n  $numbers: null;\r\n  @each $val in $feature {\r\n    @if type-of($val) == string {\r\n      $string: $val;\r\n    }\r\n    @else {\r\n      @if type-of($numbers) == 'null' {\r\n        $numbers: $val;\r\n      }\r\n      @else {\r\n        $numbers: append($numbers, $val);\r\n      }\r\n    }\r\n  }\r\n\r\n  $parsed: breakpoint-parse-triple-default($string, nth($numbers, 1), nth($numbers, 2));\r\n\r\n  @return $leader + $parsed;\r\n\r\n}\r\n\r\n/* scss-combine:parsers/resolution */\r\n/* scss-combine:resolution/resolution */\r\n@function breakpoint-make-resolutions($resolution) {\r\n  $length: length($resolution);\r\n\r\n  $output: ();\r\n\r\n  @if $length == 2 {\r\n    $feature: '';\r\n    $value: '';\r\n\r\n    // Find which is number\r\n    @if type-of(nth($resolution, 1)) == 'number' {\r\n      $value: nth($resolution, 1);\r\n    }\r\n    @else {\r\n      $value: nth($resolution, 2);\r\n    }\r\n\r\n    // Determine min/max/standard\r\n    @if index($resolution, 'min-resolution') {\r\n      $feature: 'min-';\r\n    }\r\n    @else if index($resolution, 'max-resolution') {\r\n      $feature: 'max-';\r\n    }\r\n\r\n    $standard: '(#{$feature}resolution: #{$value})';\r\n\r\n    // If we're not dealing with dppx,\r\n    @if unit($value) != 'dppx' {\r\n      $base: 96dpi;\r\n      @if unit($value) == 'dpcm' {\r\n        $base: 243.84dpcm;\r\n      }\r\n      // Write out feature tests\r\n      $webkit: '';\r\n      $moz: '';\r\n      $webkit: '(-webkit-#{$feature}device-pixel-ratio: #{$value / $base})';\r\n      $moz: '(#{$feature}-moz-device-pixel-ratio: #{$value / $base})';\r\n      // Append to output\r\n      $output: append($output, $standard, space);\r\n      $output: append($output, $webkit, space);\r\n      $output: append($output, $moz, space);\r\n    }\r\n    @else {\r\n      $webkit: '';\r\n      $moz: '';\r\n      $webkit: '(-webkit-#{$feature}device-pixel-ratio: #{$value / 1dppx})';\r\n      $moz: '(#{$feature}-moz-device-pixel-ratio: #{$value / 1dppx})';\r\n      $fallback: '(#{$feature}resolution: #{$value / 1dppx * 96dpi})';\r\n      // Append to output\r\n      $output: append($output, $standard, space);\r\n      $output: append($output, $webkit, space);\r\n      $output: append($output, $moz, space);\r\n      $output: append($output, $fallback, space);\r\n    }\r\n\r\n  }\r\n\r\n  @return $output;\r\n}\r\n\r\n\r\n@function breakpoint-build-resolution($query-print, $query-resolution, $empty-media, $first) {\r\n  $leader: '';\r\n  // If we're forcing\r\n  @if not ($empty-media) or not ($first) {\r\n    $leader: 'and ';\r\n  }\r\n\r\n  @if breakpoint-get('transform resolutions') and $query-resolution {\r\n    $resolutions: breakpoint-make-resolutions($query-resolution);\r\n    $length: length($resolutions);\r\n    $query-holder: '';\r\n\r\n    @for $i from 1 through $length {\r\n      $query: '#{$query-print} #{$leader}#{nth($resolutions, $i)}';\r\n      @if $i == 1 {\r\n        $query-holder: $query;\r\n      }\r\n      @else {\r\n        $query-holder: '#{$query-holder}, #{$query}';\r\n      }\r\n    }\r\n\r\n    @return $query-holder;\r\n  }\r\n  @else {\r\n    // Return with attached resolution\r\n    @return $query-print;\r\n  }\r\n}\r\n\r\n\r\n$Memo-Exists: function-exists(memo-get) and function-exists(memo-set);\r\n\r\n//////////////////////////////\r\n// Breakpoint Function\r\n//////////////////////////////\r\n@function breakpoint($query, $contexts...) {\r\n  $run: true;\r\n  $return: ();\r\n\r\n  // Grab the Memo Output if Memoization can be a thing\r\n  @if $Memo-Exists {\r\n    $return: memo-get(breakpoint, breakpoint $query $contexts);\r\n\r\n    @if $return != null {\r\n      $run: false;\r\n    }\r\n  }\r\n\r\n  @if not $Memo-Exists or $run {\r\n    // Internal Variables\r\n    $query-string: '';\r\n    $query-fallback: false;\r\n    $return: ();\r\n\r\n    // Reserve Global Private Breakpoint Context\r\n    $holder-context: $private-breakpoint-context-holder;\r\n    $holder-query-count: $private-breakpoint-query-count;\r\n\r\n    // Reset Global Private Breakpoint Context\r\n    $private-breakpoint-context-holder: () !global;\r\n    $private-breakpoint-query-count: 0 !global;\r\n\r\n\r\n    // Test to see if it's a comma-separated list\r\n    $or-list: if(list-separator($query) == 'comma', true, false);\r\n\r\n\r\n    @if ($or-list == false and breakpoint-get('legacy syntax') == false) {\r\n      $query-string: breakpoint-parse($query);\r\n    }\r\n    @else {\r\n      $length: length($query);\r\n\r\n      $last: nth($query, $length);\r\n      $query-fallback: breakpoint-no-query($last);\r\n\r\n      @if ($query-fallback != false) {\r\n        $length: $length - 1;\r\n      }\r\n\r\n      @if (breakpoint-get('legacy syntax') == true) {\r\n        $mq: ();\r\n\r\n        @for $i from 1 through $length {\r\n          $mq: append($mq, nth($query, $i), comma);\r\n        }\r\n\r\n        $query-string: breakpoint-parse($mq);\r\n      }\r\n      @else {\r\n        $query-string: '';\r\n        @for $i from 1 through $length {\r\n          $query-string: $query-string + if($i == 1, '', ', ') + breakpoint-parse(nth($query, $i));\r\n        }\r\n      }\r\n    }\r\n\r\n    $return: ('query': $query-string,\r\n        'fallback': $query-fallback,\r\n        'context holder': $private-breakpoint-context-holder,\r\n        'query count': $private-breakpoint-query-count\r\n    );\r\n    @if length($contexts) > 0 and nth($contexts, 1) != false {\r\n      @if $query-fallback != false {\r\n        $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\r\n      }\r\n      $context-map: ();\r\n      @each $context in $contexts {\r\n        $context-map: map-merge($context-map, ($context: breakpoint-get-context($context)));\r\n      }\r\n      $return: map-merge($return, (context: $context-map));\r\n    }\r\n\r\n    // Reset Global Private Breakpoint Context\r\n    $private-breakpoint-context-holder: () !global;\r\n    $private-breakpoint-query-count: 0 !global;\r\n\r\n    @if $Memo-Exists {\r\n      $holder: memo-set(breakpoint, breakpoint $query $contexts, $return);\r\n    }\r\n  }\r\n\r\n  @return $return;\r\n}\r\n\r\n//////////////////////////////\r\n// General Breakpoint Parser\r\n//////////////////////////////\r\n@function breakpoint-parse($query) {\r\n  // Increase number of 'and' queries\r\n  $private-breakpoint-query-count: $private-breakpoint-query-count + 1 !global;\r\n\r\n  // Set up Media Type\r\n  $query-print: '';\r\n\r\n  $force-all: ((breakpoint-get('force all media type') == true) and (breakpoint-get('default media') == 'all'));\r\n  $empty-media: true;\r\n  @if ($force-all == true) or (breakpoint-get('default media') != 'all') {\r\n    // Force the print of the default media type if (force all is true and default media type is all) or (default media type is not all)\r\n    $query-print: breakpoint-get('default media');\r\n    $empty-media: false;\r\n  }\r\n\r\n\r\n  $query-resolution: false;\r\n\r\n  $query-holder: breakpoint-parse-query($query);\r\n\r\n\r\n\r\n  // Loop over each parsed out query and write it to $query-print\r\n  $first: true;\r\n\r\n  @each $feature in $query-holder {\r\n    $length: length($feature);\r\n\r\n    // Parse a single feature\r\n    @if ($length == 1) {\r\n      // Feature is currently a list, grab the actual value\r\n      $feature: nth($feature, 1);\r\n\r\n      // Media Type must by convention be the first item, so it's safe to flat override $query-print, which right now should only be the default media type\r\n      @if (breakpoint-is-media($feature)) {\r\n        @if ($force-all == true) or ($feature != 'all') {\r\n          // Force the print of the default media type if (force all is true and default media type is all) or (default media type is not all)\r\n          $query-print: $feature;\r\n          $empty-media: false;\r\n\r\n          // Set Context\r\n          $context-setter: private-breakpoint-set-context(media, $query-print);\r\n        }\r\n      }\r\n      @else {\r\n        $parsed: breakpoint-parse-single($feature, $empty-media, $first);\r\n        $query-print: '#{$query-print} #{$parsed}';\r\n        $first: false;\r\n      }\r\n    }\r\n    // Parse a double feature\r\n    @else if ($length == 2) {\r\n      @if (breakpoint-is-resolution($feature) != false) {\r\n        $query-resolution: $feature;\r\n      }\r\n      @else {\r\n        $parsed: null;\r\n        // If it's a string/number pair,\r\n        // we check to see if one is a single-string value,\r\n        // then we parse it as a normal double\r\n        $alpha: nth($feature, 1);\r\n        $beta: nth($feature, 2);\r\n        @if breakpoint-single-string($alpha) or breakpoint-single-string($beta) {\r\n          $parsed: breakpoint-parse-single($alpha, $empty-media, $first);\r\n          $query-print: '#{$query-print} #{$parsed}';\r\n          $first: false;\r\n          $parsed: breakpoint-parse-single($beta, $empty-media, $first);\r\n          $query-print: '#{$query-print} #{$parsed}';\r\n        }\r\n        @else {\r\n          $parsed: breakpoint-parse-double($feature, $empty-media, $first);\r\n          $query-print: '#{$query-print} #{$parsed}';\r\n          $first: false;\r\n        }\r\n      }\r\n    }\r\n    // Parse a triple feature\r\n    @else if ($length == 3) {\r\n      $parsed: breakpoint-parse-triple($feature, $empty-media, $first);\r\n      $query-print: '#{$query-print} #{$parsed}';\r\n      $first: false;\r\n    }\r\n\r\n  }\r\n\r\n  @if ($query-resolution != false) {\r\n    $query-print: breakpoint-build-resolution($query-print, $query-resolution, $empty-media, $first);\r\n  }\r\n\r\n  // Loop through each feature that's been detected so far and append 'false' to the the value list to increment their counters\r\n  @each $f, $v in $private-breakpoint-context-holder {\r\n    $v-holder: $v;\r\n    $length: length($v-holder);\r\n    @if length($v-holder) < $private-breakpoint-query-count {\r\n      @for $i from $length to $private-breakpoint-query-count {\r\n        @if $f == 'media' {\r\n          $v-holder: append($v-holder, breakpoint-get('default media'));\r\n        }\r\n        @else {\r\n          $v-holder: append($v-holder, false);\r\n        }\r\n      }\r\n    }\r\n    $private-breakpoint-context-holder: map-merge($private-breakpoint-context-holder, ($f: $v-holder)) !global;\r\n  }\r\n\r\n  @return $query-print;\r\n}\r\n\r\n/* scss-combine:breakpoint/no-query */\r\n@function breakpoint-no-query($query) {\r\n  @if type-of($query) == 'list' {\r\n    $keyword: nth($query, 1);\r\n\r\n    @if type-of($keyword) == 'string' and ($keyword == 'no-query' or $keyword == 'no query' or $keyword == 'fallback') {\r\n      @return nth($query, 2);\r\n    }\r\n    @else {\r\n      @return false;\r\n    }\r\n  }\r\n  @else {\r\n    @return false;\r\n  }\r\n}\r\n\r\n\r\n/* scss-combine:breakpoint/respond-to */\r\n////////////////////////\r\n// Default the Breakpoints variable\r\n////////////////////////\r\n$breakpoints: () !default;\r\n$BREAKPOINTS: () !default;\r\n\r\n////////////////////////\r\n// Respond-to API Mixin\r\n////////////////////////\r\n@mixin respond-to($context, $no-query: false) {\r\n  @if length($breakpoints) > 0 and length($BREAKPOINTS) == 0 {\r\n    @warn \"In order to avoid variable namespace collisions, we have updated the way to add breakpoints for respond-to. Please change all instances of `$breakpoints: add-breakpoint()` to `@include add-breakpoint()`. The `add-breakpoint()` function will be deprecated in a future release.\";\r\n    $BREAKPOINTS: $breakpoints !global;\r\n    $breakpoints: () !global;\r\n  }\r\n\r\n  @if type-of($BREAKPOINTS) != 'map' {\r\n    // Just in case someone writes gibberish to the $breakpoints variable.\r\n    @warn \"Your breakpoints aren't a map! `respond-to` expects a map. Please check the value of $BREAKPOINTS variable.\";\r\n    @content;\r\n  }\r\n  @else if map-has-key($BREAKPOINTS, $context) {\r\n    @include breakpoint(map-get($BREAKPOINTS, $context), $no-query) {\r\n      @content;\r\n    }\r\n  }\r\n  @else if not map-has-key($BREAKPOINTS, $context) {\r\n    @warn \"`#{$context}` isn't a defined breakpoint! Please add it using `$breakpoints: add-breakpoint(`#{$context}`, $value);`\";\r\n    @content;\r\n  }\r\n  @else {\r\n    @warn \"You haven't created any breakpoints yet! Make some already! `@include add-breakpoint($name, $bkpt)`\";\r\n    @content;\r\n  }\r\n}\r\n\r\n//////////////////////////////\r\n// Add Breakpoint to Breakpoints\r\n// TODO: Remove function in next release\r\n//////////////////////////////\r\n@function add-breakpoint($name, $bkpt, $overwrite: false) {\r\n  $output: ($name: $bkpt);\r\n\r\n  @if length($breakpoints) == 0 {\r\n    @return $output;\r\n  }\r\n  @else {\r\n    @if map-has-key($breakpoints, $name) and $overwrite != true {\r\n      @warn \"You already have a breakpoint named `#{$name}`, please choose another breakpoint name, or pass in `$overwrite: true` to overwrite the previous breakpoint.\";\r\n      @return $breakpoints;\r\n    }\r\n    @else if not map-has-key($breakpoints, $name) or $overwrite == true {\r\n      @return map-merge($breakpoints, $output);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin add-breakpoint($name, $bkpt, $overwrite: false) {\r\n  $output: ($name: $bkpt);\r\n\r\n  @if length($BREAKPOINTS) == 0 {\r\n    $BREAKPOINTS: $output !global;\r\n  }\r\n  @else {\r\n    @if map-has-key($BREAKPOINTS, $name) and $overwrite != true {\r\n      @warn \"You already have a breakpoint named `#{$name}`, please choose another breakpoint name, or pass in `$overwrite: true` to overwrite the previous breakpoint.\";\r\n      $BREAKPOINTS: $BREAKPOINTS !global;\r\n    }\r\n    @else if not map-has-key($BREAKPOINTS, $name) or $overwrite == true {\r\n      $BREAKPOINTS: map-merge($BREAKPOINTS, $output) !global;\r\n    }\r\n  }\r\n}\r\n\r\n@function get-breakpoint($name: false) {\r\n  @if $name == false {\r\n    @return $BREAKPOINTS;\r\n  }\r\n  @else {\r\n    @return map-get($BREAKPOINTS, $name);\r\n  }\r\n}\r\n\r\n\r\n/* scss-combine:breakpoint/legacy-settings */\r\n@mixin legacy-settings-warning {\r\n  $legacyVars: (\r\n    'default-media': 'default media',\r\n    'default-feature': 'default feature',\r\n    'force-media-all': 'force all media type',\r\n    'to-ems': 'to ems',\r\n    'resolutions': 'transform resolutions',\r\n    'no-queries': 'no queries',\r\n    'no-query-fallbacks': 'no query fallbacks',\r\n    'base-font-size': 'base font size',\r\n    'legacy-syntax': 'legacy syntax'\r\n  );\r\n\r\n  @each $legacy, $new in $legacyVars {\r\n    @if global-variable-exists('breakpoint-' + $legacy) {\r\n      @warn \"In order to avoid variable namspace collisions, we have updated the way to change settings for Breakpoint. Please change all instances of `$breakpoint-#{$legacy}: {{setting}}` to `@include breakpoint-set('#{$new}', {{setting}})`. Variable settings, as well as this warning will be deprecated in a future release.\"\r\n    }\r\n  };\r\n\r\n  //////////////////////////////\r\n  // Hand correct each setting\r\n  //////////////////////////////\r\n  @if global-variable-exists('breakpoint-default-media') and $breakpoint-default-media != breakpoint-get('default media') {\r\n    @include breakpoint-set('default media', $breakpoint-default-media);\r\n  }\r\n  @if global-variable-exists('breakpoint-default-feature') and $breakpoint-default-feature != breakpoint-get('default feature') {\r\n    @include breakpoint-set('default feature', $breakpoint-default-feature);\r\n  }\r\n  @if global-variable-exists('breakpoint-force-media-all') and $breakpoint-force-media-all != breakpoint-get('force all media type') {\r\n    @include breakpoint-set('force all media type', $breakpoint-force-media-all);\r\n  }\r\n  @if global-variable-exists('breakpoint-to-ems') and $breakpoint-to-ems != breakpoint-get('to ems') {\r\n    @include breakpoint-set('to ems', $breakpoint-to-ems);\r\n  }\r\n  @if global-variable-exists('breakpoint-resolutions') and $breakpoint-resolutions != breakpoint-get('transform resolutions') {\r\n    @include breakpoint-set('transform resolutions', $breakpoint-resolutions);\r\n  }\r\n  @if global-variable-exists('breakpoint-no-queries') and $breakpoint-no-queries != breakpoint-get('no queries') {\r\n    @include breakpoint-set('no queries', $breakpoint-no-queries);\r\n  }\r\n  @if global-variable-exists('breakpoint-no-query-fallbacks') and $breakpoint-no-query-fallbacks != breakpoint-get('no query fallbacks') {\r\n    @include breakpoint-set('no query fallbacks', $breakpoint-no-query-fallbacks);\r\n  }\r\n  @if global-variable-exists('breakpoint-base-font-size') and $breakpoint-base-font-size != breakpoint-get('base font size') {\r\n    @include breakpoint-set('base font size', $breakpoint-base-font-size);\r\n  }\r\n  @if global-variable-exists('breakpoint-legacy-syntax') and $breakpoint-legacy-syntax != breakpoint-get('legacy syntax') {\r\n    @include breakpoint-set('legacy syntax', $breakpoint-legacy-syntax);\r\n  }\r\n}\r\n\r\n//////////////////////////////\r\n// Breakpoint Mixin\r\n//////////////////////////////\r\n\r\n@mixin breakpoint($query, $no-query: false) {\r\n  @include legacy-settings-warning;\r\n\r\n  // Reset contexts\r\n  @include private-breakpoint-reset-contexts();\r\n\r\n  $breakpoint: breakpoint($query, false);\r\n\r\n  $query-string: map-get($breakpoint, 'query');\r\n  $query-fallback: map-get($breakpoint, 'fallback');\r\n\r\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\r\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\r\n\r\n  // Allow for an as-needed override or usage of no query fallback.\r\n  @if $no-query != false {\r\n    $query-fallback: $no-query;\r\n  }\r\n\r\n  @if $query-fallback != false {\r\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\r\n  }\r\n\r\n  // Print Out Query String\r\n  @if not breakpoint-get('no queries') {\r\n    @media #{$query-string} {\r\n      @content;\r\n    }\r\n  }\r\n\r\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\r\n\r\n    $type: type-of(breakpoint-get('no query fallbacks'));\r\n    $print: false;\r\n\r\n    @if ($type == 'bool') {\r\n      $print: true;\r\n    }\r\n    @else if ($type == 'string') {\r\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\r\n        $print: true;\r\n      }\r\n    }\r\n    @else if ($type == 'list') {\r\n      @each $wrapper in breakpoint-get('no query fallbacks') {\r\n        @if $query-fallback == $wrapper {\r\n          $print: true;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Write Fallback\r\n    @if ($query-fallback != false) and ($print == true) {\r\n      $type-fallback: type-of($query-fallback);\r\n\r\n      @if ($type-fallback != 'bool') {\r\n        #{$query-fallback} & {\r\n          @content;\r\n        }\r\n      }\r\n      @else {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include private-breakpoint-reset-contexts();\r\n}\r\n\r\n\r\n@mixin mq($query, $no-query: false) {\r\n  @include breakpoint($query, $no-query) {\r\n    @content;\r\n  }\r\n}\r\n\r\n\r\n\r\n/* scss-combine:abstractions/rem-calc */\r\n// ================================================================ */\r\n//  Function to convert px to rem\r\n// from: https://github.com/zurb/foundation/blob/master/scss/foundation/_functions.scss\r\n\r\n$rem-base: 16px !default;\r\n\r\n@function strip-unit($num) {\r\n  @return $num / ($num * 0 + 1);\r\n}\r\n\r\n@function convert-to-rem($value, $base-value: $rem-base) {\r\n  //scss-lint:disable ZeroUnit - unit needed for accurate conditional evaluation\r\n  $value: strip-unit($value) / strip-unit($base-value) * 1rem;\r\n  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0\r\n  @return $value;\r\n}\r\n\r\n@function rem-calc($values, $base-value: $rem-base) {\r\n  $max: length($values);\r\n\r\n  @if $max == 1 {\r\n    @return convert-to-rem(nth($values, 1), $base-value);\r\n  }\r\n\r\n  $rem-values: ();\r\n  @for $i from 1 through $max {\r\n    $rem-values: append($rem-values, convert-to-rem(nth($values, $i), $base-value));\r\n  }\r\n\r\n  @return $rem-values;\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Settings - All the sass variables you might want to change, mapping to config\r\n\r\n/* scss-combine:vars/colors */\r\n//scss-lint:disable NameFormat - stencil functions\r\n\r\n// ================================================================ */\r\n// Set Colors - Always used the same across themes.\r\n\r\n$black: #000;\r\n$white: #fff;\r\n\r\n// ---------------------------------------------------------------- */\r\n// Colors used by status messages\r\n// REVIEW: These may need to be changed or removed, depending on where used\r\n\r\n$color-problem: #db1b1b;\r\n$color-warning: #feae00;\r\n$color-confirm: #3ca126;\r\n\r\n// TODO: Theme settings? Either map to existing or create a setting\r\n$color-banners-marketing: #eff5f6;\r\n$color-banners-discounts: #7c8986;\r\n\r\n// ---------------------------------------------------------------- */\r\n// Colors mapped from settings in config\r\n\r\n$color-primary: stencilColor(\"color_primary\"); // Sidebar\r\n$color-secondary: stencilColor(\"color_secondary\"); // Buttons\r\n$color-headings: stencilColor(\"color_headings\");\r\n$color-carousel-text: stencilColor(\"color_carousel_text\");\r\n$color-carousel-screen: stencilColor(\"color_carousel_screen\");\r\n$opacity-carousel-screen: stencilNumber(\"opacity_carousel_screen\", \"\");\r\n\r\n$color-dark: $black;\r\n$color-light: $white;\r\n\r\n// ---------------------------------------------------------------- */\r\n// Color Dirivitives: Calculated values based on theme colors\r\n\r\n$color-text: #565a5e;\r\n$color-text-lighter: #6c6d6f;\r\n$color-text-darker: $black;\r\n$color-text-meta: #8a8a8a;\r\n$color-sale-price: #db1b1b;\r\n\r\n$color-borders: #e3e3e3; // applied to all borders / lines\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Color function to output one color over another depending on contrast\r\n\r\n@function text-contrast($n) {\r\n  $color-brightness: round((red($n) * 299) + (green($n) * 587) + (blue($n) * 114) / 1000);\r\n  $light-color: round((red(#ffffff) * 299) + (green(#ffffff) * 587) + (blue(#ffffff) * 114) / 1000);\r\n\r\n  @if abs($color-brightness) < ($light-color/2){\r\n    @return $color-light;\r\n  }\r\n\r\n  @else {\r\n    @return $color-dark;\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n// Sidebar / mobile sticky navbar\r\n$color-sidebar: stencilColor(\"color_sidebar\");\r\n$color-sidebar-text: text-contrast(stencilColor(\"color_sidebar\"));\r\n\r\n$color-footer-bg: stencilColor(\"color_footer_background\");\r\n$color-footer-text: stencilColor(\"color_footer_text\");\r\n\r\n/* scss-combine:vars/misc */\r\n$ease-out-quad: cubic-bezier(0.250,0.460,0.450,0.940);\r\n\r\n// Input heights\r\n$height-input: rem-calc(50);\r\n$height-input-short: rem-calc(40);\r\n\r\n// Component heights\r\n$height-list-utils: rem-calc(80);\r\n\r\n// image cropping\r\n$grid-item-image-crop: stencilString('image_crop_grid');\r\n\r\n/* scss-combine:vars/component-breakpoints */\r\n\r\n// Breakpoint where navigation becomes an offcanvas slide\r\n$nav-slide-bp: 960px;\r\n$nav-slide-maxwidth: max-width ($nav-slide-bp - 1px);\r\n\r\n// Breakpoint for carousel slides\r\n$carousel-bp: 750px;\r\n$carousel-bp-maxwidth: max-width ($carousel-bp - 1px);\r\n\r\n// Breakpoint for things like vw font sizing and grid breakdowns\r\n$desktop-bp: 1200px;\r\n$desktop-bp-maxwidth: max-width ($desktop-bp - 1px);\r\n\r\n// Product grid breakpoints\r\n$col-2-bp: 500px;\r\n$col-3-bp: 1000px;\r\n$col-4-bp: 1280px;\r\n$col-6-bp: 1800px;\r\n\r\n// ---------------------------------------------------------------- */\r\n// Because of the page sidebar (that gets hidden below a certain point)\r\n// the content area shifts between being too wide or too narrow for some\r\n// of the middle breakpoints. The following mixins help cover those gaps.\r\n\r\n// Cart Page Breakpoints Used Below:\r\n\r\n@mixin bp-narrower-page {\r\n  // Breakpoint is: Up to 700, and between ~800-1100\r\n  @include breakpoint((max-width 699px, $nav-slide-bp 1099px, screen)) { @content };\r\n}\r\n\r\n@mixin bp-wider-page {\r\n  // Breakpoint: ~700-800 and over 1100\r\n  @include breakpoint((700px ($nav-slide-bp - 1), 1100px), screen) { @content };\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n/* scss-combine:vars/typography */\r\n// Typography mappings from the theme settings.\r\n$font-primary: stencilFontFamily('primary-font');\r\n$font-secondary: stencilFontFamily('secondary-font');\r\n\r\n// Return either the primary/secondary/tertiary font, based on settings\r\n@function font-mapper($settings-value) {\r\n  $value: stencilNumber($settings-value, '');\r\n\r\n  @if $value == 2 {\r\n    @return $font-secondary;\r\n  } @else {\r\n    @return $font-primary;\r\n  }\r\n}\r\n\r\n\r\n// ================================================================ */\r\n// Abstractions - Mixins, helpers, extends...\r\n\r\n/* scss-combine:abstractions/color-functions */\r\n// ================================================================ */\r\n//  Helpers for working with color variables\r\n\r\n@function shade($color, $percent) {\r\n  //scss-lint:disable ColorVariable - need to declare hex to shade properly\r\n  @return mix(#000, $color, $percent);\r\n}\r\n\r\n@function contrast($color, $percent: 6%, $threshold: 50) {\r\n  @if (lightness($color) > $threshold) {\r\n    @return shade($color, $percent);\r\n  } @else {\r\n    @return lighten($color, $percent);\r\n  }\r\n}\r\n\r\n/* scss-combine:abstractions/text-inputs */\r\n// https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_text-inputs.scss\r\n\r\n@function assign-inputs($inputs, $pseudo: null) {\r\n  $list: ();\r\n\r\n  @each $input in $inputs {\r\n    $input: unquote($input);\r\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\r\n    $list: append($list, $input, comma);\r\n  }\r\n\r\n  @return $list;\r\n}\r\n\r\n\r\n$text-inputs-list: 'input[type=\"color\"]',\r\n                  'input[type=\"date\"]',\r\n                  'input[type=\"datetime\"]',\r\n                  'input[type=\"datetime-local\"]',\r\n                  'input[type=\"email\"]',\r\n                  'input[type=\"month\"]',\r\n                  'input[type=\"number\"]',\r\n                  'input[type=\"password\"]',\r\n                  'input[type=\"search\"]',\r\n                  'input[type=\"tel\"]',\r\n                  'input[type=\"text\"]',\r\n                  'input[type=\"time\"]',\r\n                  'input[type=\"url\"]',\r\n                  'input[type=\"week\"]',\r\n                  'input:not([type])',\r\n                  'textarea';\r\n\r\n$all-text-inputs:        assign-inputs($text-inputs-list);\r\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\r\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\r\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\r\n\r\n/* scss-combine:abstractions/svg-encode-function */\r\n// ================================================================ */\r\n//  Function to create an optimized svg url\r\n// from: http://codepen.io/jakob-e/pen/doMoML\r\n\r\n@function svg-url($svg){\r\n    //\r\n    //  Chunk up string in order to avoid \r\n    //  \"stack level too deep\" error\r\n    //\r\n    $encoded:'';\r\n    $slice: 2000;\r\n    $index: 0;\r\n    $loops: ceil(str-length($svg)/$slice);\r\n    @for $i from 1 through $loops {\r\n        $chunk: str-slice($svg, $index, $index + $slice - 1);\r\n        //\r\n        //   Encode (may need a few extra replacements)\r\n        //\r\n        $chunk: str-replace($chunk,'\"','\\'');\r\n        $chunk: str-replace($chunk,'<','%3C');\r\n        $chunk: str-replace($chunk,'>','%3E');\r\n        $chunk: str-replace($chunk,'&','%26');\r\n        $chunk: str-replace($chunk,'#','%23');\r\n        $encoded: #{$encoded}#{$chunk};\r\n        $index: $index + $slice;\r\n    }\r\n    @return url(\"data:image/svg+xml;charset=utf8,#{$encoded}\");\r\n}\r\n\r\n//  Helper function to replace characters in a string\r\n@function str-replace($string, $search, $replace: '') {\r\n    $index: str-index($string, $search);\r\n    @if $index {\r\n        @return str-slice($string, 1, $index - 1) + $replace +\r\n            str-replace(str-slice($string, $index +\r\n            str-length($search)), $search, $replace);\r\n    }\r\n    @return $string;\r\n}\r\n\r\n/* scss-combine:abstractions/typographic-styles */\r\n// ================================================================ */\r\n// Style Extends - direct mappings taken from the main design\r\n// these styles are applied in the sketch file and extended throughout theme\r\n\r\n// scss-lint:disable Comment --> These are meant to be included in source for identifying styles\r\n\r\n%font-section-title {\r\n  color: $color-headings;\r\n  margin-bottom: 2em;\r\n  font-size: rem-calc(24);\r\n  text-align: center;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Rich text editor styles\r\n\r\n%header-text-treatment {\r\n  font-weight: 400;\r\n  color: $color-headings;\r\n}\r\n\r\n%font-h1 {\r\n  @extend %header-text-treatment;\r\n  font-family: font-mapper(\"font_h1-h3\");\r\n  @if (font-mapper(\"font_h1-h3\") == \"Lato\") { font-weight: 300; }\r\n\r\n  // Custom font size\r\n  font-size: if(font-mapper(\"font_h1-h3\") == \"Karla\", rem-calc(72), rem-calc(59));\r\n}\r\n\r\n%font-h2 {\r\n  @extend %header-text-treatment;\r\n  font-family: font-mapper(\"font_h1-h3\");\r\n  @if (font-mapper(\"font_h1-h3\") == \"Lato\") { font-weight: 300; }\r\n\r\n  // Custom font size\r\n  font-size: if(font-mapper(\"font_h1-h3\") == \"Karla\", rem-calc(46), rem-calc(41));\r\n}\r\n\r\n%font-h3 {\r\n  @extend %header-text-treatment;\r\n  font-family: font-mapper(\"font_h1-h3\");\r\n  font-size: rem-calc(24);\r\n\r\n  @if (font-mapper(\"font_h1-h3\") == \"PT Serif\") { font-weight: 700; }\r\n  @if (font-mapper(\"font_h1-h3\") == \"Lato\") { font-weight: 300; }\r\n\r\n  // Custom font size\r\n  @if (font-mapper(\"font_h1-h3\") == \"Karla\") { font-size: rem-calc(34); }\r\n  @elseif (font-mapper(\"font_h1-h3\") == \"PT Serif\") { font-size: rem-calc(24); }\r\n  @else { font-size: rem-calc(28); }\r\n}\r\n\r\n%font-h4 {\r\n  @extend %header-text-treatment;\r\n  font-family: font-mapper(\"font_h4-h6\");\r\n\r\n  @if (font-mapper(\"font_h4-h6\") == \"Oswald\") { text-transform: uppercase; }\r\n  @if (font-mapper(\"font_h4-h6\") == \"Lato\") { font-weight: 300; }\r\n\r\n  // Custom font size\r\n  font-size: if(font-mapper(\"font_h4-h6\") == \"Oswald\", rem-calc(28), rem-calc(21));\r\n}\r\n\r\n%font-h5 {\r\n  @extend %header-text-treatment;\r\n  font-family: font-mapper(\"font_h4-h6\");\r\n  font-size: rem-calc(18);\r\n\r\n  @if (font-mapper(\"font_h4-h6\") == \"Oswald\") { text-transform: uppercase; }\r\n  @if (font-mapper(\"font_h4-h6\") == \"Lato\") { font-weight: 300; }\r\n}\r\n\r\n%font-h6 {\r\n  @extend %header-text-treatment;\r\n  font-family: font-mapper(\"font_h4-h6\");\r\n  // Custom font size\r\n  font-size: if(font-mapper(\"font_h4-h6\") == \"Oswald\", rem-calc(13), rem-calc(14));\r\n  text-transform: uppercase;\r\n\r\n  @if (font-mapper(\"font_h4-h6\") == \"PT Serif\") { opacity: 0.4; }\r\n  @if (font-mapper(\"font_h4-h6\") == \"Lato\") { font-weight: 300; }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Text applications / treatment placehoders (to be mapped)\r\n\r\n%block-title {\r\n  // Used for blocks in the footer and...\r\n  font-size: rem-calc(18);\r\n}\r\n\r\n%label-text-treatment {\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(13);\r\n  font-weight: 700;\r\n  color: $color-dark;\r\n  text-transform: uppercase;\r\n}\r\n\r\n// As displayed on the blog page\r\n%large-page-title {\r\n  @extend %font-h1;\r\n  margin-top: 1em;\r\n  margin-bottom: 1em;\r\n  text-align: center;\r\n}\r\n\r\n%large-page-description {\r\n  margin-top: 1em;\r\n  margin-bottom: 4.5em; // 72px or ~1rem for H1's\r\n  text-align: center;\r\n}\r\n\r\n%blog-post-title {\r\n  margin-bottom: rem-calc(24);\r\n  font-size: rem-calc(28);\r\n  font-weight: 400;\r\n  text-align: center;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Carousel / Hero styles\r\n\r\n%carousel-title {\r\n  @extend %font-h1;\r\n  margin-bottom: 0.35em;\r\n  color: $color-carousel-text;\r\n\r\n  @include breakpoint($desktop-bp-maxwidth) {\r\n    font-size: rem-calc(36);\r\n  }\r\n\r\n  @include breakpoint($desktop-bp) { font-size: 3vw; }\r\n  @include breakpoint($desktop-bp + 100px) { font-size: 4vw; }\r\n  @include breakpoint($desktop-bp + 200px) { font-size: 5vw; }\r\n}\r\n\r\n%carousel-text {\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(13);\r\n  text-transform: uppercase;\r\n\r\n  @include breakpoint($carousel-bp) {\r\n    font-size: rem-calc(15);\r\n  }\r\n\r\n  @include breakpoint($desktop-bp) {\r\n    font-size: 1.1vw;\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Links\r\n\r\n%font-link {\r\n  font-size: rem-calc(16);\r\n  text-decoration: underline;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Miscellaneous\r\n\r\n%inputs-text-treatment {\r\n  font-family: $font-secondary;\r\n  font-weight: 300;\r\n}\r\n\r\n%timestamp-text-treatment {\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(14);\r\n  text-transform: uppercase;\r\n}\r\n\r\n%sidebar-text-treatment {\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(14);\r\n  line-height: rem-calc(41);\r\n  @if ($font-secondary == \"Lato\") {\r\n    font-weight: 300;\r\n  }\r\n}\r\n\r\n%product-badge-text-treatment {\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(10);\r\n  font-weight: bold;\r\n  letter-spacing: 0;\r\n}\r\n\r\n%banner-text-treatment {\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(14);\r\n}\r\n\r\n%alert-text-treatment {\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(15);\r\n}\r\n\r\n/* scss-combine:abstractions/extends */\r\n\r\n// Beat that clearfix: http://cssmojo.com/latest_new_clearfix_so_far/\r\n%clearfix:after {\r\n  display: table;\r\n  clear: both;\r\n  content: \"\";\r\n}\r\n\r\n%background-cover {\r\n  background: {\r\n    position: center;\r\n    repeat: no-repeat;\r\n    size: cover;\r\n  }\r\n}\r\n\r\n%ghost-center {\r\n  display: inline-block;\r\n  width: 0;\r\n  height: 100%;\r\n  margin-right: -0.33333rem;\r\n  vertical-align: middle;\r\n  content: \" \";\r\n}\r\n\r\n%visually-hidden {\r\n  // scss-lint:disable ImportantRule\r\n  position: absolute !important;\r\n  width: 1px !important;\r\n  height: 1px !important;\r\n  padding: 0 !important;\r\n  overflow: hidden;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n  border: 0 !important;\r\n}\r\n\r\n/* scss-combine:abstractions/mixins */\r\n// ================================================================ */\r\n// Table layout\r\n@mixin layout-group($gutter: 0, $gutter_vertical: null) {\r\n  @if $gutter_vertical == null {\r\n    $gutter_vertical: $gutter;\r\n  }\r\n\r\n  display: table;\r\n\r\n  @if $gutter == 0 {\r\n    width: 100%;\r\n  } @else {\r\n    width: calc(100% + #{$gutter * 2});\r\n    margin-left: $gutter * -1;\r\n    border-spacing: $gutter $gutter_vertical;\r\n  }\r\n}\r\n\r\n@mixin layout-group-item($align: middle) {\r\n  display: table-cell;\r\n  vertical-align: $align;\r\n}\r\n\r\n// ================================================================ */\r\n// Transparent overlay - used in carousel and hero images\r\n\r\n@mixin overlay-screen($color: #000, $opacity: 0.2) {\r\n  position: absolute;\r\n  display: block;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: $color;\r\n  opacity: $opacity;\r\n  content: \"\";\r\n}\r\n\r\n// ================================================================ */\r\n// Maintain Aspect Ratio\r\n// example: @include maintain-ratio(16 9);\r\n\r\n@mixin maintain-ratio($ratio: 1 1) {\r\n  @if length($ratio) < 2 or length($ratio) > 2 {\r\n    @warn \"$ratio must be a list with two values.\";\r\n  }\r\n\r\n  $width: 100%;\r\n  $height: percentage(nth($ratio, 2) / nth($ratio, 1));\r\n\r\n  width: $width;\r\n  padding-bottom: $height;\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Base - Core page stuff, styling elements, typography\r\n\r\n/* scss-combine:base/base */\r\n\r\nhtml {\r\n  font-size: 100%; // 16px base, but respects OS defaults too\r\n}\r\n\r\n// Border-Box FTW\r\n*,\r\n*:before,\r\n*:after {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody { background-color: $white; }\r\n\r\n// ---------------------------------------------------------------- */\r\n// Hiding and Showing Content\r\n// Snippets borrowed from a11yproject:\r\n// http://a11yproject.com/posts/how-to-hide-content/\r\n\r\n.visually-hidden,\r\n.sr-only {\r\n  @extend %visually-hidden;\r\n}\r\n\r\nbody:hover .visually-hidden a,\r\nbody:hover .visually-hidden input,\r\nbody:hover .visually-hidden button {\r\n  // scss-lint:disable ImportantRule\r\n  display: none !important;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n  visibility: hidden;\r\n}\r\n\r\n.visible { display: block; }\r\n\r\n// ---------------------------------------------------------------- */\r\n// svg\r\n\r\nsvg { fill: currentColor; }\r\n\r\n/* scss-combine:base/layout */\r\n// ================================================================ */\r\n// General Page Layout - styles related to sidebar layout\r\n\r\n@include bkpt-set('to ems', true);\r\n$nav-sidebar-width: rem-calc(340);\r\n\r\n$susy: (\r\n  columns: 12,\r\n  gutters: 0,\r\n  debug: (\r\n    image: hide,\r\n    output: background,\r\n  ),\r\n);\r\n// Default grid padding\r\n$pad-vertical: rem-calc(30);\r\n$pad-horizontal: rem-calc(30);\r\n\r\n// The height of the navigation bar (and amount to push down content)\r\n$nav-bar-height: rem-calc(75);\r\n\r\n// ---------------------------------------------------------------- */\r\n// General layout helpers\r\n\r\n.contained {\r\n  padding-right: rem-calc(20);\r\n  padding-left: rem-calc(20);\r\n\r\n  @include breakpoint($col-2-bp) {\r\n    padding-right: $pad-horizontal;\r\n    padding-left: $pad-horizontal;\r\n  }\r\n}\r\n\r\n.contained-narrow {\r\n  max-width: rem-calc(720);\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Mobile first / Default styles:\r\n// Required to keep sidebar / nav-bar positioned on ios\r\nhtml {\r\n  overflow-x: hidden;\r\n  overflow-y: scroll;\r\n\r\n  //prevent scroll stutter on mobile\r\n  @include breakpoint(max-width ($nav-slide-bp - 1px)) {\r\n    overflow: visible;\r\n  }\r\n}\r\n\r\n// Hide content nav-bar, show header navbar\r\n.nav-bar {\r\n  position: relative;\r\n  display: block;\r\n  width: 100%;\r\n  header & { display: none; }\r\n}\r\n\r\n.page-wrap {\r\n  position: relative;\r\n  left: 0;\r\n}\r\n\r\n.sidebar-nav {\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: -$nav-sidebar-width;\r\n  width: $nav-sidebar-width;\r\n  max-width: 100%;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Only applied to smallest widths\r\n\r\n@include breakpoint(max-width ($nav-slide-bp - 1px)) {\r\n\r\n  .nav-drawer-open {\r\n    .page-wrap {\r\n      position: relative;\r\n      left: $nav-sidebar-width;\r\n    }\r\n\r\n    .sidebar-nav {\r\n      left: 0;\r\n    }\r\n  }\r\n\r\n  .nav-bar {\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    left: 0;\r\n  }\r\n\r\n  .page-wrap,\r\n  .sidebar-nav { padding-top: $nav-bar-height; }\r\n\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Wider screens: nav bar fills side of page, header is part of page content\r\n\r\n@include breakpoint($nav-slide-bp) {\r\n\r\n  // Hide header nav-bar, show content navbar\r\n  .nav-bar {\r\n    display: none;\r\n    header & { display: block; }\r\n  }\r\n\r\n  .sidebar-nav { left: 0; }\r\n  .page-wrap { margin-left: $nav-sidebar-width; }\r\n  .drawer-item { display: none; }\r\n  .drawer-nav { display: none; }\r\n  .footer-scripts { margin-left: $nav-sidebar-width; }\r\n}\r\n\r\n.main-content {\r\n  @extend %clearfix;\r\n  padding-bottom: $pad-vertical * 4;\r\n}\r\n\r\n/* scss-combine:base/typography */\r\n\r\n\r\n// ================================================================ */\r\n// Headings - Using HTML5 markup with H1's all over the place\r\n\r\n// Reset all headings to a standard size / margin\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 1em;\r\n  line-height: 1.25;\r\n\r\n  a { color: inherit; }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Rich text editor / content areas\r\n\r\n.user-content {\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin-bottom: 0.5em;\r\n    line-height: 1.25;\r\n\r\n    &:first-child { margin-top: 0; }\r\n    &:last-child { margin-bottom: 0; }\r\n  }\r\n\r\n  h1 { @extend %font-h1; }\r\n  h2 { @extend %font-h2; }\r\n  h3 { @extend %font-h3; }\r\n  h4 { @extend %font-h4; }\r\n  h5 { @extend %font-h5; }\r\n  h6 { @extend %font-h6; }\r\n\r\n  ul,\r\n  ol {\r\n    padding-left: rem-calc(16);\r\n    list-style-position: outside;\r\n\r\n    li { padding-left: rem-calc(16); }\r\n  }\r\n\r\n  a {\r\n    text-decoration: underline;\r\n\r\n    &:hover { text-decoration: none; }\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6,\r\n  p,\r\n  blockquote,\r\n  ul,\r\n  ol,\r\n  img,\r\n  .fluid-width-video-wrapper {\r\n    &:not(:last-child), { margin-bottom: rem-calc(46); }\r\n  }\r\n\r\n  blockquote {\r\n    margin-left: 0;\r\n    line-height: rem-calc(39);\r\n    padding-left: rem-calc(32);\r\n    font-size: rem-calc(21);\r\n    color: $color-text-darker;\r\n    border-left: 1px solid $color-borders;\r\n  }\r\n}\r\n\r\n// ================================================================ */\r\n// General Body Text\r\n\r\nbody {\r\n  font-family: $font-primary;\r\n  font-size: rem-calc(16);\r\n  line-height: 1.79;\r\n  color: $color-text;\r\n}\r\n\r\n// REVIEW: This relies on content always being within padded regions\r\n// (Which is usually true, but lets see if this causes any problems.)\r\np:first-child { margin-top: 0; }\r\np:last-child { margin-bottom: 0; }\r\n\r\n// ================================================================ */\r\n// Specific Font Classes\r\n\r\n.section-title {\r\n  @extend %font-section-title;\r\n}\r\n\r\n.page-title {\r\n  @extend %large-page-title;\r\n}\r\n\r\n.page-description {\r\n  @extend %large-page-description;\r\n}\r\n\r\n/* scss-combine:base/links */\r\n\r\na {\r\n  color: $color-primary;\r\n  text-decoration: none;\r\n}\r\n\r\n.primary-link {\r\n  @extend %font-link;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Many links have a custom underline (rather than simple text-decoration style)\r\n\r\n%link-underlined {\r\n  color: $color-text;\r\n  padding-bottom: 0.25rem;\r\n  border-bottom: 1px solid;\r\n  transition: border-bottom-color 200ms ease;\r\n  border-bottom-color: $color-borders;\r\n}\r\n\r\n%underline-hover {\r\n  @extend %link-underlined;\r\n  border-bottom-color: transparent;\r\n\r\n  &:hover { border-bottom-color: $color-borders; }\r\n}\r\n\r\n/* scss-combine:base/media */\r\n// Content within the page, media, images, embeds.\r\n\r\nimg,\r\niframe {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\nfigure {\r\n  margin: 0;\r\n  text-align: center;\r\n}\r\n\r\n.user-content img {\r\n  margin-bottom: rem-calc(9);\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Image ratios\r\n\r\n.replaced-image {\r\n  display: block;\r\n  overflow: hidden;\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  .product-item-image & {\r\n    background-size: $grid-item-image-crop;\r\n  }\r\n\r\n  img,\r\n  &.lazy-image img {\r\n    opacity: 0;   // Image is replaced\r\n    vertical-align: middle;  // Avoid baseline / descender padding\r\n  }\r\n}\r\n\r\n.lazy-image {\r\n  transition: opacity 500ms ease-in-out;\r\n  opacity: 0;\r\n\r\n  &.lazy-loaded {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n[class*=\"ratio-\"]:not(.ratio-any) {\r\n  img {\r\n    @extend %visually-hidden;\r\n  }\r\n}\r\n\r\n.ratio-any {\r\n  img {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.ratio-16-9 {\r\n  @include maintain-ratio(16 9);\r\n}\r\n\r\n.ratio-4-3 {\r\n  @include maintain-ratio(4 3);\r\n}\r\n\r\n.ratio-1-1 {\r\n  @include maintain-ratio(1 1);\r\n}\r\n\r\n.ratio-3-4 {\r\n  @include maintain-ratio(3 4);\r\n}\r\n\r\n.ratio-gold {\r\n  padding-bottom: 61.8%\r\n}\r\n\r\n.ratio-2-3 {\r\n  @include maintain-ratio(2 3);\r\n}\r\n\r\n.ratio-1-2 {\r\n  @include maintain-ratio(1 2);\r\n}\r\n\r\n/* scss-combine:base/navigation */\r\n// ================================================================ */\r\n// List items within nav elements don't need nested padding\r\n\r\nnav {\r\n  ul { padding: 0; }\r\n  li { list-style-type: none; }\r\n}\r\n\r\n/* scss-combine:base/forms */\r\n// ================================================================ */\r\n// Form Components not specific to any one section or form.\r\n\r\n.form-field { margin: 1.333em 0; }\r\n\r\n.form-field-title {\r\n  @extend %label-text-treatment;\r\n  display: inline-block;\r\n  margin: 0 1em 0.66em 0;\r\n}\r\n\r\n.form-input {\r\n  display: block;\r\n\r\n  &::placeholder {\r\n    @extend %font-placeholder;\r\n    opacity: 0.75;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n}\r\n\r\n.form-label { display: block; }\r\n\r\n.form-radio,\r\n.form-checkbox {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n\r\n  + .form-label-text {\r\n    display: inline-block;\r\n    margin-bottom: rem-calc(10);\r\n    margin-left: rem-calc(10);\r\n  }\r\n}\r\n\r\n.form-label-text {\r\n  @extend %label-text-treatment;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\nfieldset {\r\n  padding: 0;\r\n  margin: 0;\r\n  border: 0;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  resize: vertical;\r\n}\r\n\r\n#{$all-text-inputs} {\r\n  @extend %inputs-text-treatment;\r\n  width: 100%;\r\n  padding: 1em;\r\n  border: {\r\n    color: $color-borders;\r\n    style: solid;\r\n    width: 1px;\r\n  }\r\n\r\n  &.form-input { height: $height-input; }\r\n  &.form-input:focus { border-color: $color-dark; }\r\n}\r\n\r\ntextarea,\r\ntextarea.form-input { height: auto; }\r\n\r\n.form-field-radio .form-label,\r\n.form-field-checkbox .form-label {\r\n  display: block;\r\n  margin-top: 0.66em;\r\n  margin-bottom: 0.66em;\r\n}\r\n\r\ninput[type='file'] {\r\n  @extend %inputs-text-treatment;\r\n  min-height: $height-input;\r\n  padding: 1.33em 0.66em;\r\n  border: 1px solid $color-borders;\r\n}\r\n\r\n// Remove spinner (up/down arrows) on number inputs (using inc/dec buttons instead)\r\ninput[type=number]::-webkit-inner-spin-button,\r\ninput[type=number]::-webkit-outer-spin-button {\r\n  margin: 0;\r\n  appearance: none;\r\n}\r\n\r\ninput[type=number] {\r\n  -moz-appearance: textfield;\r\n}\r\n\r\ninput[type=file] {\r\n  max-width: 100%;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Wrapper around inline inputs for filling *remaining* width\r\n\r\n.input-wrap-outer {\r\n  .button { float: right; }\r\n}\r\n\r\n.input-wrap {\r\n  overflow: hidden;\r\n\r\n  .form-input {\r\n    width: 100%;\r\n    border-right: 0;\r\n  }\r\n}\r\n\r\n// ================================================================ */\r\n// Form errors\r\n\r\n.form-error {\r\n  color: $color-problem;\r\n  border: 1px solid $color-problem;\r\n\r\n  &::placeholder { color: lighten($color-problem,30%); }\r\n}\r\n\r\n.form-error-message {\r\n  color: $color-problem;\r\n}\r\n\r\n.required-text { color: $color-problem; }\r\n\r\n// ================================================================ */\r\n// Custom Checkboxes and Radios\r\n// class needs to be applied to an input sibling (same level, after element)\r\n\r\n// Style all radios / checkboxes using custom graphics\r\n.form-field-swatch,\r\n.form-field-checkbox,\r\n.form-field-radio {\r\n  input { @extend .visually-hidden; }\r\n  input:focus ~ .form-label-text { outline: 0; }\r\n  input:focus ~ .form-label-text::before {\r\n    border: 1px solid $color-dark;\r\n  }\r\n}\r\n\r\n\r\n.form-field-checkbox,\r\n.form-field-radio {\r\n  .form-label-text {\r\n    margin-left: 2.333em;\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Custom checkbox - as placeholder classes for easy extending\r\n\r\n%custom-checkbox {\r\n  $box-size: 1.333rem;\r\n  display: inline-block;\r\n  width: $box-size;\r\n  height: $box-size;\r\n  line-height: 1em;\r\n  vertical-align: middle;\r\n  background: {\r\n    color: $white;\r\n    position: center center;\r\n    repeat: no-repeat;\r\n  }\r\n  border: 1px solid $color-borders;\r\n  content: \"\";\r\n}\r\n\r\n%custom-checkbox-checked {\r\n  background-image: svg-url('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"9\" viewBox=\"0 0 12 9\"><path fill=\"#{$color-text}\" fill-rule=\"evenodd\" d=\"M3.77 8.34l.5.5.5-.52 6.45-6.84c.27-.28.25-.72-.03-1-.3-.25-.75-.24-1 .04L4.25 6.86 1.5 4.1c-.28-.28-.72-.27-1 0-.27.27-.27.72 0 1l3.27 3.24z\"/></svg>');\r\n}\r\n\r\n.form-label-text {\r\n  .form-field-checkbox &::before {\r\n    @extend %custom-checkbox;\r\n    margin-right: 1em;\r\n    margin-left: -2.333em;\r\n  }\r\n\r\n  .form-field-checkbox :checked ~ &::before {\r\n    @extend %custom-checkbox-checked;\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Custom Radio Buttons\r\n\r\n.form-label-text {\r\n  line-height: rem-calc(18);\r\n\r\n  .form-field-radio &::before {\r\n    vertical-align: middle;\r\n    display: inline-block;\r\n    $box-size: rem-calc(18);\r\n    width: $box-size;\r\n    height: $box-size;\r\n    margin-right: 1em;\r\n    margin-left: -2.333em;\r\n    line-height: 1em;\r\n    background: {\r\n      color: $white;\r\n      position: center center;\r\n      repeat: no-repeat;\r\n    }\r\n    border: 1px solid $color-borders;\r\n    border-radius: 50%;\r\n    content: \"\";\r\n  }\r\n\r\n  .form-field-radio :checked ~ &::before {\r\n    background-image: url(\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E %3Crect width='8' height='8' x='6' y='6' fill='%238E969E' fill-rule='evenodd' rx='100' transform='translate(-6 -6)'/%3E %3C/svg%3E\");\r\n  }\r\n}\r\n\r\n// ================================================================ */\r\n// Select Elements (wrapper) - no js necessary\r\n\r\n%form-select {\r\n  @extend %inputs-text-treatment;\r\n  width: calc(100% - 3.25em);\r\n  height: $height-input;\r\n  padding: 0 2.25em 0 1em;\r\n  margin: -1px;\r\n  background-color: transparent;\r\n  border-color: transparent;\r\n  border-radius: 0;\r\n  box-sizing: content-box;\r\n  appearance: none;\r\n\r\n  // For IE 10+\r\n  &::-ms-expand { display: none; }\r\n\r\n  &:focus {\r\n    border: 1px solid $color-dark;\r\n    outline: 0;\r\n  }\r\n}\r\n\r\n.form-select-wrapper {\r\n  display: block;\r\n  max-width: 100%;\r\n  line-height: 1.6;\r\n  cursor: pointer;\r\n  background: {\r\n    // Down arrow on the right side.\r\n    image: svg-url('<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"5\" viewBox=\"0 0 8 5\"><path fill-rule=\"evenodd\" fill=\"#{$color-dark}\" d=\"M4.26 4.96l3.6-3.58c.2-.2.2-.52 0-.7-.2-.2-.52-.2-.7 0l-2.9 2.87-2.9-2.9c-.2-.2-.52-.2-.7 0-.2.2-.2.5 0 .7l3.6 3.6z\"/></svg>');\r\n    position: right 1em center;\r\n    repeat: no-repeat;\r\n  }\r\n  border: 1px solid $color-borders;\r\n\r\n  select {\r\n    @extend %form-select;\r\n  }\r\n\r\n  // For Shipping Calculator - select can be swapped with text field\r\n  input[type='text'] {\r\n    position: relative;\r\n    width: calc(100% + 1.5em);\r\n    margin: -1em 0 0 -1em;\r\n    border: 0;\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Validation Messages\r\n\r\n.form-inline-message {\r\n  display: block;\r\n  margin: 1em 1em 0.66em;\r\n  color: $color-problem;\r\n}\r\n\r\n.form-field-invalid .form-input { border-color: $color-problem; }\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n// /* scss-combine:base/tables */\r\n// ================================================================ */\r\n// REVIEW: From BC-Baseline - may not all be appropriate.\r\n// TODO: Remove commented var values, replace with appropriate values\r\n\r\ntable {\r\n  margin: 1em 0;\r\n  background: transparent;\r\n  border: 1px solid;\r\n  border-collapse: separate;\r\n  border-top: 0;\r\n  border-color: inherit;\r\n  // color: $body-color;\r\n  // border-color: $border-color;\r\n\r\n  &.table-clean {\r\n    border: 0;\r\n    border-radius: 0;\r\n  }\r\n}\r\n\r\ntd,\r\nth {\r\n  @extend %heading-text-treatment;\r\n  padding: 20px;\r\n  // color: $input-color;\r\n  // background: $input-background-color;\r\n  border-top: 1px solid;\r\n  border-top-color: inherit;\r\n\r\n  .table-clean & {\r\n    border: 0;\r\n  }\r\n}\r\n\r\nth {\r\n  font-weight: bold;\r\n}\r\n\r\ntd {\r\n  border-left: 1px solid;\r\n  border-left-color: inherit;\r\n\r\n  &:first-child {\r\n    border-left: 0;\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n/* scss-combine:base/buttons */\r\nbutton {\r\n  background: none;\r\n  border: 0;\r\n}\r\n\r\n.button {\r\n  display: inline-block;\r\n  height: $height-input;\r\n  padding: 0 2.6em;\r\n  margin-bottom: 1.333em;\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(14);\r\n  font-weight: 700;\r\n  line-height: $height-input;\r\n  letter-spacing: 0.12em;\r\n  color: $white;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  white-space: nowrap;\r\n  background-color: $color-primary;\r\n  border: 2px solid $color-primary;\r\n  transition: all 0.1s ease-out;\r\n\r\n  &:hover:not(:disabled) {\r\n    color: $color-primary;\r\n    text-decoration: none;\r\n    background-color: transparent;\r\n  }\r\n\r\n  &.button-inverted {\r\n    color: $color-primary;\r\n    background-color: transparent;\r\n\r\n    &:hover:not(:disabled) {\r\n      color: $white;\r\n      background-color: $color-primary;\r\n    }\r\n  }\r\n\r\n  &:disabled,\r\n  &.button-disabled,\r\n  &.button-disabled:hover {\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: rem-calc(8);\r\n  }\r\n\r\n  svg { vertical-align: middle; }\r\n}\r\n\r\n.button-secondary {\r\n  background-color: $color-secondary;\r\n  border-color: $color-secondary;\r\n\r\n  &:hover:not(:disabled) {\r\n    color: $color-secondary;\r\n  }\r\n\r\n  &.button-inverted {\r\n    color: $color-secondary;\r\n    background-color: transparent;\r\n\r\n    &:hover {\r\n      background-color: $color-secondary;\r\n    }\r\n  }\r\n}\r\n\r\n.button-square {\r\n  width: $height-input;\r\n  padding: 0;\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Vendor\r\n/* scss-combine:vendor/baguette-box */\r\n/*!\r\n * baguetteBox.js\r\n * @author  feimosi\r\n * @version 1.4.1\r\n * @url https://github.com/feimosi/baguetteBox.js\r\n */\r\n\r\n// scss-lint:disable QualifyingElement, IdSelector, SelectorFormat\r\n\r\n%arrow-button {\r\n  top: calc(50% - 30px);\r\n  width: 44px;\r\n  height: 60px;\r\n}\r\n\r\n#baguetteBox-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000000;\r\n  display: none;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  background-color: rgba($color-dark, 0.95);\r\n  opacity: 0;\r\n  transition: opacity 0.5s ease;\r\n\r\n  &.visible { opacity: 1; }\r\n\r\n  .full-image {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 100%;\r\n    text-align: center;\r\n\r\n    figure {\r\n      display: inline;\r\n      height: 100%; // Opera 12 image stretching fix\r\n      margin: 0;\r\n    }\r\n\r\n    img {\r\n      display: inline-block;\r\n      width: auto;\r\n      height: auto;\r\n      max-width: 100%;\r\n      max-height: 90%;\r\n      vertical-align: middle;\r\n    }\r\n\r\n    figcaption {\r\n      position: absolute;\r\n      bottom: 0;\r\n      display: block;\r\n      width: 100%;\r\n      padding-bottom: 16px;\r\n      font-weight: 300;\r\n      line-height: 1.8;\r\n      text-align: center;\r\n      white-space: normal;\r\n    }\r\n\r\n    &:before {\r\n      display: inline-block;\r\n      width: 1px;\r\n      height: 50%;\r\n      margin-right: -1px;\r\n      content: \"\";\r\n    }\r\n  }\r\n}\r\n\r\n#baguetteBox-slider {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  white-space: nowrap;\r\n  transition: left 0.4s ease, transform 0.4s ease;\r\n\r\n  &.bounce-from-right {\r\n    animation: bounceFromRight 0.4s ease-out;\r\n  }\r\n\r\n  &.bounce-from-left {\r\n    animation: bounceFromLeft 0.4s ease-out;\r\n  }\r\n}\r\n\r\n@keyframes bounceFromRight{\r\n  0% { margin-left: 0; }\r\n  50% { margin-left: -30px; }\r\n  100% { margin-left: 0; }\r\n}\r\n\r\n@keyframes bounceFromLeft{\r\n  0% { margin-left: 0; }\r\n  50% { margin-left: 30px; }\r\n  100% { margin-left: 0; }\r\n}\r\n\r\n.baguetteBox-button {\r\n  position: absolute;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-size: 1.6em;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border: 0;\r\n  border-radius: 15%;\r\n  outline: none;\r\n  transition: background-color 0.4s ease;\r\n\r\n  &#next-button {\r\n    @extend %arrow-button;\r\n    right: 2%;\r\n  }\r\n\r\n  &#previous-button {\r\n    @extend %arrow-button;\r\n    left: 2%;\r\n  }\r\n\r\n  &#close-button {\r\n    top: 20px;\r\n    right: 20px;\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n\r\n  // Firefox fix\r\n  svg {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    g {\r\n      stroke: contrast($color-dark, 100%);\r\n    }\r\n  }\r\n}\r\n\r\n// http://tobiasahlin.com/spinkit/\r\n.spinner:not(.button) {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-top: -20px;\r\n  margin-left: -20px;\r\n}\r\n\r\n.double-bounce1,\r\n.double-bounce2 {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  opacity: 0.6;\r\n  animation: bounce 2s infinite ease-in-out;\r\n}\r\n\r\n.double-bounce2 { animation-delay: -1s; }\r\n\r\n@keyframes bounce {\r\n  0%, 100% { transform: scale(0); }\r\n\r\n  50% { transform: scale(1); }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Components - At a modular level - styles for individual 'things'\r\n\r\n/* scss-combine:components/svg */\r\n\r\n// Hide the sprite sheet included at top of page\r\n.svg-sprite { display: none; }\r\n\r\n/* scss-combine:components/nav-bar */\r\n\r\n$nav-bar-min-height: 55px;\r\n$nav-bar-max-height: 100px;\r\n\r\n$nav-bar-height: rem-calc(75);\r\n\r\n// Stacking Elements.\r\n.main-nav-button { z-index: 2; } // On top of svg.page-cover\r\n\r\n// ---------------------------------------------------------------- */\r\n// Navigation Bar - Displayed across top of page\r\n\r\n.nav-bar {\r\n  @extend %sidebar-text-treatment;\r\n  height: $nav-bar-height;\r\n  color: $color-dark; // TODO: Color applied from theme values.\r\n  text-align: center;\r\n  border-bottom: 1px solid $color-borders;\r\n\r\n  a:not(.button) { color: currentColor; }\r\n\r\n  .page-default &,\r\n  .page-brand &,\r\n  .page-category & {\r\n    border-bottom: 0;\r\n  }\r\n\r\n  .drawer-wrapper & {\r\n    z-index: 4; // On top of fixed sidebar\r\n    color: $color-sidebar-text;\r\n    background-color: $color-sidebar;\r\n  }\r\n}\r\n\r\n// Theme setting for all caps in the nav-bar\r\n.navbar-allcaps { text-transform: uppercase; }\r\n\r\n.nav-bar-inner {\r\n  display: table;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  > * {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n  }\r\n}\r\n\r\n.nav-bar-wrapper {\r\n  display: table-cell;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Nav bar content (aside from logo) is positioned in a header-component block\r\n\r\n.header-components {\r\n  width: 10%;\r\n\r\n  // Space each of the components\r\n  > *:not(:last-child) { margin-right: rem-calc(26); }\r\n\r\n  // Component boxes in the sticky nav-bar (when no page sidebar)\r\n  &:first-of-type {\r\n    padding-left: $pad-horizontal;\r\n    text-align: left;\r\n  }\r\n\r\n  &:last-of-type {\r\n    padding-right: $pad-horizontal;\r\n    text-align: right;\r\n  }\r\n\r\n  // Component boxes in the page-content (with page sidebar)\r\n  .main-header &:first-of-type { width: 40%; }\r\n  .main-header &:last-of-type { width: 60%; }\r\n\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Hamburger to X - Transition between the two states when nav expanded\r\n\r\n.main-nav-button {\r\n  $nav-button-size: 18px;\r\n  $nav-button-line-width: 2px;\r\n\r\n  display: inline-block;\r\n  width: $nav-button-size;\r\n  height: $nav-button-size;\r\n  padding: 1em;\r\n  margin-left: -1em;\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n  outline: 0;\r\n  opacity: 1;\r\n  box-sizing: content-box;\r\n  transition: opacity 200ms ease;\r\n\r\n  &:hover { opacity: 0.5; }\r\n\r\n  span {\r\n    $x-offset: ($nav-button-size - $nav-button-line-width) / 2;\r\n    position: relative;\r\n    top: 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: $nav-button-line-width;\r\n    margin-bottom: ($nav-button-size - (3 * $nav-button-line-width)) / 2;\r\n    background-color: currentColor;\r\n    border-radius: 2px;\r\n    transition: all 0.2s linear;\r\n\r\n    // .inverted & { background-color: $color-light; }\r\n\r\n    .nav-drawer-open & {\r\n      // scss-lint:disable NestingDepth -- Using & selector should be fine.\r\n      &:nth-child(even) { opacity: 0; }\r\n\r\n      &:nth-child(1) {\r\n        top: $x-offset;\r\n        transform: rotate(45deg) scale(1.4);\r\n      }\r\n\r\n      &:nth-child(3) {\r\n        top: -$x-offset;\r\n        transform: rotate(-45deg) scale(1.4);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n/* scss-combine:components/nav-multi-level */\r\n.nav-multi-container {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.nav-multi-breadcrumb {\r\n  font-size: rem-calc(11);\r\n  visibility: hidden;\r\n  display: inline-block;\r\n\r\n  .is-active & {\r\n    visibility: visible;\r\n  }\r\n\r\n  &:last-child {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &:not(:first-child) {\r\n    &:before {\r\n      margin: rem-calc(0 4 0 1);\r\n      content: \"/\";\r\n    }\r\n  }\r\n\r\n  &:not(:last-child) {\r\n    cursor: pointer;\r\n  }\r\n}\r\n\r\n.nav-multi-panel {\r\n  width: 100%;\r\n  transition: transform 0.5s ease;\r\n\r\n  &.is-active {\r\n    position: relative;\r\n  }\r\n\r\n  &.is-right,\r\n  &.is-left {\r\n    position: absolute;\r\n    top: 0;\r\n  }\r\n\r\n  &.is-right {\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  &.is-left {\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  &.force-state {\r\n    transition: none;\r\n  }\r\n}\r\n\r\n/* scss-combine:components/logo-branding */\r\n// ================================================================ */\r\n// Text Logo\r\n\r\n.logo-text {\r\n  // TODO: Actually style this, this is wip just to make it prominent\r\n  // Probably include a custom font-setting, etc etc\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Image Logos\r\n\r\n.sidebar-nav-wrapper {\r\n  .store-logo { margin-bottom: rem-calc(50); }\r\n\r\n  .logo-image {\r\n    max-width: 100%;\r\n    max-height: 25vh;\r\n  }\r\n\r\n  &.align-top {\r\n    .store-logo { margin-bottom: rem-calc(10); }\r\n  }\r\n}\r\n\r\n.nav-bar {\r\n  .store-logo {\r\n    padding-top: rem-calc(5);\r\n    padding-bottom: rem-calc(5);\r\n\r\n    @include breakpoint(max-width 500px) {\r\n      padding-right: 30px;\r\n      padding-left: 30px;\r\n    }\r\n  }\r\n\r\n  .logo-image {\r\n    a,\r\n    img {\r\n      max-height: rem-calc(65);\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n}\r\n\r\n@include breakpoint($nav-slide-maxwidth) {\r\n  .sidebar-nav .store-logo { display: none; }\r\n}\r\n\r\n/* scss-combine:components/page-sidebar */\r\n\r\n// Nav Drawer Local Variables\r\n$sidebar-nav-transition: all 0.2s $ease-out-quad;\r\n\r\n// ---------------------------------------------------------------- */\r\n// Drawer / Page Transitions\r\n\r\n// Stops scrolling horizontally when nav drawer is translated\r\nbody {\r\n  overflow-x: hidden;\r\n  &.sidebar-nav-open { overflow: hidden; }\r\n}\r\n\r\n.sidebar-nav,\r\n.page-wrap { transition: $sidebar-nav-transition; }\r\n\r\n// Theme setting for all caps\r\n.sidebar-allcaps { text-transform: uppercase; }\r\n\r\n// On mobile: dimmer covers the page contents and triggers the menu closed\r\n.page-cover {\r\n  position: absolute;\r\n  z-index: 1;\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  pointer-events: none;\r\n  background-color: $color-sidebar-text;\r\n  opacity: 0;\r\n  transition: opacity 200ms $ease-out-quad;\r\n\r\n  .nav-drawer-open & {\r\n    display: block;\r\n    opacity: 0.7;\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Drawer Styling\r\n\r\n.sidebar-nav {\r\n  @extend %sidebar-text-treatment;\r\n  padding-right: 1rem;\r\n  padding-left: 1rem;\r\n  overflow: hidden;\r\n  color: $color-sidebar-text;\r\n  text-align: center;\r\n  background-color: $color-sidebar;\r\n\r\n  a { color: $color-sidebar-text; }\r\n\r\n  .dropdown {\r\n    margin-bottom: $pad-vertical * 0.5;\r\n    font-weight: 300;\r\n  }\r\n\r\n  .search-wrapper {\r\n    color: $color-text;\r\n  }\r\n\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Positioning and layout\r\n\r\n@include breakpoint(max-width ($nav-slide-bp - 1px)) {\r\n  .sidebar-nav-wrapper {\r\n    max-height: 100%;\r\n    padding-top: $pad-vertical;\r\n    padding-bottom: $pad-vertical;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n  }\r\n}\r\n\r\n// Navigation is vertically centered at bigger breakpoints\r\n@include breakpoint($nav-slide-bp) {\r\n  .sidebar-nav-wrapper {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    display: flex;\r\n    height: 100%;\r\n    max-height: 100%; // Firefox\r\n\r\n    &.align-top {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  .drawer-nav {\r\n    display: inline-block; // Firefox\r\n    align-self: center;\r\n    width: 100%;\r\n    max-height: 100%;\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    vertical-align: middle;\r\n  }\r\n}\r\n\r\n.drawer-item {\r\n  padding-top: 1.3333em;\r\n  padding-bottom: 1.3333em;\r\n  margin: 0;\r\n\r\n  .align-top & { padding-top: rem-calc(75); }\r\n\r\n  &:first-child { padding-top: 0; }\r\n  &:last-child { padding-bottom: 0; }\r\n}\r\n\r\n.drawer-extras {\r\n  padding-bottom: 0;\r\n\r\n  &:last-child { padding-top: 0; }\r\n  a { display: block; }\r\n}\r\n\r\n/* scss-combine:components/page-footer */\r\n\r\n.footer-block-title {\r\n  // TODO: Extend typographic style here.\r\n}\r\n\r\n.main-footer {\r\n  padding-top: $pad-vertical * 2;\r\n  padding-bottom: $pad-vertical * 2;\r\n  line-height: 2;\r\n  color: $color-footer-text;\r\n  background-color: $color-footer-bg;\r\n\r\n  a {\r\n    color: inherit;\r\n\r\n    &:hover {\r\n      color: $color-text-darker;\r\n    }\r\n  }\r\n}\r\n\r\n.footer-follow-links {\r\n  // TODO: Style a list of links.\r\n}\r\n\r\n.payment-gateways {\r\n  text-align: center;\r\n\r\n  @include breakpoint(500px) { text-align: right; }\r\n\r\n  svg {\r\n    margin-bottom: 1em;\r\n    vertical-align: middle;\r\n\r\n    &:not(:last-of-type) { margin-right: 1em; }\r\n  }\r\n}\r\n\r\n\r\n.footer-block-title {\r\n  @extend %block-title;\r\n  margin-bottom: $pad-vertical;\r\n  color: $color-dark;\r\n}\r\n\r\n.footer-finale,\r\n.main-footer nav .block-content { opacity: 0.7; }\r\n\r\n// ---------------------------------------------------------------- */\r\n// Footer Layout\r\n\r\n.main-footer,\r\n.footer-content { @extend %clearfix; }\r\n\r\n@include breakpoint(max-width 499px) {\r\n  .footer-block { margin-bottom: $pad-vertical * 1; }\r\n  .footer-block { width: 100%; }\r\n}\r\n\r\n@include breakpoint(500px) {\r\n  .footer-sitemap,\r\n  .footer-follow-links {\r\n    float: left;\r\n    padding-right: 5%;\r\n  }\r\n\r\n  .footer-mailinglist { float: left; }\r\n}\r\n\r\n@include breakpoint(500px 1099px) {\r\n  .footer-block { margin-bottom: $pad-vertical * 1.5; }\r\n\r\n  .footer-sitemap,\r\n  .footer-follow-links { width: 50%; }\r\n\r\n  .footer-mailinglist { width: 85%; }\r\n}\r\n\r\n@include breakpoint(1100px) {\r\n  .footer-block { margin-bottom: $pad-vertical * 2.5; }\r\n\r\n  .footer-sitemap,\r\n  .footer-follow-links { width: 25%; }\r\n\r\n  .footer-mailinglist {\r\n    width: 50%;\r\n    max-width: 480px;\r\n  }\r\n}\r\n// ---------------------------------------------------------------- */\r\n// Finale - Payment Logos and footer messages\r\n\r\n.footer-finale {\r\n  opacity: 0.4;\r\n\r\n  p { margin: 0; }\r\n\r\n  .footer-messages {\r\n    font-size: rem-calc(14);\r\n  }\r\n}\r\n\r\n.footer-follow-links .social-media-link { display: block; }\r\n\r\n@include breakpoint(max-width 1199px) {\r\n  .footer-messages { margin-bottom: $pad-vertical; }\r\n  .payment-gateways { text-align: left; }\r\n}\r\n\r\n@include breakpoint(1200px) {\r\n  .footer-finale {\r\n    display: table;\r\n    width: 100%;\r\n  }\r\n\r\n  .payment-gateways,\r\n  .footer-messages {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .footer-messages { padding-right: 1em; }\r\n}\r\n\r\n/* scss-combine:components/search */\r\n// ================================================================ */\r\n// Global search box that displays in the page drawer\r\n// scss-lint:disable IdSelector -- ID necessary for label targetting\r\n\r\n$mini-search-height: rem-calc(50); // Set a uniform height for the form\r\n\r\n#mini-search-toggle {\r\n  // Checkbox, visually hidden but toggled by the label below\r\n  display: none;\r\n  .sidebar & { display: none; }\r\n\r\n  ~ .search-wrapper {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 1;\r\n    width: rem-calc(18);\r\n    height: $mini-search-height;\r\n    overflow: hidden;\r\n    line-height: $mini-search-height;\r\n    text-align: left;\r\n    transition: width 200ms $ease-out-quad;\r\n  }\r\n\r\n  &:checked ~ .search-wrapper {\r\n    width: rem-calc(280);\r\n  }\r\n}\r\n\r\n.mini-search-toggle-label {\r\n  // Label that toggles the search box visible or not\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: $mini-search-height;\r\n  color: transparent;\r\n  transition: color 200ms $ease-out-quad;\r\n  cursor: pointer;\r\n\r\n  #mini-search-toggle:checked ~ .search-wrapper & {\r\n    color: $color-text;\r\n\r\n    &:hover { color: $color-text-darker; }\r\n  }\r\n}\r\n\r\n.mini-search {\r\n  position: relative;\r\n  top: rem-calc(-6);\r\n  display: inline-block;\r\n  width: rem-calc(18);\r\n  height: rem-calc(40);\r\n  vertical-align: middle;\r\n\r\n  svg {\r\n    position: relative;\r\n    top: rem-calc(2);\r\n  }\r\n\r\n  .nav-bar & .form-input {\r\n    $input-offset: rem-calc(15); // space before the input\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: $input-offset;\r\n    display: none;\r\n    float: left;\r\n    width: calc(100% - #{$input-offset});\r\n    height: $mini-search-height;\r\n    padding-right: rem-calc(28);\r\n    border: 0;\r\n  }\r\n\r\n  .button {\r\n    display: none;\r\n  }\r\n\r\n  input:focus ~ .button {\r\n    width: rem-calc(50);\r\n  }\r\n}\r\n\r\n#mini-search-toggle:checked ~ .search-wrapper .form-input { display: block; }\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Variant displayed in sidebar, always expanded styling\r\n\r\n.sidebar-nav .mini-search {\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  .form-input {\r\n    width: 100%;\r\n    height: $mini-search-height;\r\n    padding-right: rem-calc(40);\r\n    font-size: 1rem;\r\n    background-color: $white;\r\n  }\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: rem-calc(18);\r\n    right: rem-calc(15);\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Full Page Search - displayed on product lists with no results\r\n\r\n.product-list .search {\r\n  .form-input {\r\n    float: left;\r\n    width: calc(100% - #{rem-calc(150)});\r\n  }\r\n\r\n  .button {\r\n    width: rem-calc(150);\r\n  }\r\n}\r\n\r\n.search-result-title {\r\n  @extend %block-title;\r\n  margin-top: $pad-vertical;\r\n}\r\n\r\n.content-result-type {\r\n  @extend %timestamp-text-treatment;\r\n  font-style: italic;\r\n}\r\n\r\n.search-results-brands { margin-top: $pad-vertical; }\r\n\r\n.search-tabs-nav {\r\n  @extend %sidebar-text-treatment;\r\n  width: 100%;\r\n  margin-bottom: $pad-vertical;\r\n  border-bottom: 1px solid $color-borders;\r\n\r\n  @include breakpoint(max-width $nav-slide-bp) { text-align: center; }\r\n\r\n  .search-tab-toggle {\r\n    padding: rem-calc(8) rem-calc(20);\r\n    margin-right: 3px;\r\n    margin-bottom: -1px;\r\n    text-transform: uppercase;\r\n    background-color: $color-footer-bg;\r\n    border: {\r\n      color: $color-borders;\r\n      style: solid;\r\n      width: 1px;\r\n    }\r\n    outline: 0;\r\n\r\n    &.active {\r\n      background-color: $white;\r\n      border-bottom-color: $white;\r\n    }\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Quick Search\r\n\r\n.quick-search {\r\n  @extend .mini-cart-preview;\r\n  display: none;\r\n  text-align: left;\r\n\r\n  &.animating,\r\n  &.visible {\r\n    display: block;\r\n  }\r\n\r\n  &.animating-in {\r\n    transform: translateY(-10px);\r\n    transition: transform 0.3s ease;\r\n  }\r\n\r\n  &.animating-out {\r\n    opacity: 0;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n\r\n  &.visible {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n\r\n  .quick-search-list { padding: 0 2rem; }\r\n\r\n  .header-components & {\r\n    position: absolute;\r\n    right: rem-calc(30);\r\n\r\n    &.visible { top: 100%; }\r\n  }\r\n\r\n  .spinner {\r\n    position: static;\r\n    display: block;\r\n    margin: 2rem auto;\r\n    transform: translate(0, 0);\r\n  }\r\n}\r\n\r\n.quick-search-inner {\r\n  max-height: calc(100vh - 150px);\r\n  overflow-y: auto;\r\n}\r\n\r\n.quick-search-results {\r\n  @extend %font-h5;\r\n  padding: 2rem;\r\n  margin: 0;\r\n}\r\n\r\n.quick-search-item {\r\n  @extend %mini-cart-row;\r\n  display: table;\r\n  width: 100%;\r\n}\r\n\r\n.quick-search-list li:last-child .quick-search-item { border: 0; }\r\n\r\n.quick-search-item-image,\r\n.quick-search-item-info {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n\r\n.quick-search-item-info { padding-left: 1em; }\r\n\r\n.quick-search-item-image {\r\n  width: rem-calc(100);\r\n\r\n  img { display: block; }\r\n}\r\n\r\n.quick-search-item-title {\r\n  display: block;\r\n  font-size: rem-calc(16);\r\n  line-height: 1.25;\r\n  color: $color-text-darker;\r\n  text-align: left;\r\n}\r\n\r\n/* scss-combine:components/currency-selector */\r\n.currency-selector {\r\n  position: relative;\r\n  z-index: 0;\r\n  display: inline-block;\r\n  opacity: 1;\r\n  transition: opacity 0.2s $ease-out-quad;\r\n\r\n  select {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 1;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    opacity: 0;\r\n    appearance: none;\r\n  }\r\n\r\n  &::after {\r\n    display: inline-block;\r\n    width: 0;\r\n    height: 0;\r\n    vertical-align: middle;\r\n    border: {\r\n      top: 3px solid currentColor;\r\n      right: 3px solid transparent;\r\n      left: 3px solid transparent;\r\n    }\r\n    content: \"\";\r\n  }\r\n\r\n  .sidebar-nav & {}\r\n\r\n  .no-js & { opacity: 0; } // Hide component when JS not available.\r\n}\r\n\r\n/* scss-combine:components/mini-cart */\r\n// ================================================================ */\r\n// Cart link and count that displays in the header of the page\r\n\r\n// The icon that is displayed in the nav-bar\r\n.mini-cart-link {\r\n  color: currentColor;\r\n\r\n  > span {\r\n    position: absolute;\r\n    bottom: rem-calc(17);\r\n    left: rem-calc(15);\r\n    line-height: 0;\r\n  }\r\n\r\n  svg { margin-bottom: rem-calc(-3); }\r\n}\r\n\r\n.header-mini-cart {\r\n  position: relative;\r\n}\r\n\r\n// ================================================================ */\r\n// Bubble showing the number of items in the cart\r\n// Courtesy of: http://codepen.io/bhardy/pen/bEOROB\r\n\r\n.cart-count {\r\n  position: relative;\r\n  z-index: 1;\r\n  display: inline-block;\r\n  font-family: Helvetica, Arial, sans-serif; // basic stack for number only\r\n  font-size: rem-calc(10);\r\n  line-height: 0;\r\n  color: $color-sidebar-text;\r\n  vertical-align: top;\r\n\r\n  .main-header & {\r\n    color: $color-text;\r\n  }\r\n\r\n  // display number\r\n  &::before {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    content: attr(data-cart-preview-count);\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  // stretch horizontally\r\n  &::after {\r\n    display: inline-block;\r\n    min-width: rem-calc(10);\r\n    padding: 5px;\r\n    color: transparent;\r\n    content: attr(data-cart-preview-count);\r\n  }\r\n\r\n  // stretch vertically\r\n  .cart-count-circle {\r\n    position: absolute;\r\n    top: 50%;\r\n    z-index: -1;\r\n    display: inline-block;\r\n    width: 100%;\r\n    padding-bottom: 100%;\r\n    transform: translateY(-50%);\r\n  }\r\n\r\n  // draw circle\r\n  .cart-count-circle::after {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    color: transparent;\r\n    background-color: $color-sidebar;\r\n    border: 1px solid $color-sidebar-text;\r\n    border-radius: 50%;\r\n    content: \"\";\r\n\r\n    .main-header & {\r\n      background-color: $color-light;\r\n      border-color: $color-text;\r\n    }\r\n  }\r\n}\r\n\r\n// ================================================================ */\r\n// The cart preview that expands when you click on the mini-cart icon.\r\n\r\n.header-mini-cart { position: relative; }\r\n\r\n.mini-cart-preview {\r\n  position: absolute;\r\n  top: calc(100% + #{rem-calc(20)});\r\n  right: rem-calc(-58);\r\n  z-index: 1;\r\n  width: rem-calc(430);\r\n  color: $color-dark;\r\n  text-transform: initial;\r\n  background-color: $white;\r\n  border: 1px solid $color-borders;\r\n\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style-type: none;\r\n  }\r\n\r\n  &::before {\r\n    $arrow-size: rem-calc(12);\r\n    position: absolute;\r\n    top: - ($arrow-size / 2);\r\n    right: rem-calc(64);\r\n    display: block;\r\n    width: $arrow-size;\r\n    height: $arrow-size;\r\n    background-color: $white;\r\n    border-top: 1px solid $color-borders;\r\n    border-left: 1px solid $color-borders;\r\n    content: \"\";\r\n    transform: rotate(45deg);\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Revealer: Show hide transitions\r\n\r\n// scss-lint:disable MergeableSelector -- This section keeps the transitions\r\n// all in one place together.\r\n\r\n.mini-cart-preview {\r\n  top: 0;\r\n  z-index: 99;\r\n  display: none;\r\n\r\n  &.animating {\r\n    display: block;\r\n    opacity: 0;\r\n    transition: all 200ms ease;\r\n  }\r\n\r\n  &.visible {\r\n    top: calc(100% + #{rem-calc(20)});\r\n    display: block;\r\n    opacity: 1;\r\n  }\r\n\r\n  .loading-wrapper { background-color: transparent; }\r\n  .loading-wrapper ~ .mini-cart-content { opacity: 0.2; }\r\n}\r\n\r\n// scss-lint:enable MergeableSelector\r\n// ---------------------------------------------------------------- */\r\n// Mini-cart Line Items\r\n\r\n%mini-cart-row {\r\n  padding-bottom: rem-calc(30);\r\n  margin-bottom: rem-calc(30);\r\n  border-bottom: 1px solid $color-borders;\r\n}\r\n\r\n.mini-cart-content {\r\n  max-height: calc(100vh - 150px);\r\n  padding: rem-calc(32);\r\n  overflow: auto;\r\n\r\n  .mini-cart-item {\r\n    @extend %clearfix;\r\n    @extend %mini-cart-row;\r\n    display: table;\r\n    width: 100%;\r\n  }\r\n\r\n  .mini-cart-item-image,\r\n  .mini-cart-item-name {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .mini-cart-item-name {\r\n    padding-left: 1em;\r\n    font-size: rem-calc(16);\r\n    line-height: 1.4375; // ~23px\r\n    color: $color-text-darker;\r\n    text-align: left;\r\n\r\n    a { color: inherit; }\r\n  }\r\n\r\n  .mini-cart-item-qty-label {\r\n    display: block;\r\n    margin-bottom: 1em;\r\n    font-family: $font-secondary;\r\n    font-size: rem-calc(13);\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .mini-cart-item-remove {\r\n    width: rem-calc(25);\r\n    text-align: right;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .mini-cart-item-image {\r\n    width: rem-calc(100);\r\n    text-align: left;\r\n    img { max-height: 100%; }\r\n  }\r\n\r\n  .mini-cart-item-price { color: $color-text-lighter; }\r\n  .cart-preview-empty { text-align: center; }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Mini-cart Footer\r\n\r\n.mini-cart-footer {\r\n  @extend %clearfix;\r\n\r\n  .mini-cart-footer-buttons {\r\n    overflow: hidden;\r\n  }\r\n\r\n  .mini-cart-footer-total {\r\n    @extend %mini-cart-row;\r\n    font-size: rem-calc(21);\r\n  }\r\n\r\n  .mini-cart-view-cart-link,\r\n  .mini-cart-checkout-button {\r\n    display: inline-block;\r\n    width: 50%;\r\n  }\r\n\r\n  .mini-cart-view-cart-link {\r\n    height: $height-input;\r\n    line-height: $height-input;\r\n    text-align: center;\r\n\r\n    a { @extend %link-underlined; }\r\n  }\r\n\r\n  .mini-cart-checkout-button { float: right; }\r\n  .button { margin-bottom: 0; }\r\n\r\n  .mini-cart-footer-total-label,\r\n  .mini-cart-footer-total-value { display: inline-block; }\r\n}\r\n\r\n/* scss-combine:components/carousel */\r\n// ================================================================ */\r\n// Carousel - Displayed on the homepage with a few links to features.\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n.no-js .carousel-item:not(:first-of-type) { display: none; }\r\n\r\n// General styles for carousel container\r\n.carousel {\r\n  position: relative;\r\n  margin-right: $pad-horizontal;\r\n  margin-left: $pad-horizontal;\r\n  overflow: hidden;\r\n\r\n  @include breakpoint(max-width $nav-slide-bp - 1) {\r\n    margin-right: 0;\r\n    margin-left: 0;\r\n  }\r\n\r\n  .flickity-viewport {\r\n    transition: height 0.2s ease-out;\r\n  }\r\n}\r\n\r\n.carousel-item-wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.carousel-item-image {\r\n  background-position: 50%;\r\n  background-size: cover;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease-out;\r\n\r\n  &.flickity-bg-lazyloaded {\r\n    opacity: 1;\r\n  }\r\n\r\n  img {\r\n    opacity: 0;\r\n  }\r\n\r\n  &:not(.ratio-any) {\r\n    img {\r\n      @extend %visually-hidden;\r\n    }\r\n  }\r\n}\r\n\r\n// Heading and text shown within a slide item\r\n.carousel-item-info {\r\n  position: absolute;\r\n  top: 50%;\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0 8%;\r\n  overflow: hidden;\r\n  color: $color-carousel-text;\r\n  transform: translateY(-50%);\r\n\r\n  @include breakpoint($carousel-bp) {\r\n    padding-top: 2vw;\r\n    padding-bottom: 2vw;\r\n  }\r\n\r\n  .carousel-cta {\r\n    height: auto;\r\n    margin-top: rem-calc(5);\r\n    padding: 0.85em 1.8em 0.75em;\r\n    line-height: 1;\r\n\r\n    .carousel-minimal-buttons & {\r\n      color: $color-carousel-text;\r\n      background-color: transparent;\r\n      border-color: $color-carousel-text;\r\n    }\r\n\r\n    @include breakpoint(1200px) {\r\n      font-size: 1.1vw;\r\n    }\r\n\r\n    &:hover {\r\n      color: $color-carousel-text;\r\n      background-color: transparent;\r\n      border-color: $color-carousel-text;\r\n\r\n      .carousel-minimal-buttons & {\r\n        color: $color-carousel-text;\r\n        background-color: transparent;\r\n        border-color: $color-carousel-text;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Text displayed within the carousel info box.\r\n\r\n.carousel-item-title {\r\n  @extend %carousel-title;\r\n}\r\n\r\n.carousel-item-text {\r\n  @extend %carousel-text;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Carousel / Flickity Styling\r\n\r\n// Previous / next buttons\r\n.carousel-navigation-item {\r\n  $carousel-nav-size: rem-calc(36);\r\n  position: absolute;\r\n  top: 50%;\r\n  display: block;\r\n  width: $carousel-nav-size;\r\n  height: $carousel-nav-size;\r\n  margin-top: -($carousel-nav-size / 2);\r\n  line-height: $carousel-nav-size;\r\n  text-align: center;\r\n  border-radius: 50%;\r\n  transition: all 200ms $ease-out-quad;\r\n\r\n  &:before,\r\n  &:after {\r\n    position: relative;\r\n    top: rem-calc(-1);\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    content: \"\";\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 1;\r\n    color: $color-secondary;\r\n    transform: scale(1.2);\r\n\r\n    .no-touchevents & {\r\n      box-shadow: 0 0 0 rem-calc(2) $color-carousel-text;\r\n    }\r\n  }\r\n\r\n  &.next {\r\n    right: 0;\r\n\r\n    @include breakpoint($carousel-bp) {\r\n      right: rem-calc(40);\r\n    }\r\n\r\n    &:before {\r\n      width: rem-calc(18);\r\n      height: rem-calc(2);\r\n      background-color: $color-carousel-text;\r\n    }\r\n\r\n    &:after {\r\n      display: inline-block;\r\n      border-top: rem-calc(6) solid transparent;\r\n      border-bottom: rem-calc(6) solid transparent;\r\n      border-left: rem-calc(6) solid $color-carousel-text;\r\n    }\r\n  }\r\n\r\n  &.previous {\r\n    left: 0;\r\n\r\n    @include breakpoint($carousel-bp) {\r\n      left: rem-calc(40);\r\n    }\r\n\r\n    &:before {\r\n      display: inline-block;\r\n      border-top: rem-calc(6) solid transparent;\r\n      border-right: rem-calc(6) solid $color-carousel-text;\r\n      border-bottom: rem-calc(6) solid transparent;\r\n    }\r\n\r\n    &:after {\r\n      width: rem-calc(18);\r\n      height: rem-calc(2);\r\n      background-color: $color-carousel-text;\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:components/collections-cta */\r\n// ================================================================ */\r\n// Collections Call to Action - Displayed on the homepage below the collections grids.\r\n\r\n.collections-cta {\r\n  @extend %background-cover;\r\n  position: relative;\r\n  padding-bottom: 56.26%;\r\n  margin-right: $pad-horizontal;\r\n  margin-bottom: $pad-vertical;\r\n  margin-left: $pad-horizontal;\r\n\r\n  @include breakpoint(max-width $nav-slide-bp - 1) {\r\n    margin-right: 0;\r\n    margin-left: 0;\r\n  }\r\n\r\n  &:before {\r\n    @include overlay-screen($color-carousel-screen, $opacity-carousel-screen);\r\n  }\r\n}\r\n\r\n.collections-cta-info {\r\n  @extend .carousel-item-info;\r\n  margin-top: 0;\r\n  height: 100%;\r\n\r\n\r\n  &:before {\r\n    @extend %ghost-center;\r\n  }\r\n\r\n  .inner {\r\n    vertical-align: middle;\r\n    display: inline-block;\r\n    max-width: 95%;\r\n\r\n    @include breakpoint($desktop-bp) {\r\n      max-width: 40%;\r\n    }\r\n  }\r\n\r\n  .button {\r\n    @extend .carousel-cta;\r\n    margin-top: 1em;\r\n  }\r\n}\r\n\r\n.collections-cta-title { @extend %carousel-title; }\r\n\r\n.collections-cta-text {\r\n  @extend %carousel-text;\r\n  font-family: $font-primary;\r\n  text-transform: none;\r\n}\r\n\r\n/* scss-combine:components/main-navigation */\r\n.main-menu {\r\n  .nav-menu {\r\n    margin: 0;\r\n\r\n    ul ul {\r\n      margin-top: rem-calc(-4);\r\n      margin-bottom: rem-calc(10);\r\n      text-transform: none;\r\n    }\r\n  }\r\n\r\n  // Wrapper around the children revealed on click.\r\n  .dropdown {\r\n    display: none; // Hidden, to be slideToggled\r\n    font-size: rem-calc(12);\r\n    line-height: 2rem;\r\n\r\n    .no-js & { display: block; } // But don't hide nav from folks without js\r\n    a:not(.active) { opacity: 0.6; }\r\n  }\r\n\r\n  .active {\r\n    font-weight: bold;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n\r\n/* scss-combine:components/banners */\r\n\r\n// Content displayed across the page, typically an offer / promotion\r\n.banner {\r\n  @extend %banner-text-treatment;\r\n  padding: 1em;\r\n  text-align: center;\r\n}\r\n\r\n// Banners displayed below title or bottom of page\r\n.banner-marketing {\r\n  $neg-margin: rem-calc(20);\r\n  width: calc(100% + #{$neg-margin * 2});\r\n  margin: 0 #{- $neg-margin};\r\n\r\n  background-color: $color-banners-marketing;\r\n\r\n  @include breakpoint($col-2-bp) {\r\n    // Adjust for different container padding\r\n    $neg-margin: $pad-horizontal;\r\n    width: calc(100% + #{$neg-margin * 2});\r\n    margin: 0 #{- $neg-margin};\r\n  }\r\n\r\n  @include breakpoint($nav-slide-bp) {\r\n    width: 100%;\r\n    margin: 1em 0;\r\n\r\n    &:last-child {\r\n      margin-bottom: $pad-horizontal;\r\n    }\r\n  }\r\n}\r\n\r\n// Banners that display shipping discounts at very top of page\r\n.banner-discounts {\r\n  background-color: $color-banners-discounts;\r\n  color: $color-light;\r\n  text-align: center;\r\n}\r\n\r\n/* scss-combine:components/modals */\r\n// ================================================================ */\r\n// Modals - Content displayed in a \"window\" above the page.\r\n\r\n// All modals include these elements (nested in one another)\r\n// .modal-overlay -- Covers the page, a layer below the modal itself\r\n// .modal-wrapper -- Sibling to the overlay, primarily used for positioning.\r\n// .modal         -- The modal window itself, apply color / padding here\r\n// .modal-content -- Content placed here within the modal\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n.modal-overlay {\r\n  background-color: $color-dark;\r\n  color: $color-light;\r\n  opacity: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 5;\r\n  transition: all 0.2s ease;\r\n\r\n  &.visible { opacity: 0.8; }\r\n}\r\n\r\n.modal-wrapper {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  display: none;\r\n  overflow: hidden;\r\n  -webkit-overflow-scrolling: touch;\r\n  outline: 0;\r\n  opacity: 0;\r\n\r\n  &.animating,\r\n  &.visible {\r\n    display: block;\r\n    transition: opacity 0.2s ease;\r\n  }\r\n\r\n  &.animating-in { transition-delay: 0.1s; }\r\n\r\n  &.visible {\r\n    overflow-x: hidden;\r\n    overflow-y: auto;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.modal {\r\n  background-color: $white;\r\n  margin: 0 auto;\r\n  width: 39em; // 585px\r\n  max-width: 95%;\r\n  max-height: 95%;\r\n  padding: $pad-vertical;\r\n  overflow: auto;\r\n\r\n  @include breakpoint(max-width 550px) { padding: 3em; }\r\n  @include breakpoint(max-width 400px) { padding: 2em; }\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n\r\n  .modal-close {\r\n    position: absolute;\r\n    top: rem-calc(-16);\r\n    right: rem-calc(-16);\r\n    z-index: 1;\r\n    color: $color-text-meta;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .icon-x {\r\n    width: rem-calc(20);\r\n    height: rem-calc(20);\r\n  }\r\n}\r\n\r\n.modal-body { @extend %clearfix; }\r\n\r\n/* scss-combine:components/reviews */\r\n.rating-stars {\r\n  display: block;\r\n  margin: rem-calc(8 0 10);\r\n  color: $color-primary;\r\n}\r\n\r\n.review-title {\r\n  @extend %font-h4;\r\n}\r\n\r\n// Submission Modal - hidden until \"visible\" class applied\r\n.review-modal-container {\r\n  display: none;\r\n}\r\n\r\n// Star Reviews on products and in lists.\r\n.star {\r\n  width: 14px;\r\n  height: 14px;\r\n}\r\n\r\n.button-more-reviews {\r\n  display: block;\r\n  margin: 0 auto;\r\n}\r\n// ---------------------------------------------------------------- */\r\n// Five Stars in a Row / Rating Widget\r\n\r\n.input-stars {\r\n  position: relative;\r\n  display: inline-block;\r\n  padding: 0;\r\n  font-size: 14px;\r\n  border: 0;\r\n\r\n  label { margin-right: 0.333em; }\r\n\r\n  .star,\r\n  .star-full {\r\n    // Default star state.\r\n    float: right;\r\n    width: 14px;\r\n    height: 14px;\r\n    line-height: 1;\r\n    cursor: pointer;\r\n\r\n    &:hover,\r\n    &:hover ~ .star {\r\n      // When selecting stars.\r\n      color: $color-primary;\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  .star-full { display: none; }\r\n\r\n  > input:checked {\r\n    ~ label {\r\n      // Stars that are already selected\r\n      .star { display: none; }\r\n      .star-full { display: inline-block; }\r\n    }\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Extra star related messages\r\n\r\n.stars-form-field {\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  .form-field-control {\r\n    display: block;\r\n    padding-top: 0.666em;\r\n  }\r\n\r\n  // Position the label data itself, but hidden\r\n  label::after {\r\n    position: absolute;\r\n    right: -8em;\r\n    display: none;\r\n    width: 7em;\r\n    color: $color-text;\r\n    text-transform: uppercase;\r\n    content: attr(title);\r\n  }\r\n\r\n  // Show only the currently checked message.\r\n  input:checked + label::after {\r\n    display: block;\r\n  }\r\n\r\n  // But if still hovering over stars, hide the message and...\r\n  &:hover input:checked + label::after { display: none; }\r\n\r\n  // Still display just the label for the star we're hovering.\r\n  &:hover label:hover::after,\r\n  &:hover input:checked + label:hover::after { display: block; }\r\n}\r\n\r\n/* scss-combine:components/prices */\r\n// ================================================================ */\r\n// Default for all price displays\r\n// Price component within other components (such as product templates / lists)\r\n\r\n.price-rrp { text-decoration: line-through; }\r\n\r\n.price {\r\n  font-size: rem-calc(21);\r\n  line-height: 1.22;\r\n  color: $color-text-meta;\r\n\r\n  .price-withtax { display: block; }\r\n\r\n  .price-tax-label {\r\n    @extend %font-base;\r\n    margin-left: rem-calc(3);\r\n    font-size: 0.66em;\r\n  }\r\n\r\n  .price-saved {\r\n    display: block;\r\n    margin-top: 1em;\r\n    font-size: rem-calc(13);\r\n    font-style: italic;\r\n    color: $color-sale-price;\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Classes applied to price wrapper depending on values present.\r\n\r\n.prices-both,\r\n.prices-both-onsale {\r\n  .price-withouttax {\r\n    display: block;\r\n    margin-top: rem-calc(2);\r\n    opacity: 0.6;\r\n  }\r\n}\r\n\r\n.prices-both-onsale,\r\n.prices-taxed-onsale,\r\n.prices-notax-onsale {\r\n  .price-value {\r\n    margin-right: rem-calc(5);\r\n    color: $color-sale-price;\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Prices as displayed on the product page.\r\n\r\n.product-information {\r\n  .prices-both,\r\n  .prices-both-onsale {\r\n    .price-withouttax { opacity: 0.6; }\r\n  }\r\n}\r\n\r\n/* scss-combine:components/pagination */\r\n// ================================================================ */\r\n// Pagination - Previous / Next buttons and a list of links to other pages.\r\n// Used in lists where content spans multiple pages.\r\n\r\n.pagination {\r\n  clear: both;\r\n  font-size: 0; // Clear out whitespace between inline-blocks\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.pagination-item {\r\n  $pagination-item-size: rem-calc(36);\r\n  display: inline-block;\r\n  width: $pagination-item-size;\r\n  height: $pagination-item-size;\r\n  font-size: rem-calc(13);\r\n  line-height: $pagination-item-size;\r\n  color: inherit;\r\n  text-align: center;\r\n  border: 1px solid $color-borders;\r\n  border-radius: 1px;\r\n\r\n  &:not(.pagination-current):hover { color: $color-dark;}\r\n  &:not(:last-of-type) { margin-right: rem-calc(8); }\r\n}\r\n\r\n.pagination-current {\r\n  color: $color-text-darker;\r\n  border-color: $color-text-darker;\r\n\r\n  &:hover { color: $color-text-darker; }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Next and Previous Pages\r\n\r\n.pagination-previous::before,\r\n.pagination-next::after {\r\n  display: inline-block;\r\n  width: 7px;\r\n  height: 10px;\r\n  background: {\r\n    // SVG: Arrow pointing-left\r\n    image: svg-url('<svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" viewBox=\"0 0 6.5 12\"><style>.st0{fill:none;stroke:#000000;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:10;}</style><path d=\"M.5 11.5L6 6 .5.5\" class=\"st0\"/></svg>');\r\n    position: center center;\r\n    repeat: no-repeat;\r\n  }\r\n  content: \"\";\r\n}\r\n\r\n.pagination-previous::before {\r\n  margin-right: 0;\r\n  transform: rotate(180deg);\r\n}\r\n\r\n/* scss-combine:components/product-lists */\r\n// ================================================================ */\r\n// Product Lists - Any display of a series of products\r\n// Used for: Category / Brands / Search Results\r\n\r\n.facet-block-title { @extend %font-h5; }\r\n\r\n.product-list {\r\n  position: relative;\r\n\r\n  ul {\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n  }\r\n\r\n  li { list-style-type: none; }\r\n}\r\n\r\n// Sort block at top of product-list\r\n.product-list-sort {\r\n  text-align: right;\r\n\r\n  .form-label-text {\r\n    margin-right: rem-calc(12);\r\n    color: $color-secondary;\r\n  }\r\n\r\n  .form-select-wrapper {\r\n    display: inline-block;\r\n    max-width: 200px;\r\n    text-align: left;\r\n  }\r\n}\r\n\r\n// Each item within the grid.\r\n.product-grid-item { margin-bottom: rem-calc(10); }\r\n\r\n.facet-block-title,\r\n.sidebar-title {\r\n  @extend %label-text-treatment;\r\n}\r\n\r\n.has-additional-filters {\r\n  margin-top: 0.6667rem; // 10px\r\n  font-size: 1rem; // 15px\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Listing Filters\r\n\r\n.product-list-utils {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  min-height: $height-list-utils;\r\n  margin-top: $pad-vertical;\r\n\r\n  @include breakpoint($nav-slide-bp) {\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .form-field { margin: 0; }\r\n}\r\n\r\n.product-list-results {\r\n  flex-grow: 1;\r\n  font-size: rem-calc(15);\r\n  color: $color-text-meta;\r\n}\r\n\r\n.product-list-refine {\r\n  @include breakpoint($nav-slide-maxwidth) {\r\n    order: 3;\r\n    width: 100%;\r\n    margin-top: $pad-vertical;\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.filter-panel-toggle {\r\n  @extend %label-text-treatment;\r\n  padding: rem-calc(2) 0 0;\r\n  margin-right: rem-calc(32);\r\n  transition: border 0.3s ease;\r\n\r\n  &:hover {\r\n    color: $color-primary;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &.is-active {\r\n    .icon-x { display: inline-block; }\r\n    .icon-filter { display: none; }\r\n  }\r\n\r\n  svg {\r\n    position: relative;\r\n    top: rem-calc(1);\r\n    width: rem-calc(12);\r\n    height: rem-calc(12);\r\n    margin-right: rem-calc(6);\r\n  }\r\n\r\n  .icon-x {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.active-filter {\r\n  display: inline-block;\r\n  padding: rem-calc(2 6);\r\n  font-size: rem-calc(14);\r\n  background-color: darken($color-light, 5);\r\n  transition: color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: darken($color-light, 8);\r\n  }\r\n\r\n  &:not(:last-child),\r\n  &:only-child { margin-right: rem-calc(8); }\r\n\r\n  svg {\r\n    width: rem-calc(8);\r\n    height: rem-calc(8);\r\n    margin-left: rem-calc(4);\r\n  }\r\n}\r\n\r\n.product-list-sidebar {\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n  display: none;\r\n  background-color: rgba($color-light, 0.95);\r\n\r\n  @include breakpoint($nav-slide-bp) {\r\n    right: -$pad-horizontal;\r\n    left: -$pad-horizontal;\r\n  }\r\n\r\n  &.animating,\r\n  &.visible {\r\n    display: block;\r\n  }\r\n\r\n  // initial state for enter transition\r\n  &.animating-in,\r\n  &.animating-out {\r\n    opacity: 0;\r\n    transform: translateY(rem-calc(-20));\r\n    transition: all 0.3s ease;\r\n  }\r\n\r\n  // final states for both in and out\r\n  &.visible {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Product List / Grid Layout\r\n\r\n.product-list-content,\r\n.product-grid {\r\n  @extend %clearfix;\r\n\r\n  .product-grid-item {\r\n    @include breakpoint($col-2-bp) { @include gallery(6 of 12); }\r\n    @include breakpoint($col-3-bp) { @include gallery(4 of 12); }\r\n    @include breakpoint($col-4-bp) { @include gallery(3 of 12); }\r\n    @include breakpoint($col-6-bp) { @include gallery(2 of 12); }\r\n  }\r\n}\r\n\r\n.page-search .product-list-sidebar { margin-top: 4.333rem; } // 65px\r\n\r\n// ---------------------------------------------------------------- */\r\n// Product lists shown as secondary content on other pages\r\n\r\n.products-sidebar {\r\n  @extend %page-bottom-pad;\r\n  padding-top: $pad-vertical * 2;\r\n  text-align: center;\r\n\r\n  .page-product & {\r\n    border-top: 1px solid $color-borders;\r\n  }\r\n}\r\n\r\n.products-sidebar-grid {\r\n  @extend %clearfix;\r\n\r\n  .product-item {\r\n    margin-bottom: $pad-vertical * 1.2;\r\n  }\r\n// ---------------------------------------------------------------- */\r\n\r\n  // Quantity Query for less than 4 items\r\n  .product-item:nth-last-child(-n+3):first-child,\r\n  .product-item:nth-last-child(-n+3):first-child ~ .product-item {\r\n    @include breakpoint($desktop-bp) {\r\n      display: inline-block;\r\n      float: none;\r\n      vertical-align: top;\r\n    }\r\n  }\r\n\r\n  // Quantity Query for just 2 items\r\n  .product-item:nth-last-child(n+2):nth-last-child(-n+2):first-child,\r\n  .product-item:nth-last-child(n+2):nth-last-child(-n+2):first-child ~ .product-item {\r\n    @include breakpoint(480px) {\r\n      @include gallery(6 of 12);\r\n    }\r\n  }\r\n\r\n  // Quantity Query for just three items\r\n  .product-item:nth-last-child(n+3):nth-last-child(-n+3):first-child,\r\n  .product-item:nth-last-child(n+3):nth-last-child(-n+3):first-child ~ .product-item {\r\n    @include breakpoint(480px) {\r\n      @include gallery(4 of 12);\r\n    }\r\n  }\r\n\r\n  // Quantity query: we have at least four items\r\n  .product-item:nth-last-child(n+4),\r\n  .product-item:nth-last-child(n+4) ~ .product-item {\r\n    @include breakpoint(480px) {\r\n      @include gallery(6 of 12);\r\n    }\r\n\r\n    @include breakpoint($desktop-bp) {\r\n      @include gallery(3 of 12);\r\n    }\r\n  }\r\n}\r\n// ---------------------------------------------------------------- */\r\n// Misc\r\n\r\n// Make sure star ratings don't include an underline when hovered.\r\n.facet-rating-link:hover { text-decoration: none; }\r\n\r\n// ---------------------------------------------------------------- */\r\n// Category Header\r\n// Category pages show the section image across the header.\r\n\r\n.category-header {\r\n  border-top: 1px solid $color-borders;\r\n  border-bottom: 1px solid $color-borders;\r\n\r\n  .page-details.has-description {\r\n    .page-title {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.category-header-bg {\r\n  display: table;\r\n  width: 100%;\r\n  height: rem-calc(310);\r\n  padding-right: 5%;\r\n  padding-left: 5%;\r\n  background-position: center 37.5%;\r\n  background-size: cover;\r\n  border-top: 0;\r\n  border-bottom: 0;\r\n\r\n  // Negative margin to offset container padding\r\n  @include breakpoint(max-width $col-2-bp) {\r\n    $offset-margin: rem-calc(20);\r\n    width: calc(100% + ( #{$offset-margin} * 2 ) );\r\n    margin-right: - $offset-margin;\r\n    margin-left: - $offset-margin;\r\n  }\r\n\r\n  @include breakpoint($col-2-bp ($nav-slide-bp - 1)) {\r\n    $offset-margin: $pad-horizontal;\r\n    width: calc(100% + ( #{$offset-margin} * 2 ) );\r\n    margin-right: - $offset-margin;\r\n    margin-left: - $offset-margin;\r\n  }\r\n\r\n  .page-details {\r\n    display: table-cell;\r\n  }\r\n\r\n  .page-title,\r\n  .page-description {\r\n    color: $color-light;\r\n    text-align: left;\r\n    vertical-align: middle;\r\n  }\r\n}\r\n\r\n/* scss-combine:components/sidebar-blocks */\r\n// ================================================================ */\r\n// Blocks that appear in the sidebar when faceted search is enabled\r\n\r\n.faceted-search-blocks {\r\n  padding-top: $pad-vertical;\r\n  padding-bottom: $pad-vertical;\r\n\r\n  @include breakpoint($col-2-bp) {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  @include breakpoint($nav-slide-bp) {\r\n    justify-content: flex-start;\r\n  }\r\n}\r\n\r\n.sidebar-block {\r\n  margin-bottom: rem-calc(30);\r\n\r\n  @include breakpoint($col-2-bp) {\r\n    display: inline-block;\r\n    padding-right: rem-calc(15);\r\n    width: 50%;\r\n  }\r\n\r\n  @include breakpoint($nav-slide-bp) {\r\n    width: auto;\r\n    padding-right: $pad-horizontal * 2;\r\n    padding-left: $pad-horizontal;\r\n  }\r\n\r\n  &.subcategories-block {\r\n    @include breakpoint($nav-slide-maxwidth) {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  &.no-items:not(.facet-price) { display: none; }\r\n\r\n  ul,\r\n  .faceted-range {\r\n    margin-top: 1em;\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  a { color: inherit; }\r\n\r\n  .hidden {\r\n    @include breakpoint($col-2-bp) {\r\n      display: block;\r\n      visibility: visible;\r\n    }\r\n  }\r\n\r\n  &.loading { opacity: 0.3; }\r\n}\r\n\r\n.facet-price {\r\n  @include breakpoint($nav-slide-bp) {\r\n    width: rem-calc(240);\r\n  }\r\n}\r\n\r\n.facet-remove {\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(14);\r\n  text-decoration: underline;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n.facet-block-title {\r\n  @include breakpoint($col-2-bp) {\r\n    pointer-events: none;\r\n\r\n    span { display: none; }\r\n  }\r\n}\r\n\r\n.facet-item,\r\n.sidebar-block a {\r\n  color: $color-text-lighter;\r\n\r\n  &:hover,\r\n  &.active {\r\n    color: $color-dark;\r\n  }\r\n}\r\n\r\n.facet-item {\r\n  &.active {\r\n    position: relative;\r\n\r\n    a::before {\r\n      $size: rem-calc(15);\r\n      position: absolute;\r\n      display: block;\r\n      top: rem-calc(6);\r\n      left: rem-calc(-20);\r\n      width: $size;\r\n      height: $size;\r\n      border-radius: 50%;\r\n      background-color: $color-dark;\r\n      color: $color-light;\r\n      line-height: $size;\r\n      text-align: center;\r\n      content: \"\\00D7\";\r\n    }\r\n  }\r\n}\r\n\r\n.sidebar-categories {\r\n  padding-bottom: 2em;\r\n  border-bottom: 1px solid $color-borders;\r\n\r\n  @include breakpoint($nav-slide-bp) {\r\n    padding-bottom: 0;\r\n    border-bottom: 0;\r\n  }\r\n}\r\n\r\n.faceted-range {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n\r\n  &.hidden {\r\n    @include breakpoint($col-2-bp) {\r\n      display: flex;\r\n    }\r\n  }\r\n\r\n  .form-field { width: 46%; }\r\n\r\n  .form-actions { margin-top: rem-calc(10); }\r\n\r\n  .form-actions,\r\n  .button {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.facet-rating-link {\r\n  font-size: rem-calc(13);\r\n\r\n  .rating-stars {\r\n    position: relative;\r\n    top: rem-calc(2);\r\n    display: inline-block;\r\n    margin-top: 0;\r\n    margin-right: rem-calc(8);\r\n    margin-bottom: 0;\r\n    vertical-align: middle;\r\n  }\r\n}\r\n\r\n// Facet option list expand\r\n.facet-option {\r\n  display: block;\r\n}\r\n\r\n.faceted-search-option-columns { display: none; }\r\n\r\n.facet-list-show-more {\r\n  .toggle-link-text-on { display: none; }\r\n}\r\n\r\n/* scss-combine:components/loading */\r\n// ================================================================ */\r\n// Loading overlay that covers the loading region\r\n\r\n.scroll-locked { overflow: hidden; }\r\n\r\n.loading-wrapper {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: $color-primary;\r\n  background-color: $color-light;\r\n  opacity: 0;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\nbody > .loading-wrapper { position: fixed; }\r\n\r\n// Used for some loading indicators that transition in / out\r\n.loading-wrapper.visible { opacity: 0.8; }\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Borrowed with love from\r\n// http://github.danielcardoso.net/load-awesome/animations/ball-clip-rotate.html\r\n\r\n/*!\r\n * Load Awesome v1.1.0 (http://github.danielcardoso.net/load-awesome/)\r\n * Copyright 2015 Daniel Cardoso <@DanielCardoso>\r\n * Licensed under MIT\r\n */\r\n.la-ball-clip-rotate,\r\n.la-ball-clip-rotate > div {\r\n    position: relative;\r\n    -webkit-box-sizing: border-box;\r\n       -moz-box-sizing: border-box;\r\n            box-sizing: border-box;\r\n}\r\n.la-ball-clip-rotate {\r\n    display: block;\r\n    font-size: 0;\r\n    color: currentColor;\r\n}\r\n.la-ball-clip-rotate.la-dark {\r\n    color: #333;\r\n}\r\n.la-ball-clip-rotate > div {\r\n    display: inline-block;\r\n    float: none;\r\n    background-color: currentColor;\r\n    border: 0 solid currentColor;\r\n}\r\n.la-ball-clip-rotate {\r\n    width: 32px;\r\n    height: 32px;\r\n\r\n    // Added for positioning\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 100px;\r\n    margin: 0 auto;\r\n    text-align: center;\r\n    transform: translate(-50%, -50%);\r\n}\r\n.la-ball-clip-rotate > div {\r\n    width: 32px;\r\n    height: 32px;\r\n    background: transparent;\r\n    border-width: 2px;\r\n    border-bottom-color: transparent;\r\n    border-radius: 100%;\r\n    -webkit-animation: ball-clip-rotate .5s linear infinite;\r\n       -moz-animation: ball-clip-rotate .5s linear infinite;\r\n         -o-animation: ball-clip-rotate .5s linear infinite;\r\n            animation: ball-clip-rotate .5s linear infinite;\r\n}\r\n.la-ball-clip-rotate.la-sm {\r\n    width: 16px;\r\n    height: 16px;\r\n}\r\n.la-ball-clip-rotate.la-sm > div {\r\n    width: 16px;\r\n    height: 16px;\r\n    border-width: 1px;\r\n}\r\n.la-ball-clip-rotate.la-2x {\r\n    width: 64px;\r\n    height: 64px;\r\n}\r\n.la-ball-clip-rotate.la-2x > div {\r\n    width: 64px;\r\n    height: 64px;\r\n    border-width: 3px;\r\n}\r\n.la-ball-clip-rotate.la-3x {\r\n    width: 96px;\r\n    height: 96px;\r\n}\r\n.la-ball-clip-rotate.la-3x > div {\r\n    width: 96px;\r\n    height: 96px;\r\n    border-width: 5px;\r\n}\r\n/*\r\n * Animation\r\n */\r\n@-webkit-keyframes ball-clip-rotate {\r\n    0% {\r\n        -webkit-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n    }\r\n    50% {\r\n        -webkit-transform: rotate(180deg);\r\n                transform: rotate(180deg);\r\n    }\r\n    100% {\r\n        -webkit-transform: rotate(360deg);\r\n                transform: rotate(360deg);\r\n    }\r\n}\r\n@-moz-keyframes ball-clip-rotate {\r\n    0% {\r\n        -moz-transform: rotate(0deg);\r\n             transform: rotate(0deg);\r\n    }\r\n    50% {\r\n        -moz-transform: rotate(180deg);\r\n             transform: rotate(180deg);\r\n    }\r\n    100% {\r\n        -moz-transform: rotate(360deg);\r\n             transform: rotate(360deg);\r\n    }\r\n}\r\n@-o-keyframes ball-clip-rotate {\r\n    0% {\r\n        -o-transform: rotate(0deg);\r\n           transform: rotate(0deg);\r\n    }\r\n    50% {\r\n        -o-transform: rotate(180deg);\r\n           transform: rotate(180deg);\r\n    }\r\n    100% {\r\n        -o-transform: rotate(360deg);\r\n           transform: rotate(360deg);\r\n    }\r\n}\r\n@keyframes ball-clip-rotate {\r\n    0% {\r\n        -webkit-transform: rotate(0deg);\r\n           -moz-transform: rotate(0deg);\r\n             -o-transform: rotate(0deg);\r\n                transform: rotate(0deg);\r\n    }\r\n    50% {\r\n        -webkit-transform: rotate(180deg);\r\n           -moz-transform: rotate(180deg);\r\n             -o-transform: rotate(180deg);\r\n                transform: rotate(180deg);\r\n    }\r\n    100% {\r\n        -webkit-transform: rotate(360deg);\r\n           -moz-transform: rotate(360deg);\r\n             -o-transform: rotate(360deg);\r\n                transform: rotate(360deg);\r\n    }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Specific instances of loading indicators\r\n\r\n.loading-wrapper {\r\n  // Loading indicator covering the whole page.\r\n  body > & {\r\n    position: fixed;\r\n    background-color: $color-light;\r\n  }\r\n\r\n  // Loading indicator shown as part of modal\r\n  .modal-wrapper > & {\r\n    background-color: transparent;\r\n    z-index: -1;\r\n  }\r\n\r\n  // Covers the cart product items when updating qty, etc\r\n  .cart-content & { background-color: $color-light; }\r\n  // Shown above the cart footer region when coupons / giftcards updated\r\n  .cart-totals & { background-color: $color-light; }\r\n\r\n\r\n}\r\n\r\n/* scss-combine:components/compare */\r\n// ================================================================ */\r\n// Compare Box sits at bottom of search results and displays\r\n// a list of items selected for comparison.\r\n\r\n.compare-items {\r\n  position: fixed;\r\n  right: 1em;\r\n  bottom: 1em;\r\n  z-index: 1;\r\n  display: none;\r\n  width: 400px;\r\n  max-width: calc(100% - 2em);\r\n  background-color: $white;\r\n  box-shadow: 0 0 0.333em 0.066em rgba($black, 0.13);\r\n\r\n  // REVIEW: If you want some progressive enhancement, this is one way to it\r\n  // .no-js & { display: block; }\r\n\r\n  &.animating,\r\n  &.visible {\r\n    right: -400px;\r\n    display: block;\r\n    opacity: 0;\r\n    transition: all 0.2s $ease-out-quad;\r\n  }\r\n\r\n  &.visible {\r\n    right: 1em;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.compare-items-header {\r\n  @extend %clearfix;\r\n  font-size: 1.066em; // ~16px\r\n  color: $color-light;\r\n  background-color: $color-dark;\r\n\r\n  p {\r\n    display: block;\r\n    float: left;\r\n    height: rem-calc(50);\r\n    padding: 0;\r\n    padding-left: 1.2em;\r\n    margin: 0;\r\n    line-height: 3.2375em;\r\n  }\r\n\r\n  .compare-link {\r\n    display: inline-block;\r\n    float: right;\r\n    margin-bottom: 0;\r\n    transition: opacity 0.3s ease;\r\n\r\n    &:hover { background-color: $color-primary; }\r\n\r\n    &.disabled {\r\n      pointer-events: none;\r\n      cursor: default;\r\n      opacity: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.no-js .compare-checkbox-label { display: none; } // Hide compare checkbox without js\r\n\r\n// ---------------------------------------------------------------- */\r\n// Preview images that display in the \"compare box\"\r\n\r\n.compare-item {\r\n  &.visible { display: inline-block; }\r\n}\r\n\r\n.compare-items-content {\r\n  overflow: auto;\r\n  white-space: nowrap;\r\n\r\n  .compare-item-link {\r\n    position: relative;\r\n    display: block;\r\n    height: auto;\r\n\r\n    &:hover img { opacity: 0.5; }\r\n    &:hover::after {\r\n      font-size: 1.5em;\r\n      color: $color-dark;\r\n    }\r\n  }\r\n}\r\n\r\n.compare-item-wrap {\r\n  display: inline-block;\r\n  padding: 10px 5px;\r\n\r\n  .replaced-image {\r\n    width: 90%;\r\n    overflow: visible;\r\n  }\r\n}\r\n\r\n.compare-item-remove {\r\n  position: relative;\r\n  display: block;\r\n  height: auto;\r\n\r\n  &::after {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 5px;\r\n    z-index: 2;\r\n    display: block;\r\n    line-height: 1;\r\n    content: \"\\00d7\"; // times symbol (x)\r\n    transition: all 0.2s $ease-out-quad;\r\n  }\r\n}\r\n\r\n.compare-item-thumb {\r\n  width: 75px;\r\n  padding-bottom: 95px;\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n.compare-items-actions {\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n}\r\n\r\n.clear-compare {\r\n  &:hover { color: $color-text-lighter; }\r\n}\r\n\r\n// Compare checkboxes\r\n.compare-checkbox-label {\r\n  position: relative;\r\n  padding-top: 5px;\r\n}\r\n\r\n.compare-checkbox {\r\n  position: absolute !important;\r\n  width: 1px;\r\n  height: 1px;\r\n  overflow: hidden;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Use the svg-checkbox that we use on forms, with some minor tweaks\r\ninput[type=checkbox] + .compare-label-text {\r\n    &::before {\r\n      @extend %custom-checkbox;\r\n      margin-right: rem-calc(8);\r\n    }\r\n  }\r\n\r\n  input[type=checkbox]:checked + .compare-label-text::before {\r\n    @extend %custom-checkbox-checked;\r\n  }\r\n\r\n/* scss-combine:components/product-items */\r\n// ================================================================ */\r\n// Products as displayed in a list or grid like format.\r\n\r\n\r\n.product-item {\r\n  position: relative;\r\n  text-align: center;\r\n\r\n  .item-title,\r\n  .price {\r\n    @extend %font-h5;\r\n    display: block;\r\n    font-size: rem-calc(16);\r\n  }\r\n\r\n  .price {\r\n    margin-top: 0.6667rem;\r\n    color: $color-text-meta;\r\n  }\r\n\r\n  .item-title {\r\n    margin-top: 0.4667rem; // 7px\r\n    transition: color 0.3s ease-out;\r\n\r\n    &:hover { color: $color-primary; }\r\n  }\r\n\r\n  .button {\r\n    padding-right: 4em;\r\n    padding-left: 4em;\r\n  }\r\n}\r\n\r\n.product-item {\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 0 10px $pad-vertical 15px;\r\n  box-shadow: 0 0 transparent;\r\n\r\n  &:hover {\r\n    box-shadow: 0 1px 4px rgba($black, 0.2);\r\n    transition: all .25s cubic-bezier(0.17, 0.605, 0.315, 0.875);\r\n\r\n    .button-quickshop {\r\n      opacity: 0.7;\r\n      visibility: visible;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n}\r\n\r\n.button-quickshop {\r\n  display: inline-block;\r\n  margin-top: rem-calc(20);\r\n  font-family: $font-secondary;\r\n  font-size: rem-calc(13);\r\n  font-weight: 700;\r\n  color: $black;\r\n  text-transform: uppercase;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transform: translateY(rem-calc(-10));\r\n  transition: all 0.2s cubic-bezier(0.17, 0.605, 0.315, 0.875);\r\n\r\n  &:hover {\r\n    .product-item & { opacity: 1; }\r\n  }\r\n\r\n  // Reveal it only if there is no-touch events (hover possible) on larger screens\r\n  .touchevents & {\r\n    display: none;\r\n  }\r\n\r\n  svg { vertical-align: middle; }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n// Image\r\n.product-item-image {\r\n  position: relative;\r\n  padding: 1em 1em 1.5em;\r\n}\r\n\r\n/* scss-combine:components/product-badges */\r\n// ================================================================ */\r\n// Display the sale / sold out badges on product listing items.\r\n\r\n// Text that displays \"sale\" on items on sale.\r\n.product-badge {\r\n  @extend %product-badge-text-treatment;\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  z-index: 1;\r\n  height: rem-calc(21);\r\n  padding: 0 rem-calc(7);\r\n  line-height: rem-calc(21);\r\n  color: $color-primary;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  background-color: transparent;\r\n  border: 1px solid $color-primary;\r\n  transition: all 200ms $ease-out-quad;\r\n  pointer-events: none;\r\n\r\n  .setting-fill-badges & {\r\n    color: $color-light;\r\n    background-color: $color-primary;\r\n  }\r\n\r\n  .setting-fill-badges .product-item:hover & {\r\n    color: $color-primary;\r\n    background-color: $color-light;\r\n    border-color: $color-primary;\r\n  }\r\n}\r\n\r\n.badge-sale {\r\n  color: $color-problem;\r\n  border: 1px solid $color-problem;\r\n\r\n  .setting-fill-badges & {\r\n    color: $color-light;\r\n    background-color: $color-problem;\r\n  }\r\n\r\n  .setting-fill-badges .product-item:hover & {\r\n    color: $color-problem;\r\n    background-color: $color-light;\r\n    border-color: $color-problem;\r\n  }\r\n}\r\n\r\n/* scss-combine:components/product-page */\r\n// ================================================================ */\r\n// Product Page - Viewing the full product information page\r\n\r\n.product-info-wrapper {\r\n  @extend %clearfix;\r\n  max-width: rem-calc(1800);\r\n  margin-bottom: $pad-vertical * 2;\r\n\r\n  &:after {\r\n    visibility: hidden;\r\n    content: \"single-column\";\r\n    font-size: 0;\r\n  }\r\n}\r\n\r\n\r\n.product-information {\r\n  padding: ($pad-vertical * 2) rem-calc(20) 0 0;\r\n\r\n  @include breakpoint($col-2-bp) {\r\n    padding-right: $pad-horizontal;\r\n  }\r\n\r\n  &.sticky {\r\n    @include breakpoint($nav-slide-bp) {\r\n      width: calc(50% - (#{$nav-sidebar-width / 2})); // context is now window, so account for sidebar\r\n    }\r\n\r\n    @include breakpoint(2085px) {\r\n      // Minor tweak for the largest screens so info doesn't jump around\r\n      left: rem-calc(1240);\r\n    }\r\n  }\r\n}\r\n\r\n.product-inner {\r\n  max-width: rem-calc(540);\r\n  padding-left: rem-calc(20);\r\n\r\n  @include breakpoint($col-2-bp) {\r\n    padding-left: $pad-horizontal;\r\n  }\r\n}\r\n\r\n.main-product-graphic {\r\n  padding-top: $pad-vertical * 2;\r\n  padding-right: rem-calc(20);\r\n  padding-left: rem-calc(20);\r\n\r\n  @include breakpoint($col-2-bp) {\r\n    padding-right: $pad-horizontal;\r\n    padding-left: $pad-horizontal;\r\n  }\r\n\r\n  @include breakpoint($nav-slide-bp) {\r\n    padding-right: 0;\r\n  }\r\n}\r\n\r\n.product-slides-wrap .product-slide:first-child {\r\n  display: none;\r\n}\r\n\r\n// adjust product layout to 2 columns\r\n@include bp-wider-page {\r\n  .product-information {\r\n    float: right;\r\n    width: 50%;\r\n    right: 0;\r\n\r\n    &:after {\r\n      @extend %visually-hidden;\r\n      content: \"enable-sticky\";\r\n    }\r\n  }\r\n\r\n  .main-product-graphic {\r\n    float: left;\r\n    width: 50%;\r\n  }\r\n\r\n  .first-product-image {\r\n    display: none;\r\n  }\r\n\r\n  .product-slides-wrap .product-slide:first-child {\r\n    display: block;\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Info Tabs - Below main product image / details\r\n// shows features, warranty, reviews (etc)\r\n\r\n.product-tabs {\r\n  padding: $pad-vertical 0;\r\n}\r\n\r\n.product-tabs-navigation {\r\n  ul {\r\n    padding: 0;\r\n    margin: 0;\r\n    border-bottom: 1px solid $color-borders;\r\n  }\r\n\r\n  li {\r\n    display: inline-block;\r\n    margin-right: rem-calc(8);\r\n\r\n    @include breakpoint($col-2-bp) {\r\n      margin-right: rem-calc(32);\r\n    }\r\n  }\r\n\r\n  a {\r\n    position: relative;\r\n    top: 1px;\r\n    display: inline-block;\r\n    padding: rem-calc(16 0);\r\n    font-family: $font-secondary;\r\n    font-size: rem-calc(13);\r\n    line-height: rem-calc(18);\r\n    text-transform: uppercase;\r\n    color: $color-dark;\r\n    border-bottom: 2px solid transparent;\r\n\r\n    svg {\r\n      display: inline-block;\r\n      margin-left: 1em;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n\r\n  .active a {\r\n    color: $color-dark;\r\n    font-weight: bold;\r\n    border-bottom-color: $color-dark;\r\n  }\r\n}\r\n\r\n.tab-content-panel {\r\n  display: none;\r\n\r\n  &.active { display: block; }\r\n}\r\n\r\n.product-brand {\r\n  color: $color-headings;\r\n\r\n  &:hover { opacity: 0.7; }\r\n}\r\n\r\n.product-title {\r\n  @extend %font-h1;\r\n  font-size: if(font-mapper(\"font_h1-h3\") == \"Karla\", rem-calc(34), rem-calc(28));\r\n\r\n  .quick-shop-modal & {\r\n    margin-top: rem-calc(20);\r\n  }\r\n}\r\n\r\n.read-more-link {\r\n  @extend %underline-hover;\r\n  color: $color-primary;\r\n}\r\n\r\n.product-detail-item:not(:last-child) {\r\n  margin-bottom: 1em;\r\n}\r\n\r\n.product-details-title,\r\n.product-details-info:not(:last-child) {\r\n  display: inline;\r\n}\r\n\r\n.product-details-title {\r\n  font-weight: bold;\r\n\r\n  &.product-details-bulk-pricing {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.product-details-info ~ .product-details-info { display: block; }\r\n\r\n.form-file-types,\r\n.form-file-size {\r\n  font-size: 75%;\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Product Reviews Displayed\r\n\r\n.product-info-reviews {\r\n  padding-top: $pad-vertical * 2;\r\n  padding-bottom: rem-calc(20);\r\n  border-top: 1px solid $color-borders;\r\n\r\n  .review-item {\r\n    margin-bottom: rem-calc(50);\r\n\r\n    .rating-stars { margin-top: 0.15rem; }\r\n  }\r\n\r\n  .review-item-meta {\r\n    margin-top: 1.4rem;\r\n    font-family: $font-secondary;\r\n    font-size: rem-calc(14);\r\n    text-transform: uppercase;\r\n    opacity: 0.75;\r\n  }\r\n\r\n  .review-title { font-size: rem-calc(20); }\r\n}\r\n\r\n.product-reviews-header {\r\n  text-align: center;\r\n  margin-bottom: rem-calc(40);\r\n}\r\n\r\n.reviews-title {\r\n  @extend %font-h3;\r\n}\r\n\r\n.product-details-rating {\r\n  margin-bottom: 1em;\r\n}\r\n\r\n.page-product,\r\n.quick-shop-modal {\r\n  .price {\r\n    display: block;\r\n    margin-top: rem-calc(16);\r\n    margin-bottom: rem-calc(14);\r\n  }\r\n}\r\n\r\n/* scss-combine:components/flickity */\r\n/*! Flickity v1.1.1\r\nhttp://flickity.metafizzy.co\r\n\r\nStylesheet imported (with some content removed) from Flickity Library.\r\n---------------------------------------------- */\r\n\r\n.flickity-enabled {\r\n  position: relative;\r\n}\r\n\r\n.flickity-enabled:focus { outline: none; }\r\n\r\n.flickity-viewport {\r\n  position: relative;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.flickity-slider {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* draggable */\r\n\r\n.flickity-enabled.is-draggable {\r\n  user-select: none;\r\n  tap-highlight-color: transparent;\r\n}\r\n\r\n.flickity-enabled.is-draggable .flickity-viewport {\r\n  cursor: move;\r\n  cursor: grab;\r\n}\r\n\r\n.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down {\r\n  cursor: grabbing;\r\n}\r\n\r\n/* ---- previous/next buttons ---- */\r\n\r\n.flickity-prev-next-button {\r\n  position: absolute;\r\n  top: 50%;\r\n  width: 44px;\r\n  height: 44px;\r\n  cursor: pointer;\r\n  background: transparent;\r\n  background: hsla(0, 0%, 100%, 0);\r\n  border: 0;\r\n  border-radius: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.flickity-prev-next-button:hover { background: transparent; }\r\n\r\n.flickity-prev-next-button:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 5px #09F;\r\n}\r\n\r\n.flickity-prev-next-button:active {\r\n  opacity: 0.6;\r\n  filter: alpha(opacity=60); /* IE8 */\r\n}\r\n\r\n.flickity-prev-next-button.previous { left: 10px; }\r\n.flickity-prev-next-button.next { right: 10px; }\r\n\r\n.flickity-prev-next-button:disabled {\r\n  cursor: auto;\r\n  opacity: 0.3;\r\n  filter: alpha(opacity=30); /* IE8 */\r\n}\r\n\r\n.flickity-prev-next-button svg {\r\n  position: absolute;\r\n  top: 20%;\r\n  left: 20%;\r\n  width: 60%;\r\n  height: 60%;\r\n}\r\n\r\n.flickity-prev-next-button .arrow {\r\n  fill: $black;\r\n}\r\n\r\n/* color & size if no SVG - IE8 and Android 2.3 */\r\n.flickity-prev-next-button.no-svg {\r\n  font-size: 26px;\r\n  color: #333;\r\n}\r\n\r\n/* scss-combine:components/product-images */\r\n// ================================================================ */\r\n// Product Images - as displayed on product pages\r\n\r\n// Hide additional images when no js (since slides won't open)\r\n.no-js .product-slide:not(:first-of-type) { display: none; }\r\n\r\n// ---------------------------------------------------------------- */\r\n// Primary Product Image\r\n@include breakpoint(max-width 500px) {\r\n  .product-slides-wrap {\r\n    &:after {\r\n      @extend %visually-hidden;\r\n      content: \"disable-lightbox\";\r\n    }\r\n  }\r\n}\r\n\r\n.product-slide {\r\n  position: relative;\r\n  display: block;\r\n  width: 100%;\r\n  margin-right: 0.333rem;\r\n  margin-bottom: $pad-vertical;\r\n  text-align: center;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transform: translateY(rem-calc(-10));\r\n  transition: all 0.6s ease-out;\r\n\r\n  .no-js &,\r\n  &.loaded {\r\n    visibility: visible;\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n\r\n  &:last-child { margin-bottom: 0; }\r\n}\r\n\r\n// Product images in a modal column\r\n.quick-shop-secondary-image .qs-img-wrapper {\r\n  display: inline-block;\r\n  width: rem-calc(54px);\r\n  border: 1px solid transparent;\r\n\r\n  &:not(:last-child) { margin-right: rem-calc(6px); }\r\n  &.active { border: 1px solid $color-dark; }\r\n}\r\n\r\n.product-info-wrapper { position: relative;}\r\n.product-tabs-wrapper { padding: 0 1.875rem; }\r\n\r\n\r\n/* scss-combine:components/add-to-cart-form */\r\n// ================================================================ */\r\n// The add to cart form - on product pages\r\n\r\n// ---------------------------------------------------------------- */\r\n// Responsive styling and grid layout\r\n\r\n.add-to-cart-form-full {\r\n  // Large screen - sits within a 6 column region (as defined in product-pages)\r\n  .form-field,\r\n  .form-field-control {\r\n    display: block;\r\n  }\r\n\r\n  .form-file-types,\r\n  .form-file-size {\r\n    display: block;\r\n    font-size: rem-calc(12);\r\n  }\r\n}\r\n\r\n.form-field-options,\r\n.form-field-customizations {\r\n  width: 100%;\r\n}\r\n\r\n.product-cart-messages { clear: both; }\r\n\r\n.add-to-cart-buttons .button-square svg { vertical-align: text-top; }\r\n\r\n.option-unavailable { opacity: 0.5; }\r\n\r\n// ================================================================ */\r\n// Swatch: Set of options displaying color / pattern choices\r\n\r\n.swatch-wrap .form-label-text {@extend .visually-hidden; }\r\n\r\n.form-field-swatch {\r\n  $swatch-size: 32px;\r\n\r\n  .form-field-control { @extend %clearfix; }\r\n\r\n  .swatch-wrap {\r\n    float: left;\r\n    padding: 0.2em;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n\r\n    &:not(:last-child) { margin-right: 0.333em; }\r\n\r\n    &:hover {\r\n      .swatch-pattern-expanded {\r\n        z-index: 10;\r\n        opacity: 1;\r\n        visibility: visible;\r\n      }\r\n    }\r\n  }\r\n\r\n  .swatch {\r\n    position: relative;\r\n    display: block;\r\n    width: $swatch-size;\r\n    height: $swatch-size;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    transform: translateZ(0); // Fixes issue with flickering in Chrome\r\n  }\r\n\r\n  // ------------------ */\r\n  // Multiple Colors\r\n\r\n  .swatch-color {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: {\r\n      position: 50%;\r\n      repeat: no-repeat;\r\n      size: cover;\r\n    }\r\n  }\r\n\r\n  .two-colors .secondary {\r\n    left: 50%;\r\n  }\r\n\r\n  .three-colors {\r\n    .secondary {\r\n      right: 68%;\r\n      left: auto;\r\n    }\r\n\r\n    .tertiary {left: 68%; }\r\n  }\r\n\r\n  // ------------------ */\r\n  // Selected States\r\n\r\n  .swatch-radio {\r\n    // Selected Swatch Item\r\n    &:checked + .swatch {\r\n      border-color: $color-borders;\r\n      box-shadow: 0 0 0 4px $white, 0 0 0 6px $color-borders;\r\n    }\r\n  }\r\n\r\n  .swatch-pattern-expanded {\r\n    position: absolute;\r\n    padding: 5px;\r\n    background-color: $color-light;\r\n    border: 1px solid $color-borders;\r\n    border-radius: 50%;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: opacity 0.3s $ease-out-quad;\r\n\r\n    @include breakpoint(max-width 768px) { display: none; }\r\n  }\r\n\r\n  .swatch-pattern-image {\r\n    display: block;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n    background: {\r\n      position: 50%;\r\n      repeat: no-repeat;\r\n      size: cover;\r\n    }\r\n  }\r\n}\r\n\r\n// ================================================================ */\r\n// Rectangles - Form options displayed as a series of rectangles with text\r\n\r\n.form-field-rectangle {\r\n  @extend %clearfix;\r\n\r\n  .rectangle {\r\n    position: relative;\r\n    display: inline-block;\r\n    float: left;\r\n    margin: 0 1.333em 1.333em 0;\r\n  }\r\n\r\n  .rectangle-text {\r\n    display: block;\r\n    padding-left: 1.333em;\r\n    padding-right: 1.333em;\r\n    min-width: 2.667em;\r\n    min-height: 3.666em;\r\n    line-height: 3.666em;\r\n    text-align: center;\r\n    border: {\r\n      color: $color-borders;\r\n      style: solid;\r\n      width: rem-calc(1px);\r\n      radius: 0.133em;\r\n    }\r\n  }\r\n\r\n  // scss-lint:disable QualifyingElement\r\n  input[type=\"radio\"] {\r\n    position: absolute;\r\n    z-index: 1;\r\n    width: 100%;\r\n    height: 100%;\r\n    cursor: pointer;\r\n    opacity: 0;\r\n\r\n    // Selected Item\r\n    &:checked + .rectangle-text { border-color: $color-dark; }\r\n  }\r\n}\r\n\r\n\r\n/*----------------------------------------------------------------------------*/\r\n// Product picklist items\r\n\r\n/* product-picker input type  */\r\n\r\n.product-picklist-item {\r\n  position: relative;\r\n  display: block;\r\n  margin-bottom: -1px;\r\n}\r\n\r\n.product-picklist-radio {\r\n  position: absolute;\r\n  top: 50%;\r\n  margin-top: -7px;\r\n  line-height: 14px;\r\n}\r\n\r\n.product-picklist-item-body {\r\n  position: relative;\r\n  display: table;\r\n  width: 100%;\r\n  min-height: 80px;\r\n  padding: 6px 8px 6px 90px;\r\n  font-size: 13px;\r\n  cursor: pointer;\r\n\r\n  &.picklist-none { padding-left: 27px; }\r\n\r\n  &:hover {\r\n    z-index: 1;\r\n  }\r\n\r\n  [type=\"radio\"]:checked ~ & {\r\n    z-index: 2;\r\n  }\r\n}\r\n\r\n.product-picklist-image-wrap {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 8px;\r\n  left: 24px;\r\n  width: 60px;\r\n  overflow: hidden;\r\n}\r\n\r\n.product-picklist-image {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.product-picklist-label-text {\r\n  display: table-cell;\r\n  line-height: 1.4;\r\n  vertical-align: middle;\r\n\r\n  .picklist-none & {\r\n    position: relative;\r\n    top: 2px;\r\n  }\r\n}\r\n\r\n\r\n/*----------------------------------------------------------------------------*/\r\n// Delivery date\r\n\r\n.form-field-date {\r\n  .form-field-control { display: flex; }\r\n  .form-select-wrapper { margin-right: rem-calc(10); }\r\n}\r\n\r\n/* scss-combine:components/quantity-widget */\r\n// ================================================================ */\r\n// Quantity control - as seen on product pages and the cart\r\n\r\n.form-field-quantity-control .form-field-control {\r\n\r\n  $button-pad-position: rem-calc(10);\r\n  position: relative;\r\n  display: block;\r\n  width: rem-calc(120);\r\n\r\n  .qty-decrement,\r\n  .qty-increment {\r\n    position: absolute;\r\n    top: 50%;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n    transform: translateY(-50%);\r\n    user-select: none;\r\n\r\n    &:hover { color: $color-dark; }\r\n  }\r\n\r\n  .qty-decrement { left: $button-pad-position; }\r\n  .qty-increment { right: $button-pad-position; }\r\n  input { text-align: center; }\r\n}\r\n\r\n/* scss-combine:components/blog */\r\n// ================================================================ */\r\n// Blog Listing\r\n\r\n// scss-lint:disable SelectorFormat -- .page-blog_post is autogenerated\r\n// based on content in the page data json.\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n.blog-index {\r\n  margin-top: $pad-vertical;\r\n  margin-bottom: $pad-vertical * 2;\r\n\r\n  // Styles specific to blog list display on tablet / mobile\r\n  .blog-item {\r\n    padding-bottom: $pad-vertical * 3;\r\n    margin-bottom: $pad-vertical * 3;\r\n    &:not(:last-child) { border-bottom: 1px solid $color-borders; }\r\n  }\r\n\r\n  .button { margin-top: 4rem; } // 60px\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n// Styling for the items as displayed in blog-index (list of posts)\r\n.blog-item {\r\n  .item-title {\r\n    @extend %blog-post-title;\r\n    margin-bottom: $pad-vertical * 0.8;\r\n\r\n    a:hover { color: $color-primary; }\r\n  }\r\n\r\n  .timestamp {\r\n    @extend %timestamp-text-treatment;\r\n    display: block;\r\n    padding-bottom: $pad-vertical;\r\n    color: $color-text-lighter;\r\n    text-align: center;\r\n  }\r\n\r\n  // Images within <figure> elements with a background\r\n  .blog-item-image {\r\n    margin: 0;\r\n    margin-bottom: rem-calc(46);\r\n\r\n    a {\r\n      display: block;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .blog-item-content {\r\n    @include breakpoint(400px) {\r\n      padding-right: $pad-horizontal;\r\n      padding-left: $pad-horizontal;\r\n    }\r\n  }\r\n\r\n  .blog-content-summary { margin-bottom: $pad-vertical; }\r\n  .read-more-link { @extend %link-underlined; }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Individual Blog Posts\r\n\r\n.page-blog_post {\r\n  .post-title {\r\n    @extend %blog-post-title;\r\n    margin-top: $pad-vertical * 2;\r\n  }\r\n\r\n  .timestamp {\r\n    @extend %timestamp-text-treatment;\r\n    display: block;\r\n    padding-bottom: $pad-vertical;\r\n    color: $color-text-lighter;\r\n    text-align: center;\r\n  }\r\n\r\n  .post-meta {\r\n    padding-top: $pad-vertical;\r\n    font-family: $font-secondary;\r\n    border-top: 1px solid $color-borders;\r\n\r\n    .timestamp { font-weight: bold; }\r\n  }\r\n\r\n  .featured-image-container,\r\n  .blog-content {\r\n    margin-bottom: $pad-vertical * 0.8;\r\n  }\r\n\r\n  .blog-content {\r\n    margin-bottom: $pad-vertical * 2;\r\n    line-height: 2;\r\n  }\r\n\r\n  .post-author {\r\n    color: $color-text;\r\n    span { color: $color-text-lighter; }\r\n  }\r\n\r\n  .main-content { @extend %page-bottom-pad; }\r\n}\r\n\r\n// When enabled, display a dropcap for the first letter\r\n.setting-journal-dropcap.blog-content::first-letter {\r\n  float: left;\r\n  padding-right: rem-calc(14);\r\n  padding-left: rem-calc(8);\r\n  margin-bottom: rem-calc(-5);\r\n  font-size: rem-calc(98);\r\n  line-height: 1;\r\n  color: $color-text-lighter;\r\n  vertical-align: top;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Latest blog posts display on the homepage.\r\n\r\n.latest-blog-posts {\r\n  padding: $pad-vertical $pad-horizontal;\r\n  text-align: center;\r\n\r\n  .blog-item-image .replaced-image {\r\n    width: rem-calc(165);\r\n    height: rem-calc(165);\r\n    margin: 0 auto rem-calc(40);\r\n    background-color: darken($white, 5);\r\n    border-radius: 50%;\r\n\r\n    @include breakpoint($desktop-bp) {\r\n      width: 15vw;\r\n      height: 15vw;\r\n    }\r\n  }\r\n\r\n  .latest-blog-posts-items {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n  }\r\n\r\n  .blog-item {\r\n    margin-bottom: 3rem;\r\n\r\n\r\n\r\n    .item-title {\r\n      @extend %font-h5;\r\n      margin-bottom: rem-calc(5);\r\n    }\r\n  }\r\n\r\n  // Quantity query for just 2 items\r\n  .blog-item:nth-last-child(n+2):nth-last-child(-n+2):first-child,\r\n  .blog-item:nth-last-child(n+2):nth-last-child(-n+2):first-child ~ .blog-item {\r\n    @include breakpoint(480px) {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  // Quantity query for just three items\r\n  .blog-item:nth-last-child(n+3):nth-last-child(-n+3):first-child,\r\n  .blog-item:nth-last-child(n+3):nth-last-child(-n+3):first-child ~ .blog-item {\r\n    @include breakpoint(680px) {\r\n      width: 33.333%\r\n    }\r\n  }\r\n\r\n  // Quantity query for at least four items\r\n  .blog-item:nth-last-child(n+4),\r\n  .blog-item:nth-last-child(n+4) ~ .blog-item {\r\n    @include breakpoint($carousel-bp) {\r\n      width: 50%;\r\n    }\r\n\r\n    @include breakpoint($desktop-bp) {\r\n      width: 24%;\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:components/share-links */\r\n// ================================================================ */\r\n// Share Links\r\n\r\n.fb-like iframe { max-width: none; }\r\n\r\n.share-links-container {\r\n  margin-top: rem-calc(20);\r\n  margin-bottom: rem-calc(20);\r\n  color: $color-text-darker;\r\n\r\n  .share-links { padding: 0; }\r\n\r\n  .share-link {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n\r\n    svg {\r\n      max-width: 100%;\r\n      margin-left: rem-calc(10);\r\n    }\r\n\r\n    a {\r\n      display: inline-block;\r\n      max-width: rem-calc(18);\r\n      max-height: rem-calc(18);\r\n      line-height: rem-calc(18);\r\n      color: inherit;\r\n    }\r\n\r\n    &:not(:last-child) { margin-right: 1rem; }\r\n  }\r\n\r\n  &.has-like,\r\n  .type-blog-post { text-align: left; }\r\n\r\n  .facebook-like { vertical-align: text-bottom; }\r\n\r\n  @include breakpoint(max-width 500px) { display: none; }\r\n}\r\n\r\n.share-links-label,\r\n.share-links {\r\n  display: inline;\r\n  font-size: rem-calc(14);\r\n  line-height: rem-calc(25);\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n}\r\n\r\n.share-links-label {\r\n  font-family: $font-secondary;\r\n  font-weight: bold;\r\n  margin-right: rem-calc(25);\r\n}\r\n\r\n// ================================================================ */\r\n// Social Media Links (in footer)\r\n\r\n.social-media-link {\r\n  display: inline-block;\r\n\r\n  &:not(:last-of-type) { margin-right: rem-calc(20); }\r\n  .social-media-name { vertical-align: middle; }\r\n\r\n  svg {\r\n    margin-right: rem-calc(8);\r\n    vertical-align: middle;\r\n    width: rem-calc(18);\r\n  }\r\n}\r\n\r\n.quick-shop-modal .has-like .share-links {\r\n  display: block;\r\n}\r\n\r\n/* scss-combine:components/alerts */\r\n// ================================================================ */\r\n// Alerts - errors and status messages displayed in context.\r\n// ---------------------------------------------------------------- */\r\n\r\n.alert {\r\n  @extend %alert-text-treatment;\r\n  display: block;\r\n  padding: 0.666em;\r\n  margin-bottom: 0.66em;\r\n\r\n  a {\r\n    font-weight: bold;\r\n    color: inherit;\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.alert-error {\r\n  padding: 0;\r\n  color: $color-problem;\r\n}\r\n\r\n.alert-info {\r\n  color: $color-warning;\r\n  background-color: rgba($color-warning, 0.1);\r\n}\r\n\r\n.alert-success {\r\n  color: $color-confirm;\r\n  background-color: rgba($color-confirm, 0.1);\r\n}\r\n\r\n/* scss-combine:components/giftwrapping */\r\n// ================================================================ */\r\n// Giftwrapping modal displayed on the cart page.\r\n\r\n// ---------------------------------------------------------------- */\r\n// Modal\r\n\r\n// This modal starts hidden (to show a loading indicator)\r\n// and then transitions in when ready to go\r\n.giftwrap-modal {\r\n  opacity: 0;\r\n  transition: opacity 200ms ease;\r\n\r\n  .loaded & { opacity: 1 }\r\n}\r\n\r\n/* scss-combine:components/return-shop-link */\r\n// ================================================================ */\r\n// A small link displayed in the page header that sends users back\r\n\r\n.return-to-shopping-link a {\r\n  $animate-distance: 0.5rem;\r\n  text-transform: initial;\r\n\r\n  &::before {\r\n    display: inline-block;\r\n    width: 0;\r\n    height: 0;\r\n    margin-right: $animate-distance;\r\n    vertical-align: middle;\r\n    border-top: 3px solid transparent;\r\n    border-right: 3px solid currentColor;\r\n    border-bottom: 3px solid transparent;\r\n    content: \"\";\r\n    transition: all 200ms ease;\r\n  }\r\n\r\n  &:hover::before {\r\n    margin-right: $animate-distance * 2;\r\n    margin-left: - $animate-distance;\r\n  }\r\n}\r\n\r\n/* scss-combine:components/quick-shop */\r\n// ================================================================ */\r\n// Quick Shop - Displaying a product preview in a modal\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n.quick-shop-modal {\r\n  width: rem-calc(900);\r\n  padding: rem-calc(30);\r\n  opacity: 0;\r\n  transition: opacity 200ms ease;\r\n\r\n  .loaded & { opacity: 1; }\r\n\r\n  @include breakpoint(40em) {\r\n    // Larger screen widths;\r\n    .quick-shop-info-column,\r\n    .quick-shop-image-column { width: 50%; }\r\n\r\n    .quick-shop-info-column {\r\n      float: right;\r\n      padding-left: 1.666em;\r\n    }\r\n\r\n    .quick-shop-image-column {\r\n      float: left;\r\n      padding-right: 1.666em;\r\n    }\r\n  }\r\n\r\n  .flickity-slider img {\r\n    margin: 2px; // Minor spacing to avoid next slide clipping over edge\r\n    width: 100%;\r\n  }\r\n\r\n  .quick-shop-primary-image ~ .quick-shop-secondary-image {\r\n    margin-top: 1em;\r\n  }\r\n\r\n  .more-link {\r\n    display: none;\r\n    text-decoration: underline;\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  [data-button-purchase] {\r\n    width: calc(80% - 50px);\r\n  }\r\n\r\n  .product-summary {\r\n    display: none;\r\n\r\n    &.loaded { display: inline-block; }\r\n\r\n    .more-link {\r\n      display: inline-block;\r\n      margin-left: rem-calc(5);\r\n    }\r\n  }\r\n}\r\n\r\n.quick-shop-full-details-link {\r\n  display: inline-block;\r\n  padding-bottom: rem-calc(3);\r\n  margin-top: rem-calc(14);\r\n  margin-bottom: rem-calc(28);\r\n  font-family: $font-secondary;\r\n  color: $color-dark;\r\n  text-transform: uppercase;\r\n  border-bottom: 1px solid $color-borders;\r\n\r\n  &:hover {\r\n    border-color: transparent;\r\n  }\r\n\r\n  &:after {\r\n    margin-left: rem-calc(4);\r\n    font-size: 1.1em;\r\n    content: \"\\203A\";\r\n  }\r\n}\r\n\r\n/* scss-combine:components/apple-pay */\r\n.apple-pay-checkout-button {\r\n  display: none;\r\n  height: rem-calc(50);\r\n  background: {\r\n    position: 50% 50%;\r\n    repeat: no-repeat;\r\n    size: 100% 60%;\r\n  }\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n\r\n  @if stencilString(\"style_apple_pay_button\") == \"white\" {\r\n    background-color: white;\r\n    background-image: -webkit-named-image(apple-pay-logo-black);\r\n  } @else if stencilString(\"style_apple_pay_button\") == \"white-border\" {\r\n    background-color: white;\r\n    background-image: -webkit-named-image(apple-pay-logo-black);\r\n    border: 0.5px solid black;\r\n  } @else {\r\n    background-color: black;\r\n    background-image: -webkit-named-image(apple-pay-logo-white);\r\n  }\r\n\r\n  .additional-checkout-buttons & {\r\n    margin-bottom: rem-calc(15);\r\n  }\r\n\r\n  .apple-pay-supported & {\r\n    display: block;\r\n  }\r\n}\r\n\r\n\r\n// Specific Pages\r\n/* scss-combine:components/pages-content */\r\n// ================================================================ */\r\n// Content Pages -\r\n\r\n// Contact Form\r\n#form-contact-us {\r\n  .form-actions {\r\n    text-align: center;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n// ================================================================ */\r\n// Pages with Sidebars\r\n// Example left here for demonstration purposes - these grids are applied\r\n// individually as needed (since different sections use different widths)\r\n\r\n// .page-with-sidebar {\r\n  // Define your sidebar classes as necessary.\r\n  // .page-sidebar { @include span(4 of 12); }\r\n  // .page-main-content { @include span(last 8 of 12); }\r\n// }\r\n\r\n/* scss-combine:components/compare-page */\r\n// ================================================================ */\r\n// Compare Page - display a few items to be compared.\r\n\r\n// ---------------------------------------------------------------- */\r\n\r\n.compare-page {\r\n  @extend %page-bottom-pad;\r\n  overflow: auto;\r\n  white-space: nowrap;\r\n\r\n  .compare-column { white-space: normal; }\r\n}\r\n\r\n.compare-table-heading {\r\n  padding: 1.5625em 0.5em 1.25em; // 25px 15px 20px\r\n  margin: {\r\n    top: 1.866em;\r\n    bottom: 1.866em; // ~28px\r\n  }\r\n  font-size: 1.066em; // ~16px\r\n  font-weight: bold;\r\n  line-height: 1.5; // 24px\r\n  color: $color-dark;\r\n  border: {\r\n    top: 1px solid $color-borders;\r\n  }\r\n}\r\n\r\n.compare-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n  padding: 0 0.5em;\r\n  vertical-align: bottom;\r\n\r\n  .rating-stars,\r\n  .item-title { margin-bottom: 0.5em; }\r\n\r\n  &:nth-child(1) { text-align: center; }\r\n\r\n  .item-title { font-size: 1.466em; } // 22px (from 15 base)\r\n\r\n  .price {\r\n    @extend %font-h3;\r\n    display: block;\r\n  }\r\n\r\n  .button { margin-top: 3em; } // ~33px\r\n\r\n  .compare-remove-link {\r\n    display: block;\r\n    font-size: 0.866em; // ~13px\r\n    color: $color-primary;\r\n    text-decoration: underline;\r\n  }\r\n}\r\n\r\n.compare-column {\r\n  padding-bottom: 1.8em; // ~27px\r\n  border-bottom: 1px solid $color-borders;\r\n\r\n  @include breakpoint(700px) {\r\n    display: inline-block;\r\n    width: 33%;\r\n\r\n    &:not(:first-child) {\r\n      .compare-details {\r\n        margin-left: 2em;\r\n      }\r\n\r\n      .compare-table-heading {\r\n        color: rgba($color-light, 0);\r\n      }\r\n    }\r\n\r\n    // Quantity query for when only two compare items.\r\n    &:nth-last-child(-n+2):first-child,\r\n    &:nth-last-child(-n+2):first-child ~ & {\r\n      width: 50%;\r\n    }\r\n\r\n    // Container query for when there's four or more\r\n    &:nth-last-child(n+4),\r\n    &:nth-last-child(n+4) ~ & {\r\n      width: 30%;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/* scss-combine:components/page-cart */\r\n// ================================================================ */\r\n// Cart Page - Display the products the customer is ready to buy before checkout\r\n\r\n// ---------------------------------------------------------------- */\r\n// General page styles\r\n\r\n// Title above coupon codes / giftcards\r\n.cart-block-title {\r\n  @extend %font-h5;\r\n  margin-bottom: rem-calc(5);\r\n  color: $color-dark;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// General Cart Page Layout\r\n\r\n.page-cart {\r\n  .cart-totals {\r\n    @extend %clearfix;\r\n    padding: ($pad-vertical * 1.2) 0;\r\n  }\r\n\r\n  .cart-totals-extras .cart-totals-block { margin-bottom: 2.5rem; }\r\n\r\n  @include bp-wider-page {\r\n    .cart-totals-extras { @include span(5 of 12); }\r\n    .cart-totals-info { @include span(last 5 of 12); }\r\n  }\r\n}\r\n\r\n.cart-content {\r\n  margin-bottom: $pad-vertical;\r\n  @include breakpoint(800px) { margin-bottom: $pad-vertical * 2; }\r\n}\r\n\r\n.cart-totals-summary { margin-bottom: rem-calc(20); }\r\n\r\n// ---------------------------------------------------------------- */\r\n// Cart item components - individual line items as displayed on the cart page.\r\n\r\n.cart-item-remove,\r\n.cart-item-price,\r\n.cart-item-title {\r\n  @extend %font-h5;\r\n}\r\n\r\n.cart-item-title { margin-bottom: 0.4em; }\r\n.cart-item-price { font-weight: normal; }\r\n\r\n.cart-item-price-discounted { text-decoration: line-through; }\r\n\r\n\r\n// Little dot with an X in it\r\n// (for removing items from the cart)\r\n.cart-item-remove {\r\n  $remove-dot-size: rem-calc(24);\r\n  position: relative;\r\n  display: inline-block;\r\n  width: $remove-dot-size;\r\n  height: $remove-dot-size;\r\n  vertical-align: middle;\r\n  border: 1px solid currentColor;\r\n  border-radius: 50%;\r\n  opacity: 0.3;\r\n  transition: all 200ms $ease-out-quad;\r\n\r\n  &:hover { opacity: 0.6; }\r\n\r\n  .mini-cart-content & { vertical-align: top; }\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    display: block;\r\n    width: rem-calc(8);\r\n    height: rem-calc(8);\r\n    margin-top: rem-calc(-4);\r\n    margin-left: rem-calc(-4);\r\n  }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Cart items as a whole:\r\n\r\n.cart-item {\r\n  padding-top: rem-calc(20);\r\n  padding-bottom: rem-calc(20);\r\n  border-top: 1px solid $color-borders;\r\n\r\n  .cart-item-image { margin-bottom: 1em; }\r\n\r\n  .form-field-quantity-control {\r\n    width: rem-calc(140);\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .cart-item-details {\r\n    line-height: 1.5;\r\n  }\r\n\r\n  // Smallest widths, or just after the sidebar comes into view\r\n  @include bp-narrower-page {\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: rem-calc(320);\r\n    margin: 0 auto;\r\n    text-align: center;\r\n\r\n    > * { margin-bottom: rem-calc(20); }\r\n    .cart-item-image { order: 1; }\r\n    .cart-item-price { order: 2; }\r\n    .cart-item-details { order: 3; }\r\n    .cart-item-quantity { order: 4; }\r\n    .cart-item-remove { display: none; }\r\n  }\r\n\r\n  // Just before we have the sidebar (wider content) or again for larger screens\r\n  // Breakpoint: ~700-800 and over 1000\r\n  @include bp-wider-page {\r\n    display: table;\r\n    width: 100%;\r\n    max-width: 100%;\r\n    table-layout: fixed;\r\n\r\n    > * {\r\n      display: table-cell;\r\n      vertical-align: middle;\r\n    }\r\n\r\n    .cart-item-image {\r\n      width: span(2 of 12);\r\n    }\r\n\r\n    .cart-item-details {\r\n      padding-left: span(0.5);\r\n      padding-right: span(0.5);\r\n      width: span(5.5 of 12);\r\n    }\r\n\r\n    .cart-item-remove-wrapper { width: rem-calc(24); }\r\n\r\n    .cart-item-price {\r\n      display: table-cell;\r\n      text-align: center;\r\n    }\r\n\r\n    .cart-item-details { text-align: left; }\r\n  }\r\n}\r\n\r\n\r\n// ---------------------------------------------------------------- */\r\n// Coupon Codes Cart Block\r\n\r\n// Inline style buttons next to form fields.\r\n.cart-totals-giftcards,\r\n.cart-totals-coupons {\r\n  .button { float: right; }\r\n  .form { margin-bottom: rem-calc(10); }\r\n}\r\n\r\n.cart-totals-checkout {\r\n  @extend %clearfix;\r\n  .button { width: 100%; }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Cart Totals Summary - displays subtotal and price information\r\n\r\n.cart-totals-summary-values {\r\n  @extend %clearfix;\r\n  display: block;\r\n  padding-top: 0.8em;\r\n  padding-bottom: 0.8em;\r\n\r\n  &:not(:last-child) { border-bottom: 1px solid $color-borders; }\r\n\r\n  &.order-total {\r\n    font-size: rem-calc(18);\r\n    color: $color-headings;\r\n\r\n    .cart-total-value { font-weight: bold; }\r\n  }\r\n\r\n  .cart-total-value {\r\n    float: right;\r\n    text-align: right;\r\n  }\r\n}\r\n\r\n.cart-action-minor {\r\n  cursor: pointer;\r\n}\r\n\r\n@include bp-narrower-page {\r\n  .cart-totals-checkout,\r\n  .additional-checkout-buttons {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n  }\r\n}\r\n// ---------------------------------------------------------------- */\r\n// Postage and Packaging (Shipping) Modal\r\n\r\n.shipping-calculator {\r\n  h2 { @extend .form-field-title; }\r\n\r\n  .button {\r\n    float: left;\r\n    width: calc(50% - 1em);\r\n\r\n    // Buttons fill half width\r\n    &:first-child { margin-right: 1em; }\r\n    &:last-child:not(:first-child) { margin-left: 1em; }\r\n  }\r\n}\r\n\r\n.shipping-quotes {\r\n  clear: both;\r\n}\r\n\r\n.cart-totals-giftcards .button,\r\n.cart-totals-coupons .button { @extend .button-input-wrap; }\r\n\r\n.show-calculator {\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n}\r\n\r\n// Paypal icon / link near the footer\r\n.additional-checkout-buttons {\r\n  p {\r\n    //scss-lint:disable ImportantRule -- inline styles on this, we need to override\r\n    float: none !important;\r\n  }\r\n\r\n  p,\r\n  form { text-align: center; }\r\n}\r\n\r\n/* scss-combine:components/brands-page */\r\n// ================================================================ */\r\n// shows a summary of all the brands on the site.\r\n\r\n.brand-item,\r\n.brands-group {\r\n  @include breakpoint($col-2-bp) { @include gallery(6 of 12); }\r\n  @include breakpoint($col-3-bp) { @include gallery(4 of 12); }\r\n  @include breakpoint($col-4-bp) { @include gallery(3 of 12); }\r\n  @include breakpoint($col-6-bp) { @include gallery(2 of 12); }\r\n}\r\n\r\n.brand-item {\r\n  padding: 0 rem-calc(35);\r\n  margin-bottom: rem-calc(10);\r\n  text-align: center;\r\n}\r\n\r\n.brands-index {\r\n  @extend %clearfix;\r\n  margin-bottom: rem-calc(50);\r\n}\r\n\r\n.brands-group {\r\n  margin-bottom: 4rem;\r\n\r\n  dt {\r\n    font-family: $font-secondary;\r\n    font-weight: bold;\r\n  }\r\n\r\n  dd {\r\n    margin-left: 0;\r\n\r\n    a {\r\n      color: inherit;\r\n\r\n      &:hover { text-decoration: underline; }\r\n    }\r\n  }\r\n}\r\n\r\n.brand-item-title {\r\n  @extend %font-h5;\r\n  margin-top: rem-calc(30);\r\n  font-size: rem-calc(14);\r\n}\r\n\r\n.js .brands-list { visibility: hidden; }\r\n\r\n/* scss-combine:core/account */\r\n// Default Variables\r\n\r\n$account-link-color: #888 !default;\r\n$account-light-color: #fff !default;\r\n$account-accent-color: #5dc5e3 !default;\r\n$account-border-color: #e4e4e4 !default;\r\n$account-gutter: 30px !default;\r\n$account-font-size: 15px !default;\r\n$account-border-radius: 0 !default;\r\n$account-text-color: #5f5f5f !default;\r\n\r\n$account-card-background-color: #f5f5f5 !default;\r\n\r\n$giftcard-nav-use-default-styles: true !default;\r\n\r\n$account-breakpoint-x-small: 400px !default; // the account table columns change to full-width\r\n$account-breakpoint-small: 620px !default; // menu changes from full-width to column\r\n$account-breakpoint-medium: 900px !default; // menu changes from 35% to 25% width\r\n\r\n// Internal Variables\r\n\r\n$account-font-size-heading: $account-font-size + 2 !default;\r\n\r\n$account-text-color-light: lighten($account-text-color,20%) !default;\r\n\r\n$account-gutter-inner: $account-gutter / 2 !default;\r\n\r\n$auth-gutter: $account-gutter !default;\r\n$auth-font-size: $account-font-size !default;\r\n\r\n// Imports\r\n\r\n/* scss-combine:account/components/layout */\r\n.account-wrapper {\r\n  @extend %clearfix;\r\n  font-size: $account-font-size;\r\n}\r\n\r\n.account-nav,\r\n.account-body {\r\n  vertical-align: top;\r\n}\r\n\r\n.account-body {\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    float: right;\r\n    width: 65%;\r\n    padding-left: $account-gutter-inner;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-medium) {\r\n    width: 75%;\r\n  }\r\n\r\n  > :first-child {\r\n    margin-top: 0;\r\n  }\r\n\r\n  .account-nav-hidden & {\r\n    float: none;\r\n    width: 100%;\r\n    padding-left: 0;\r\n    margin-left: 0;\r\n  }\r\n}\r\n\r\n.account-nav {\r\n  @media screen and (max-width: $account-breakpoint-small - 1) {\r\n    margin-bottom: $account-gutter;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    float: left;\r\n    width: 35%;\r\n    padding-right: $account-gutter-inner;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-medium) {\r\n    width: 25%;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/components/forms */\r\n.account-wrapper {\r\n  .form-label-text {\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .form-field-checkbox,\r\n  .form-field-radio {\r\n    .form-label-text { width: auto; }\r\n  }\r\n\r\n  .form-field {\r\n    margin-bottom: $account-gutter-inner;\r\n  }\r\n\r\n  .form-input {\r\n    width: 100%;\r\n\r\n    &.account-form-half {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  .form-actions {\r\n    clear: both;\r\n  }\r\n}\r\n\r\n.account-form-column-container {\r\n  @extend %clearfix;\r\n\r\n  .form-field {\r\n    @media screen and (min-width: 480px) {\r\n      float: left;\r\n      width: 50%;\r\n\r\n      &:nth-child(odd) { padding-right: $account-gutter-inner; }\r\n      &:nth-child(even) { padding-left: $account-gutter-inner; }\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:account/components/table */\r\n.account-wrapper {\r\n  table {\r\n    width: 100%;\r\n    margin-top: $account-gutter-inner;\r\n    margin-bottom: $account-gutter-inner;\r\n  }\r\n\r\n  td,\r\n  th {\r\n    padding: $account-gutter-inner;\r\n  }\r\n}\r\n\r\n.account-table-tight {\r\n  th,\r\n  td {\r\n    padding: 10px 0;\r\n    border-bottom: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/components/list */\r\n// Layout\r\n// Each list item has 3 sections: thumbnail, body, and badge.\r\n\r\n.account-items {\r\n  margin-bottom: $account-gutter;\r\n}\r\n\r\n.account-item {\r\n  position: relative;\r\n  display: table;\r\n  width: 100%;\r\n  border-bottom: 1px solid $account-border-color;\r\n\r\n  &:first-of-type {\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n.account-item-thumbnail,\r\n.account-item-body,\r\n.account-item-badge,\r\n.account-item-actions {\r\n  padding-top: $account-gutter-inner;\r\n  padding-bottom: $account-gutter-inner;\r\n\r\n  @media screen and (min-width: $account-breakpoint-x-small) {\r\n    display: table-cell;\r\n    vertical-align: top;\r\n  }\r\n}\r\n\r\n// Link\r\n// Makes the entire item clickable\r\n\r\n.account-item-link {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  z-index: 100;\r\n}\r\n\r\n// Thumbnail\r\n\r\n.account-item-thumbnail {\r\n  min-width: 100px;\r\n\r\n  img {\r\n    height: auto;\r\n    max-width: 100px;\r\n  }\r\n}\r\n\r\n// Body\r\n\r\n.account-item-body {\r\n  width: 100%;\r\n\r\n  @media screen and (min-width: $account-breakpoint-x-small) {\r\n    .account-item-thumbnail + & {\r\n      padding-left: $account-gutter-inner;\r\n    }\r\n  }\r\n}\r\n\r\n.account-item-title {\r\n  margin-top: 3px;\r\n  font-size: $account-font-size;\r\n\r\n  a {\r\n    color: inherit;\r\n  }\r\n}\r\n\r\n.account-item-title-large {\r\n  font-size: $account-font-size * 1.2;\r\n}\r\n\r\n.account-item-description {\r\n  margin-top: 0;\r\n  margin-bottom: 5px;\r\n  color: $account-text-color;\r\n}\r\n\r\n.account-item-details {\r\n  @extend %clearfix;\r\n  font-size: $account-font-size;\r\n  color: $account-text-color;\r\n}\r\n\r\n.account-item-detail {\r\n  float: left;\r\n  margin-top: $account-gutter-inner;\r\n  margin-right: $account-gutter;\r\n}\r\n\r\n//scss-lint:disable VariableForProperty\r\n.account-item-detail-title {\r\n  display: block;\r\n  margin-top: 0;\r\n  margin-bottom: 3px;\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n  letter-spacing: 1px;\r\n  color: mix($account-light-color,$account-text-color,60%);\r\n  text-transform: uppercase;\r\n}\r\n\r\n// Badge\r\n\r\n.account-item-badge,\r\n.account-item-actions {\r\n  white-space: nowrap;\r\n}\r\n\r\n/* scss-combine:account/components/header */\r\n.account-header {\r\n  display: table;\r\n  width: 100%;\r\n  margin-bottom: $account-gutter-inner;\r\n}\r\n\r\n.account-heading,\r\n.account-toolbar {\r\n  display: table-cell;\r\n  vertical-align: baseline;\r\n}\r\n\r\n.account-toolbar {\r\n  text-align: right;\r\n\r\n  * {\r\n    display: inline;\r\n  }\r\n}\r\n\r\n.account-tool {\r\n  position: relative;\r\n  z-index: 10;\r\n  display: inline-block;\r\n  padding: 0;\r\n  background: transparent;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  color: inherit;\r\n  border: 0;\r\n\r\n  &:hover { color: $account-link-color; }\r\n\r\n  &:focus { outline: 0; }\r\n}\r\n\r\n/* scss-combine:account/components/navigation */\r\n.account-nav-list {\r\n  padding: 0;\r\n  margin-bottom: $account-gutter-inner;\r\n  list-style: none;\r\n  border: 1px solid $account-border-color;\r\n  border-radius: $account-border-radius;\r\n}\r\n\r\n.account-nav-item {\r\n  color: $account-link-color;\r\n  border-top: 1px solid $account-border-color;\r\n\r\n  &:first-child {\r\n    border-top: 0;\r\n  }\r\n\r\n  &.is-active {\r\n    color: $account-accent-color;\r\n    border-left: 3px solid $account-accent-color;\r\n  }\r\n}\r\n\r\n.account-nav-link {\r\n  display: block;\r\n  padding: 15px;\r\n  color: inherit;\r\n}\r\n\r\n.account-nav-badge {\r\n  float: right;\r\n}\r\n\r\n/* scss-combine:account/components/pagination */\r\n.account-wrapper .pagination {\r\n  margin-top: $account-gutter-inner;\r\n}\r\n\r\n/* scss-combine:account/components/card */\r\n%account-card-style {\r\n  background: $account-card-background-color;\r\n\r\n  .form-input {\r\n    background-color: $account-light-color;\r\n  }\r\n}\r\n\r\n.account-card {\r\n  @extend %account-card-style;\r\n  padding: $account-gutter-inner;\r\n  margin: $account-gutter-inner 0;\r\n  border-radius: $account-border-radius;\r\n}\r\n\r\n/* scss-combine:account/components/toggle */\r\n// Set the initial toggle state to hidden\r\n.account-toggle-hidden {\r\n  display: none;\r\n}\r\n\r\n/* scss-combine:account/components/status */\r\n// Status\r\n// A label used to mark the status of an item\r\n\r\n.account-status {\r\n  padding: 6px 10px 5px;\r\n  margin: 0;\r\n  font-size: 12px;\r\n  font-weight: normal;\r\n  line-height: 1;\r\n  letter-spacing: 1px;\r\n  color: $account-light-color;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  background: #8e8e8e; // TODO: Colors for each status\r\n}\r\n\r\n/* scss-combine:account/components/shipments */\r\n// Shipments\r\n// A list of shipments made for an order. Shown on the Order Details page.\r\n\r\n.account-shipments {\r\n  margin-bottom: $account-gutter;\r\n}\r\n\r\n.account-shipments-table {\r\n  th,\r\n  td {\r\n    padding: 10px 0;\r\n    text-align: left;\r\n  }\r\n\r\n  th {\r\n    padding: $account-gutter-inner 0 0;\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n\r\n  // Override default margins\r\n  .account-wrapper & {\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n\r\n/* scss-combine:account/pages/address */\r\n// Address List\r\n\r\n.account-page-add-address {\r\n  .account-content {\r\n    padding-top: $account-gutter-inner;\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n.account-address-detail {\r\n  display: block;\r\n}\r\n\r\n// Add Address\r\n\r\n.account-address-form {\r\n  padding-top: $account-gutter-inner;\r\n\r\n  @media screen and (min-width: $account-breakpoint-medium) {\r\n    .form-field {\r\n      float: left;\r\n      width: 50%;\r\n      padding-right: $account-gutter-inner;\r\n\r\n      &:nth-of-type(2n) {\r\n        padding-right: 0;\r\n        padding-left: $account-gutter-inner;\r\n      }\r\n    }\r\n  }\r\n\r\n  .form-actions {\r\n    padding-top: $account-gutter-inner;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/orders-receipt */\r\n.account-page-orders-receipt .account-content {\r\n  padding-top: $account-gutter-inner;\r\n  border-top: 1px solid $account-border-color;\r\n}\r\n\r\n// Summary\r\n\r\n.account-receipt-summaries {\r\n  @extend %clearfix;\r\n}\r\n\r\n.account-receipt-summary {\r\n  float: left;\r\n  width: 33%;\r\n  padding-right: $account-gutter;\r\n}\r\n\r\n.account-receipt-summary-title {\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  font-size: $account-font-size;\r\n}\r\n\r\n.account-receipt-summary-address {\r\n  line-height: 1.5;\r\n}\r\n\r\n.account-receipt-detail {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.account-receipt-detail-title {\r\n  color: $account-text-color-light;\r\n}\r\n\r\n// Comments\r\n\r\n.account-receipt-comments {\r\n  white-space: pre-line;\r\n}\r\n\r\n// Receipt Items (products)\r\n\r\n.account-receipt-items {\r\n  padding-top: $account-gutter-inner;\r\n}\r\n\r\n.account-receipt-download {\r\n  margin: 10px 0;\r\n}\r\n\r\n// Totals\r\n\r\n.account-receipt-totals {\r\n  display: table;\r\n  width: 50%;\r\n  margin-left: 50%;\r\n}\r\n\r\n.account-receipt-total {\r\n  display: table-row;\r\n  margin-bottom: $account-gutter-inner;\r\n}\r\n\r\n.account-receipt-total-title,\r\n.account-receipt-total-value {\r\n  display: table-cell;\r\n  padding-top: $account-gutter-inner;\r\n  padding-bottom: $account-gutter-inner;\r\n  border-top: 1px solid $account-border-color;\r\n\r\n  .account-receipt-total:first-of-type & {\r\n    border-top: 0;\r\n  }\r\n}\r\n\r\n.account-receipt-total-title {\r\n  font-weight: normal;\r\n  letter-spacing: 1px;\r\n  color: $account-text-color-light;\r\n}\r\n\r\n.account-receipt-total-value {\r\n  text-align: right;\r\n}\r\n\r\n/* scss-combine:account/pages/recent-items */\r\n\r\n/* scss-combine:account/pages/returns */\r\n// Return form\r\n\r\n.account-return-table {\r\n  th {\r\n    text-align: left;\r\n\r\n    &:last-of-type {\r\n      text-align: right;\r\n    }\r\n  }\r\n\r\n  .form-field {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\n.account-return-fields {\r\n  margin-top: $account-gutter;\r\n\r\n  .form-field-select {\r\n    width: 50%;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/wishlists */\r\n.account-wishlists {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n/* scss-combine:account/pages/messages */\r\n// Listing\r\n\r\n.account-messages-table.table-clean {\r\n  border-bottom: 1px solid $account-border-color;\r\n\r\n  td {\r\n    padding-right: 0;\r\n    padding-left: 0;\r\n    vertical-align: top;\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n.account-messages-table-date {\r\n  width: 22%;\r\n  text-align: right;\r\n}\r\n\r\n.account-message-subject {\r\n  margin-top: 0;\r\n  margin-bottom: 10px;\r\n  font-size: $account-font-size-heading;\r\n  font-weight: 500;\r\n\r\n  .account-message-is-reply &:before {\r\n    padding-right: 5px;\r\n    content: \"\\21c9\";\r\n  }\r\n\r\n  .account-message-is-read & {\r\n    color: $account-text-color-light;\r\n  }\r\n}\r\n\r\n.account-message-content {\r\n  padding-right: $account-gutter;\r\n  font-size: $account-font-size;\r\n  line-height: 1.5;\r\n  color: $account-text-color;\r\n  white-space: pre-line;\r\n\r\n  .account-message-is-read & {\r\n    color: lighten($account-text-color-light,10%);\r\n  }\r\n}\r\n\r\n.account-message-date {\r\n  color: $account-text-color-light;\r\n}\r\n\r\n// Form\r\n\r\n.account-messages-form-subject {\r\n  width: 50%;\r\n}\r\n\r\n/* scss-combine:account/pages/download */\r\n// List\r\n\r\n.account-download {\r\n  padding: $account-gutter-inner 0 0;\r\n  margin: $account-gutter-inner 0;\r\n  border-top: 1px solid $account-border-color;\r\n}\r\n\r\n.account-download-title {\r\n  margin: 0;\r\n  font-size: 1em;\r\n}\r\n\r\n.account-download-link {\r\n  color: inherit;\r\n  text-decoration: underline;\r\n}\r\n\r\n.account-download-filename {\r\n  font-size: 1.2em;\r\n}\r\n\r\n.account-download-filesize {\r\n  padding-left: 5px;\r\n  font-weight: normal;\r\n  color: $account-text-color-light;\r\n}\r\n\r\n.account-download-description {\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.account-download-expiry {\r\n  font-size: 0.9em;\r\n  color: $account-text-color-light;\r\n}\r\n\r\n.account-download-expiry-item {\r\n  display: block;\r\n  padding-bottom: 5px;\r\n\r\n  &:last-of-type {\r\n    padding-bottom: 0;\r\n  }\r\n}\r\n\r\n// Gallery\r\n\r\n.account-downloads-gallery-image {\r\n  text-align: center;\r\n}\r\n\r\n.account-downloads-gallery-thumbs {\r\n  @extend %clearfix;\r\n  text-align: center;\r\n}\r\n\r\n.account-downloads-gallery-thumb {\r\n  display: inline-block;\r\n  width: 10%;\r\n  height: 10%;\r\n  padding: 0 2px;\r\n  vertical-align: middle;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/invoice */\r\n.account-invoice-date {\r\n  margin-top: -20px;\r\n  font-size: $account-font-size;\r\n}\r\n\r\n// Address\r\n\r\n.account-invoice-addresses {\r\n  @extend %clearfix;\r\n  margin-top: $account-gutter;\r\n  margin-bottom: $account-gutter;\r\n}\r\n\r\n.account-invoice-address {\r\n  float: left;\r\n  margin-right: $account-gutter;\r\n}\r\n\r\n.account-invoice-address-title {\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  font-size: $account-font-size;\r\n}\r\n\r\n.account-invoice-address-body {\r\n  line-height: 1.5;\r\n}\r\n\r\n// List\r\n\r\n.account-invoice-table {\r\n  .account-wrapper & {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding-right: $account-gutter-inner;\r\n    text-align: left;\r\n    vertical-align: top;\r\n\r\n    &:nth-of-type(0n+3) {\r\n      width: 10%;\r\n    }\r\n\r\n    &:last-of-type {\r\n      width: 160px;\r\n      padding-right: 0;\r\n      text-align: right;\r\n    }\r\n  }\r\n\r\n  td:first-of-type {\r\n    width: 60px + 25px;\r\n  }\r\n}\r\n\r\n.account-invoice-item-thumbnail {\r\n  width: 60px;\r\n  height: auto;\r\n}\r\n\r\n.account-invoice-item-name {\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\n.account-invoice-total-title {\r\n  font-weight: bold;\r\n}\r\n\r\n// Totals\r\n\r\n.account-invoice-totals {\r\n  .account-wrapper & {\r\n    width: auto;\r\n    margin-top: 0;\r\n    margin-left: auto;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    padding-right: $account-gutter-inner;\r\n\r\n    &:last-of-type {\r\n      width: 160px;\r\n      padding-right: 0;\r\n      text-align: right;\r\n    }\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/settings */\r\n.account-page-settings {\r\n  .alert:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n\r\n  .account-content {\r\n    padding-top: $account-gutter-inner;\r\n    border-top: 1px solid $account-border-color;\r\n  }\r\n}\r\n\r\n.account-settings-form {\r\n  @extend %clearfix;\r\n  padding-top: $account-gutter-inner;\r\n\r\n  .form-field {\r\n    float: left;\r\n    width: 50%;\r\n    padding-right: $account-gutter-inner / 2;\r\n    vertical-align: top;\r\n\r\n    &:nth-of-type(2n+0) {\r\n      padding-right: 0;\r\n      padding-left: $account-gutter-inner / 2;\r\n    }\r\n  }\r\n\r\n  .form-actions {\r\n    padding-top: $account-gutter-inner;\r\n  }\r\n}\r\n\r\n\r\n/* scss-combine:account/pages/auth-login */\r\n\r\n.account-page-login .alert {\r\n  max-width: 860px;\r\n  margin-top: 0;\r\n  margin-right: auto;\r\n  margin-bottom: $account-gutter;\r\n  margin-left: auto;\r\n}\r\n\r\n.account-login-wrapper {\r\n  max-width: 860px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    display: table;\r\n    width: 100%;\r\n    table-layout: fixed;\r\n  }\r\n}\r\n\r\n.account-page-login .account-sub-heading {\r\n  margin: 0 0 20px;\r\n}\r\n\r\n.account-login,\r\n.account-create {\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    display: table-cell;\r\n    vertical-align: top;\r\n  }\r\n}\r\n\r\n// Login Form\r\n\r\n.account-login {\r\n  @media screen and (max-width: $account-breakpoint-small - 1) {\r\n    margin-bottom: $account-gutter;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    padding: $account-gutter-inner (30px + $account-gutter-inner) $account-gutter-inner 0;\r\n  }\r\n}\r\n\r\n.account-login-button {\r\n  margin-right: $account-gutter-inner;\r\n}\r\n\r\n// New Account\r\n\r\n.account-create {\r\n  padding: $account-gutter-inner;\r\n  background: $account-card-background-color;\r\n}\r\n\r\n.account-create-intro {\r\n  &:empty {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.account-create-facts {\r\n  padding-left: 20px;\r\n  margin-bottom: 30px;\r\n  list-style: disc;\r\n\r\n  li:empty {\r\n    display: none;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/auth-forgot */\r\n.account-page-forgot .account-body {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  text-align: center;\r\n  float: none;\r\n}\r\n\r\n.account-forgot-form {\r\n  display: table;\r\n  width: 100%;\r\n  margin-top: $account-gutter;\r\n\r\n  .form-field,\r\n  .form-actions {\r\n    display: table-cell;\r\n    text-align: left;\r\n    vertical-align: bottom;\r\n  }\r\n\r\n  .form-actions {\r\n    width: 1px;\r\n    padding-left: 10px;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/auth-create */\r\n.account-page-create {\r\n  .account-header {\r\n    padding-bottom: $account-gutter-inner;\r\n    margin-bottom: $account-gutter;\r\n    border-bottom: 1px solid $account-border-color;\r\n  }\r\n\r\n  .account-body {\r\n    max-width: 860px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n  }\r\n}\r\n\r\n.account-create-form {\r\n  .g-recaptcha > div {\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    .form-field {\r\n      float: left;\r\n      width: 50%;\r\n      padding-right: $account-gutter-inner;\r\n\r\n      &:nth-of-type(2n) {\r\n        padding-right: 0;\r\n        padding-left: $account-gutter-inner;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.account-create-details,\r\n.account-create-address {\r\n  @extend %clearfix;\r\n  padding-bottom: $account-gutter-inner;\r\n  margin-bottom: $account-gutter;\r\n  border-bottom: 1px solid $account-border-color;\r\n}\r\n\r\n.account-create-form-actions {\r\n  text-align: center;\r\n}\r\n\r\n.account-create-captcha {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n\r\n  @media screen and (max-width: $account-breakpoint-small - 1) {\r\n    margin-bottom: $account-gutter-inner;\r\n  }\r\n\r\n  @media screen and (min-width: $account-breakpoint-small) {\r\n    margin-right: $account-gutter-inner;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/auth-created */\r\n.account-page-created .account-body {\r\n  float: none;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  text-align: center;\r\n\r\n  p {\r\n    margin-bottom: $account-gutter;\r\n    line-height: 1.5;\r\n  }\r\n\r\n  em {\r\n    font-family: monospace;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    background: $account-card-background-color;\r\n  }\r\n}\r\n\r\n/* scss-combine:account/pages/auth-new-password */\r\n.account-page-new-password .account-content {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n\r\n.new-password-requirements {\r\n  margin-bottom: $account-gutter;\r\n  text-align: center;\r\n}\r\n\r\n\r\n/* scss-combine:account/pages/gift-certificate */\r\n// (optional) gift card nav\r\n\r\n@if ($giftcard-nav-use-default-styles) {\r\n  .giftcard-nav {\r\n    padding: $account-gutter * 2;\r\n    margin-bottom: $account-gutter * 2;\r\n    text-align: center;\r\n  }\r\n\r\n  .giftcard-nav-item {\r\n    display: inline-block;\r\n    margin: 0 1em;\r\n    color: $account-link-color;\r\n\r\n    &.is-active { color: $account-text-color; }\r\n  }\r\n}\r\n\r\n.giftcard-heading-container {\r\n  margin-bottom: $account-gutter * 2;\r\n  text-align: center;\r\n}\r\n\r\n\r\n// Purchase\r\n\r\n.giftcard-form-help-message {\r\n  display: block;\r\n  margin-top: 6px;\r\n}\r\n\r\n.giftcard-form-preview {\r\n  iframe { width: 100%; }\r\n}\r\n\r\n.giftcard-single-theme {\r\n  display: none;\r\n}\r\n\r\n\r\n// Check balance\r\n\r\n.giftcard-balance-container {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-giftcard-balance {\r\n  position: relative;\r\n\r\n  .form-field-title {\r\n    position: absolute;\r\n    left: -9999px;\r\n  }\r\n\r\n  .form-field-control {\r\n    display: block;\r\n\r\n    @media screen and (min-width: 600px + ($account-gutter-inner * 2)) {\r\n      margin-right: calc(30% + #{$account-gutter-inner});\r\n    }\r\n  }\r\n\r\n  .form-actions {\r\n    @media screen and (min-width: 600px + ($account-gutter-inner * 2)) {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      width: 30%;\r\n    }\r\n  }\r\n\r\n  .button {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n\r\n// Redeem\r\n\r\n.giftcard-redeem-steps {\r\n  line-height: 1.5;\r\n\r\n  li { margin-bottom: 0.75em; }\r\n}\r\n\r\n\r\n/* scss-combine:components/pages-account-auth */\r\n// ================================================================ */\r\n// Global Core Overrides:\r\n\r\n// Remove any select wrapper extras\r\n[class*='account'] .form-selected-text { display: none; }\r\n\r\n.account-header .account-heading {\r\n  @extend .page-title;\r\n  display: block;\r\n}\r\n\r\n.account-wrapper select.form-input {\r\n  @extend %form-select;\r\n}\r\n\r\n.account-pages { margin-top: $pad-vertical * 2; }\r\n\r\n.account-sub-heading {\r\n  @extend .footer-block-title;\r\n}\r\n\r\n// ================================================================ */\r\n// Auth Pages Overrides\r\n\r\n.auth-pages {\r\n  @extend %clearfix;\r\n  padding-bottom: 6.667rem;  // 100px\r\n}\r\n\r\n.account-forgot-form .button { margin-bottom: 0; }\r\n\r\n// ---------------------------------------------------------------- */\r\n// Create account page:\r\n\r\n.auth-pages {\r\n  max-width: rem-calc(860);\r\n  margin: 0 auto;\r\n}\r\n\r\n.account-create {\r\n  padding: $pad-vertical;\r\n\r\n  .button { margin-bottom: 0; }\r\n}\r\n\r\n.account-page-create {\r\n  .account-header { display: none; }\r\n  .account-body { max-width: inherit; }\r\n}\r\n\r\n// ================================================================ */\r\n// Account Pages Overrides\r\n\r\n.account-nav-list {\r\n  margin-top: 0;\r\n  margin-bottom: 4rem; // 60px;\r\n}\r\n\r\n.account-body { margin-bottom: 6.6667rem; } // 100px;\r\n.account-empty { margin-bottom: 1em; }\r\n\r\n@include breakpoint(max-width 500px) {\r\n  .account-item-title-large { margin-top: 1.333rem; }\r\n  .account-item-body { display: table-row; }\r\n}\r\n\r\n// Buttons like add/edit on addresses page\r\n.account-item-actions {\r\n  vertical-align: middle;\r\n  .button { margin-bottom: 0; }\r\n}\r\n\r\n// Addresses are displayed as list items for now, so remove default styling\r\n.account-pages ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Account settings form - some responsive styling:\r\n\r\n.account-settings-form {\r\n  @include breakpoint(max-width 500px) {\r\n    .form-field {\r\n      display: block;\r\n      width: 100%;\r\n      padding: 0;\r\n    }\r\n    .form-field:nth-of-type(2n+0) { padding: 0; }\r\n  }\r\n}\r\n// ---------------------------------------------------------------- */\r\n// Account product lists.\r\n\r\n// Recently Viewed\r\n.account-product-wrapper {\r\n  .account-product-item {\r\n    position: relative;\r\n    padding: 1em;\r\n    margin-bottom: 4rem;\r\n    text-align: center;\r\n\r\n    @include breakpoint(875px) { @include gallery(6); }\r\n    @include breakpoint(1250px) { @include gallery(4); }\r\n    @include breakpoint(1600px) { @include gallery(3); }\r\n  }\r\n\r\n  .account-product-item-title { @extend .item-title; }\r\n  .account-product-item-brand { display: none; }\r\n}\r\n\r\n.account-product-item-details { @extend %product-item-prices; }\r\n.account-share-wishlist-url { margin-bottom: 4rem; }\r\n\r\n// ---------------------------------------------------------------- */\r\n// Return request form:\r\n\r\n.account-return-table {\r\n  .form-field { margin-top: 0; }\r\n  .form-field-title { display: none; }\r\n}\r\n\r\n\r\n/* scss-combine:components/gift-certificates */\r\n// ================================================================ */\r\n// Gift Certificate Pages\r\n\r\n.page-giftcard {\r\n  .post-title { display: none; }\r\n\r\n  .page-sidebar {\r\n    text-align: center;\r\n\r\n    li {\r\n      display: inline-block;\r\n\r\n      &:not(:first-of-type) { margin-left: 1em; }\r\n    }\r\n  }\r\n\r\n  .giftcard-heading { @extend %large-page-title; }\r\n}\r\n\r\n@include breakpoint(max-width 849px) {\r\n  .form-giftcard-balance .form-actions,\r\n  .form-giftcard-balance .form-field-control {\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n@include breakpoint(850px) {\r\n  .form-giftcard-balance .form-actions { width: 40%; }\r\n  .form-giftcard-balance .form-field-control { margin-right: calc(40%); }\r\n}\r\n\r\n// ---------------------------------------------------------------- */\r\n// Purchase page\r\n\r\n.page-giftcard { @extend %page-bottom-pad; }\r\n\r\n.giftcard-nav { display: none; } // Using components/giftcards/navigation instead\r\n\r\n.page-giftcertificates {\r\n  .giftcard-body {\r\n    padding-top: $pad-vertical;\r\n    padding-bottom: $pad-vertical;\r\n  }\r\n}\r\n\r\n.giftcard-form-preview iframe { width: 100%; }\r\n\r\n\r\n/* scss-combine:base/print */\r\n@media print {\r\n  //scss-lint:disable ImportantRule\r\n  // Important required in many instances to override js / inline style\r\n\r\n  .add-to-cart-form-full,\r\n  .share-links-container,\r\n  .products-sidebar,\r\n  .sidebar-nav,\r\n  .main-footer,\r\n  .nav-bar,\r\n  .review-link {\r\n    display: none !important;\r\n  }\r\n\r\n  .page-wrap {\r\n    margin-left: 0 !important;\r\n  }\r\n\r\n  .drawer-wrapper {\r\n    .header-components {\r\n      display: none !important;\r\n    }\r\n\r\n    .store-logo {\r\n    }\r\n  }\r\n\r\n  .product-information,\r\n  .product-inner {\r\n    width: 100% !important;\r\n    max-width: 100% !important;\r\n  }\r\n\r\n  .main-content {\r\n    padding-bottom: 0;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  // Override the sticky business on product pages:\r\n  .product-information {\r\n    position: static !important;\r\n  }\r\n\r\n  .page-wrap {\r\n    left: 0 !important;\r\n  }\r\n  \r\n\r\n \r\n}\r\n\r\n// ================================================================ */\r\n"}
